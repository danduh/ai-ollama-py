{
  "swagger": "2.0",
  "info": {
    "title": "PowerFlex Manager REST API",
    "version": "1.0",
    "description": "Describes the API for PowerFlex Manager"
  },
  "tags": [
    {
      "name": "Alert Connector"
    },
    {
      "name": "Appliance"
    },
    {
      "name": "Authenticate"
    },
    {
      "name": "Compatibility"
    },
    {
      "name": "Component"
    },
    {
      "name": "CoreLCM"
    },
    {
      "name": "Credential"
    },
    {
      "name": "Datastores"
    },
    {
      "name": "Deployment"
    },
    {
      "name": "Device"
    },
    {
      "name": "Device Group"
    },
    {
      "name": "DHCP"
    },
    {
      "name": "Discovery Request"
    },
    {
      "name": "Firmware Repository"
    },
    {
      "name": "Job History"
    },
    {
      "name": "Job Manager"
    },
    {
      "name": "License"
    },
    {
      "name": "Log"
    },
    {
      "name": "Managed Device"
    },
    {
      "name": "Network"
    },
    {
      "name": "Nodepool"
    },
    {
      "name": "NTP"
    },
    {
      "name": "OS Repository"
    },
    {
      "name": "Proxy"
    },
    {
      "name": "Resource Group"
    },
    {
      "name": "Server"
    },
    {
      "name": "Service Template"
    },
    {
      "name": "Template"
    },
    {
      "name": "Timezone"
    },
    {
      "name": "Troubleshooting Bundle"
    },
    {
      "name": "User"
    },
    {
      "name": "Volumes"
    },
    {
      "name": "Wizard Status"
    }
  ],
  "host": "[ip-address]",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "consumes": [
    "application/json",
    "application/xml"
  ],
  "paths": {
    "/AlertConnector/deregister": {
      "post": {
        "summary": "De-register alert connector",
        "operationId": "post-AlertConnector-deregister",
        "responses": {
          "200": {
            "description": "Good request"
          },
          "400": {
            "description": "Invalid parameter values",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "Login information not specified, or forbidden (user does not have privileges)",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "De-registers the Secure Remote Services connector.",
        "tags": [
          "Alert Connector"
        ]
      }
    },
    "/AlertConnector/enablesnmpandipmi": {
      "post": {
        "summary": "Enables SNMP and IPMI",
        "operationId": "post-AlertConnector-enablesnmpandipmi",
        "responses": {
          "200": {
            "description": "Good request"
          },
          "400": {
            "description": "Invalid parameter values",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "Login information not specified, or forbidden (user does not have privileges)",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Enables SNMP and IPMI.",
        "tags": [
          "Alert Connector"
        ]
      }
    },
    "/AlertConnector/getallsnmpalerts": {
      "get": {
        "summary": "Get all SNMP alerts",
        "tags": [
          "Alert Connector"
        ],
        "responses": {
          "200": {
            "description": "Good request",
            "schema": {
              "type": "object"
            },
            "examples": {
              "example-1": {}
            }
          },
          "400": {
            "description": "Invalid parameter values",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "Login information not specified, or forbidden (user does not have privileges)",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "501": {
            "description": "Not Implemented",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-AlertConnector-getallsnmpalerts",
        "description": "Retrieves all the SNMP alerts.\n\nResponse Content-Type: application/xml, application/json"
      }
    },
    "/AlertConnector/registersettings": {
      "post": {
        "summary": "Register alert connector settings",
        "operationId": "post-AlertConnector-registersettings",
        "responses": {
          "200": {
            "description": "Good request",
            "schema": {
              "$ref": "#/definitions/SRSConnectorSettings"
            }
          },
          "400": {
            "description": "Invalid parameter values",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "Login information not specified, or forbidden (user does not have privileges)",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Saves the Secure Remote Services connector configuration. This can be performed by Admin or Read-only users.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SRSConnectorSettings"
            },
            "description": "Secure Remote Services connector configuration to save"
          }
        ],
        "tags": [
          "Alert Connector"
        ]
      }
    },
    "/AlertConnector/settings": {
      "get": {
        "summary": "Get alert connector settings",
        "tags": [
          "Alert Connector"
        ],
        "responses": {
          "200": {
            "description": "Good request",
            "schema": {
              "$ref": "#/definitions/SRSConnectorSettings"
            }
          },
          "400": {
            "description": "Invalid parameter values",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "Login information not specified, or forbidden (user does not have privileges)",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-AlertConnector-settings",
        "description": "Retrieves the current configuration for Secure Remote Services, and returns the object from registersettings. This can be performed by Admin or Read-only users.\n\nResponse Content-Type: application/xml, application/json"
      }
    },
    "/AlertConnector/starttimerservice": {
      "post": {
        "summary": "Start alert connector timer service",
        "operationId": "post-AlertConnector-starttimerservice",
        "responses": {
          "200": {
            "description": "Good request"
          },
          "400": {
            "description": "Invalid parameter values",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "Login information not specified, or forbidden (user does not have privileges)",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Starts the Secure Remote Services Connector Timer.\n\n",
        "tags": [
          "Alert Connector"
        ]
      }
    },
    "/AlertConnector/suspend": {
      "parameters": [],
      "post": {
        "summary": "Suspend alerts",
        "operationId": "post-AlertConnector-suspend-duration",
        "responses": {
          "200": {
            "description": "Good request"
          },
          "400": {
            "description": "Invalid parameter values",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "Login information not specified, or forbidden (user does not have privileges)",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Suspends the alerts for a specified amount of time.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "string",
              "description": "Duration for which alert connector has to be suspended"
            }
          }
        ],
        "tags": [
          "Alert Connector"
        ]
      }
    },
    "/AlertConnector/testidracalerts": {
      "post": {
        "summary": "Test iDRAC alerts",
        "operationId": "post-AlertConnector-testidracalerts",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid parameter values",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "Login information not specified, or forbidden (user does not have privileges)",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Generates the iDRAC test alerts for all configured IDRACs.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SRSConnectorTestAlerts"
            },
            "description": "iDRAC test alerts for all the configured IDRACs to generate"
          }
        ],
        "tags": [
          "Alert Connector"
        ]
      }
    },
    "/AlertConnector/updatesnmpalerts": {
      "post": {
        "summary": "Update SNMP alerts",
        "operationId": "post-AlertConnector-updatesnmpalerts",
        "responses": {
          "200": {
            "description": "Good request"
          },
          "400": {
            "description": "Invalid parameter values",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "Login information not specified, or forbidden (user does not have privileges)",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Updates the srs_sent field of the SNMP alerts. Before running SNMP alert updates, retrieve all the SNMP alerts. ",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateSnmpAlerts"
            },
            "description": "srs_sent field of the SNMP alerts to update"
          }
        ],
        "tags": [
          "Alert Connector"
        ]
      }
    },
    "/Credential": {
      "get": {
        "summary": "Get a list of all credentials",
        "tags": [
          "Credential"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/credentialList"
            },
            "examples": {
              "example-1": {}
            }
          }
        },
        "operationId": "get-Credential",
        "description": "Retrieve a list of all credentials.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "Filter on credential\ntype.",
            "type": "string"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Specify sort columns in a comma-separated list of column names to sort. Default order is\nascending. Column name can be prefixed with a minus sign to indicate descending for that column."
          },
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Specify filter criteria, Example co,label,default"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "Specify pagination offset."
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Specify page limit, cannot exceed the system maximum limit.",
            "default": 50
          }
        ]
      },
      "post": {
        "summary": "Add a new credential",
        "operationId": "post-Credential",
        "responses": {
          "201": {
            "description": "Credential created.",
            "schema": {
              "$ref": "#/definitions/asmCredential"
            }
          },
          "400": {
            "description": "Bad Request, verify that credential data object is correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Add a new credential. \n\nResponse Content-Type: application/xml, application/json\n\n**Caution:** This API only supports XML for request payloads. Both JSON and XML are supported for response payloads.",
        "consumes": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/asmCredential"
            },
            "description": "Credential to create"
          }
        ],
        "tags": [
          "Credential"
        ]
      },
      "parameters": []
    },
    "/Credential/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Id of credential"
        }
      ],
      "get": {
        "summary": "Get credential by ID",
        "tags": [
          "Credential"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/asmCredential"
            }
          },
          "404": {
            "description": "Credential not found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Credential-id",
        "description": "Find credential by type and id.\n\nResponse Content-Type: application/xml, application/json"
      },
      "put": {
        "summary": "Update an existing credential",
        "operationId": "put-Credential-id",
        "responses": {
          "200": {
            "description": "Update completed successfully.",
            "schema": {
              "$ref": "#/definitions/asmCredential"
            }
          },
          "400": {
            "description": "Bad Request, verify that credential data object is correct.",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "Credential to be updated was not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Updates an existing credential.\n\nResponse Content-Type: application/xml, application/json\n\n**CAUTION:** This API only supports XML for request payloads. Both JSON and XML are supported for response payloads.",
        "consumes": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/asmCredential"
            },
            "description": "Credential to update"
          }
        ],
        "tags": [
          "Credential"
        ]
      },
      "delete": {
        "summary": "Delete a credential",
        "operationId": "delete-Credential-id",
        "responses": {
          "204": {
            "description": "Delete completed successfully.",
            "schema": {
              "type": "null"
            }
          },
          "400": {
            "description": "Bad Request, verify credential type and id is correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Deletes an existing credential.\n\nResponse Content-Type: application/xml, application/json",
        "tags": [
          "Credential"
        ]
      }
    },
    "/DHCP": {
      "get": {
        "summary": "Get DHCP settings",
        "tags": [
          "DHCP"
        ],
        "responses": {
          "200": {
            "description": "Retrieved DHCP settings from appliance successfully.",
            "schema": {
              "$ref": "#/definitions/dhcpSettings"
            }
          },
          "500": {
            "description": "Unable to get DHCP settings from the appliance.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-DHCP",
        "description": "Retrieve DHCP settings from virtual appliance.\n\nResponse Content-Type: application/json, application/xml"
      },
      "put": {
        "summary": "Update DHCP settings",
        "operationId": "put-DHCP",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "null"
            }
          }
        },
        "description": "Apply DHCP settings on virtual appliance.\n\nResponse Content-Type: application/json, application/xml",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/dhcpSettings"
            },
            "description": "DHCPEntity object that needs to be set on appliance."
          }
        ],
        "tags": [
          "DHCP"
        ]
      },
      "parameters": []
    },
    "/Deployment": {
      "get": {
        "summary": "Get deployment objects",
        "tags": [
          "Deployment"
        ],
        "responses": {
          "200": {
            "description": "All Deployment retrieved on filter, sort, paginate.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Deployment"
              }
            }
          }
        },
        "operationId": "get-Deployment",
        "description": "Retrieve all Deployment objects with filter, sort, paginate which returns Array of Deployment.class.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Valid sort columns: name,createdBy,createdDate,updatedBy,updatedDate,expirationDate,deploymentDesc,marshalledTemplateData,health"
          },
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Valid filter columns: name,createdBy,createdDate,updatedBy,updatedDate,expirationDate,deploymentDesc,marshalledTemplateData,health"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "Pagination Offset",
            "default": 0
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Page Limit",
            "default": 50
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "full",
            "description": "Use full templates including resources in response.",
            "default": false
          }
        ]
      },
      "post": {
        "summary": "Create a deployment",
        "operationId": "post-Deployment",
        "responses": {
          "201": {
            "description": "Deployment created.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "400": {
            "description": "Invalid parameters to create Deployment or problems with the\nResource Adapters.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "409": {
            "description": "Deployment already exists.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Create new Deployment.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Deployment to create"
          }
        ],
        "tags": [
          "Deployment"
        ]
      },
      "parameters": []
    },
    "/Deployment/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Deployment Id"
        }
      ],
      "get": {
        "summary": "Get a deployment",
        "tags": [
          "Deployment"
        ],
        "responses": {
          "200": {
            "description": "Deployment retrieved.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "get-Deployment-id",
        "description": "Retrieve Deployment based on deployment ID.\n\nResponse Content-Type: application/xml, application/json"
      },
      "put": {
        "summary": "Update a deployment",
        "operationId": "put-Deployment-id",
        "responses": {
          "204": {
            "description": "Deployment updated.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "400": {
            "description": "Invalid parameters to update Deployment or problem with the Resource Adapters.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Deployment not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Update Deployment.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Deployment to update"
          }
        ],
        "tags": [
          "Deployment"
        ]
      },
      "delete": {
        "summary": "Delete a deployment",
        "operationId": "delete-Deployment-id",
        "responses": {
          "204": {
            "description": "Deployment deleted.",
            "schema": {
              "type": "null"
            }
          },
          "500": {
            "description": "Unable to delete Deployment.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Delete Deployment -- this operation is idempotent. The operation removes the specified deployment from the appliance, but does not tear down the cluster resources.\n\nResponse Content-Type: application/xml, application/json",
        "tags": [
          "Deployment"
        ]
      }
    },
    "/Deployment/{id}/firmware/compliancereport": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get firmware compliance reports for a deployment",
        "tags": [
          "Deployment"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirmwareComplianceReport"
            }
          },
          "401": {
            "description": "No login information specified in the request.",
            "schema": {
              "$ref": "#/definitions/FirmwareComplianceReport"
            }
          },
          "403": {
            "description": "User does not have privileges to access this operation.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Deployment-id-firmware-compliancereport",
        "description": "Returns an Array of FirmwareComplianceReports for the Devices that are in the Deployment.\n\nResponse Content-Type: application/xml, application/json"
      }
    },
    "/Deployment/device/{deviceId}": {
      "parameters": [
        {
          "type": "string",
          "name": "deviceId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get deployments for a device",
        "tags": [
          "Deployment"
        ],
        "responses": {
          "200": {
            "description": "Deployments retrieved.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Deployment"
              }
            }
          },
          "404": {
            "description": "Deployments not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Deployment-device-deviceId",
        "description": "Retrieve all Deployments for device.\n\nResponse Content-Type: application/xml, application/json"
      },
      "delete": {
        "summary": "Delete a deployment device",
        "operationId": "delete-Deployment-device-deviceId",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Delete a deployment device",
        "tags": [
          "Deployment"
        ]
      }
    },
    "/Deployment/export/csv": {
      "get": {
        "summary": "Export deployments in CSV format",
        "tags": [
          "Deployment"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "No login information specified in the request.",
            "schema": {
              "type": [
                "object",
                "null"
              ]
            }
          },
          "403": {
            "description": "User does not have privileges to access this operation.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Deployment-export-csv",
        "description": "Exports all Deployments in .csv format.\n\nResponse Content-Type: application/octet-stream"
      }
    },
    "/Deployment/filter/{numOfDeployments}": {
      "parameters": [
        {
          "type": "integer",
          "name": "numOfDeployments",
          "in": "path",
          "required": true,
          "description": "Number of deployments"
        }
      ],
      "post": {
        "summary": "Find available servers for template components",
        "operationId": "post-Deployment-filter-numOfDeployments",
        "responses": {
          "200": {
            "description": "DeploymentFilterResponse retrieved.",
            "schema": {
              "$ref": "#/definitions/DeploymentFilterResponse"
            }
          },
          "400": {
            "description": "Invalid Parameters to getAvailableServers.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Unable to find available servers.",
            "schema": {
              "type": "object"
            }
          }
        },
        "description": "Find available servers for template components.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            },
            "description": "Service template"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "unique",
            "description": "If true (the default), only assign a server to one component per deployment. Otherwise the\nsame server may be assigned to multiple components."
          }
        ],
        "tags": [
          "Deployment"
        ]
      }
    },
    "/Deployment/network/{networkId}": {
      "parameters": [
        {
          "type": "string",
          "name": "networkId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get deployments for a network",
        "tags": [
          "Deployment"
        ],
        "responses": {
          "200": {
            "description": "Deployments retrieved.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Deployment"
              }
            }
          },
          "404": {
            "description": "Deployments not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Deployment-network-networkId",
        "description": "Retrieve all Deployments for network.\n\nResponse Content-Type: application/xml, application/json"
      }
    },
    "/Deployment/serverNetworking/{serviceId}/{serverId}": {
      "parameters": [
        {
          "type": "string",
          "name": "serviceId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "serverId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get networks for a server in a deployment",
        "tags": [
          "Deployment"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerNetworkObjects"
            }
          },
          "401": {
            "description": "No login information specified in the request.",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "User does not have privileges to access this operation.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Deployment-serverNetworking-serviceId-serverId",
        "description": "Returns the networks that a server in a deployment is using.\n\nResponse Content-Type: application/xml, application/json"
      }
    },
    "/Deployment/summaries": {
      "get": {
        "summary": "Get all deployment summaries",
        "tags": [
          "Deployment"
        ],
        "responses": {
          "200": {
            "description": "All Deployment retrieved on filter, sort, paginate.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Deployment"
              }
            }
          }
        },
        "operationId": "get-Deployment-summaries",
        "description": "Retrieve all Deployment objects with filter, sort, paginate which returns Array of Deployment.class.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Valid sort columns: name,createdBy,cr\neatedDate,updatedBy,updatedDate,expirationDate,deploymentDesc,marshalledTemplateData,health"
          },
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Valid filter columns: name,createdBy,createdDate,updatedBy,updatedDate,expirationDate,deploymentDesc,marshalledTemplateData,health"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "default": 0,
            "description": "Pagination Offset"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Page Limit",
            "default": 50
          }
        ]
      }
    },
    "/Deployment/users": {
      "delete": {
        "summary": "Delete deployment users",
        "operationId": "delete-Deployment-users",
        "responses": {
          "204": {
            "description": "User objects deleted from Deployment.",
            "schema": {
              "type": "null"
            }
          },
          "500": {
            "description": "Unable to delete User objects from Deployment.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Delete User objects from Deployment objects.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "array",
            "in": "query",
            "name": "userId",
            "description": "Valid UserIds"
          }
        ],
        "tags": [
          "Deployment"
        ]
      }
    },
    "/DeviceGroup": {
      "get": {
        "summary": "Get device groups",
        "tags": [
          "Device Group"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeviceGroup"
              }
            }
          }
        },
        "operationId": "get-DeviceGroup",
        "description": "Retrieve all DeviceGroup from Inventory with filter, sort, paginate, return DeviceGroup which contains list of Managed Devices and User if it exists.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Valid sort columns: name,description,cr\neatedBy,createdDate,updatedBy,updatedDate"
          },
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Valid filter columns: name,description,u\nsers,devices,create\ndBy,updatedBy,createdDate,updatedDate"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "Pagination Offset",
            "default": 0
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Page Limit",
            "default": 50
          }
        ]
      },
      "post": {
        "summary": "Create device group",
        "operationId": "post-DeviceGroup",
        "responses": {
          "201": {
            "description": "DeviceGroup created in inventory.",
            "schema": {
              "$ref": "#/definitions/DeviceGroup"
            }
          },
          "400": {
            "description": "Invalid DeviceGroup object to create in inventory, first error encountered error causes an error response to return. Call does not return a list of errors.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "409": {
            "description": "DeviceGroup already exists in inventory, first encountered error causes an error response to return. Call does not return a list of errors.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Create DeviceGroup in Inventory.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeviceGroup"
            }
          }
        ],
        "tags": [
          "Device Group"
        ]
      },
      "parameters": []
    },
    "/DeviceGroup/{refId}": {
      "parameters": [
        {
          "type": "string",
          "name": "refId",
          "in": "path",
          "required": true,
          "description": "Reference Id"
        }
      ],
      "get": {
        "summary": "Get device group by refId",
        "tags": [
          "Device Group"
        ],
        "responses": {
          "200": {
            "description": "DeviceGroup retrieved from inventory.",
            "schema": {
              "$ref": "#/definitions/DeviceGroup"
            }
          },
          "404": {
            "description": "DeviceGroup not found in inventory.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-DeviceGroup-refId",
        "description": "Retrieve DeviceGroup from Inventory based on refId.\n\nResponse Content-Type: application/xml, application/json"
      },
      "put": {
        "summary": "Update a device group",
        "operationId": "put-DeviceGroup-refId",
        "responses": {
          "201": {
            "description": "DeviceGroup updated in inventory.",
            "schema": {
              "$ref": "#/definitions/DeviceGroup"
            }
          },
          "400": {
            "description": "Invalid DeviceGroup id.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "DeviceGroup not found in inventory."
          }
        },
        "description": "Update DeviceGroup in Inventory\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeviceGroup"
            },
            "description": "DeviceGroup to update"
          }
        ],
        "tags": [
          "Device Group"
        ]
      },
      "delete": {
        "summary": "",
        "operationId": "delete-DeviceGroup-refId",
        "responses": {
          "204": {
            "description": "DeviceGroup deleted from inventory."
          },
          "400": {
            "description": "Unable to delete DeviceGroup from inventory.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Delete DeviceGroup from Inventory.\n\nResponse Content-Type: application/xml, application/json",
        "tags": [
          "Device Group"
        ]
      }
    },
    "/DiscoveryRequest": {
      "post": {
        "summary": "Discover devices",
        "operationId": "post-DiscoveryRequest",
        "responses": {
          "201": {
            "description": "Create the discovery resource.",
            "schema": {
              "$ref": "#/definitions/DiscoveryRequest"
            }
          },
          "400": {
            "description": "Bad Request, verify Discovery request object is correct."
          }
        },
        "description": "Discover devices of IP range. \n\nThis is the primary API for discovering a device.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DiscoveryRequest"
            }
          }
        ],
        "tags": [
          "Discovery Request"
        ]
      },
      "get": {
        "summary": "Get discovery requests",
        "operationId": "get-DiscoveryRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscoveryRequest"
              }
            }
          },
          "400": {
            "description": "Problem with a query parameter, check response for details."
          }
        },
        "description": "Retrieve an Array of DiscoveryRequest.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Valid sort columns: id,status,statusMessage"
          },
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Valid filter columns: id,status,statusMessage"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "pagination offset"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "page limit"
          }
        ],
        "tags": [
          "Discovery Request"
        ]
      },
      "parameters": []
    },
    "/DiscoveryRequest/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Discovery ID"
        }
      ],
      "get": {
        "summary": "Get a device from the inventory",
        "tags": [
          "Discovery Request"
        ],
        "responses": {
          "200": {
            "description": "Discovery result retrieved for the job.",
            "schema": {
              "$ref": "#/definitions/DiscoveryRequest"
            }
          },
          "404": {
            "description": "Job not found in the discovery.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-DiscoveryRequest-id",
        "description": "Retrieve Device from Inventory based on Id.\n\nThis API returns the DiscoveryRequest object. Once the DiscoveryRequest operation is complete, the DiscoveryRequest object is no longer retrievable. The API then returns a 404 status code. At this point, you need to look up the discovery device by using /ManagedDevice/{refId} GET (with a service tag).\n\nResponse Content-Type: application/xml, application/json"
      },
      "delete": {
        "summary": "Delete device from discovery result",
        "operationId": "delete-DiscoveryRequest-id",
        "responses": {
          "204": {
            "description": "Job deleted from inventory.",
            "schema": {
              "type": "null"
            }
          }
        },
        "description": "Delete Device from Discover result -- this operation is idempotent.\n\nResponse Content-Type: application/xml, application/json",
        "tags": [
          "Discovery Request"
        ]
      }
    },
    "/DiscoveryRequest/discoveryresult/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ref_id"
        }
      ],
      "get": {
        "summary": "Get an array of discovery results",
        "tags": [
          "Discovery Request"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiscoveryResult"
              }
            }
          }
        },
        "operationId": "get-DiscoveryRequest-discoveryresult-id",
        "description": "Retrieve an Array of DiscoveryResults.\n\nResponse Content-Type: application/xml, application/json"
      }
    },
    "/DiscoveryRequest/listdevices": {
      "post": {
        "summary": "",
        "operationId": "post-DiscoveryRequest-listdevices",
        "responses": {
          "202": {
            "description": "Create the Discovery resource.",
            "schema": {
              "$ref": "#/definitions/DiscoveryRequest"
            }
          },
          "400": {
            "description": "Bad Request, verify that Discovery request object is correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Discover devices of IP range.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DiscoveryRequest"
            }
          }
        ],
        "tags": [
          "Discovery Request"
        ]
      }
    },
    "/FirmwareRepository": {
      "get": {
        "summary": "Get all firmware repositories",
        "tags": [
          "Firmware Repository"
        ],
        "responses": {
          "200": {
            "description": "All FirmwareRepository retrieved on filter, sort, paginate.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FirmwareRepository"
              }
            }
          }
        },
        "operationId": "get-FirmwareRepository",
        "description": "Retrieve all FirmwareRepository with filter, sort, paginate which returns Array of firmwarerepository.class.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Sort Column"
          },
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Filter Criteria"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "Pagination Offset",
            "default": 0
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Page Limit",
            "default": 50
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "related",
            "description": "Hydrate related objects"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "bundles",
            "description": "Hydrate software bundle objects"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "components",
            "description": "Hydrate software component objects"
          }
        ]
      },
      "post": {
        "summary": "Add firmware repository",
        "operationId": "post-FirmwareRepository",
        "responses": {
          "201": {
            "description": "Firmware repository created.",
            "schema": {
              "$ref": "#/definitions/FirmwareInventory"
            }
          },
          "400": {
            "description": "Bad Request, verify that firmware repository data object is correct.",
            "schema": {
              "type": "object"
            }
          }
        },
        "description": "Add a new firmware repository.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FirmwareRepository"
            },
            "description": "Firmware repository to create"
          }
        ],
        "tags": [
          "Firmware Repository"
        ]
      },
      "parameters": []
    },
    "/FirmwareRepository/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Repo Id"
        }
      ],
      "get": {
        "summary": "Get a firmware repository",
        "tags": [
          "Firmware Repository"
        ],
        "responses": {
          "200": {
            "description": "Retrieved.",
            "schema": {
              "$ref": "#/definitions/FirmwareRepository"
            }
          },
          "400": {
            "description": "Bad Request, verify that id is correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Bad Request, verify that id is correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-FirmwareRepository-id",
        "description": "Retrieve an individual firmware repository.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "related",
            "description": "Hydrate related objects"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "bundles",
            "description": "Hydrate software bundle objects"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "components",
            "description": "Hydrate software component objects"
          }
        ]
      },
      "put": {
        "summary": "Update a firmware repository",
        "operationId": "put-FirmwareRepository-id",
        "responses": {
          "200": {
            "description": "Update completed successfully.",
            "schema": {
              "$ref": "#/definitions/FirmwareRepository"
            }
          },
          "400": {
            "description": "Bad Request, verify that credential data object is correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Credential to update was not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Updates an existing FirmwareRepository.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FirmwareRepository"
            },
            "description": "FirmwareRepository to update"
          }
        ],
        "tags": [
          "Firmware Repository"
        ]
      },
      "delete": {
        "summary": "Delete firmware repository",
        "operationId": "delete-FirmwareRepository-id",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Delete firmware repository",
        "tags": [
          "Firmware Repository"
        ]
      }
    },
    "/FirmwareRepository/connection": {
      "post": {
        "summary": "Test connection to firmware repository remote path",
        "operationId": "post-FirmwareRepository-connection",
        "responses": {
          "201": {
            "description": "Connection to remote path successful.",
            "schema": {
              "$ref": "#/definitions/FirmwareRepository"
            }
          }
        },
        "description": "Tests the connection to a remote path.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FirmwareRepository"
            }
          }
        ],
        "tags": [
          "Firmware Repository"
        ]
      }
    },
    "/FirmwareRepository/esrslist": {
      "get": {
        "summary": "Get firmware repositories on Secure Remote Services",
        "tags": [
          "Firmware Repository"
        ],
        "responses": {
          "200": {
            "description": "All FirmwareRepository retrieved on filter, sort, paginate.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FirmwareRepository"
              }
            }
          }
        },
        "operationId": "get-FirmwareRepository-esrslist",
        "description": "Retrieve FirmwareRepositories available on Secure Remote Services.\n\nResponse Content-Type: application/xml, application/json"
      }
    },
    "/FirmwareRepository/softwarebundle/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get all firmware repository software bundles",
        "tags": [
          "Firmware Repository"
        ],
        "responses": {
          "200": {
            "description": "All FirmwareRepository retrieved on filter, sort, paginate.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FirmwareRepository"
              }
            }
          }
        },
        "operationId": "get-FirmwareRepository-softwarebundle-id",
        "description": "Retrieve all FirmwareRepository with filter, sort, paginate which returns Array of firmwarerepository.class.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "operatingSystem",
            "description": "Operating System"
          },
          {
            "type": "string",
            "in": "query",
            "name": "vendorId",
            "description": "Vendor ID"
          },
          {
            "type": "string",
            "in": "query",
            "name": "deviceId",
            "description": "Device ID"
          },
          {
            "type": "string",
            "in": "query",
            "name": "subDeviceId",
            "description": "Sub Device ID"
          },
          {
            "type": "string",
            "in": "query",
            "name": "componentId",
            "description": "Component ID"
          },
          {
            "type": "string",
            "in": "query",
            "name": "subVendorId",
            "description": "Sub Vendor ID"
          },
          {
            "type": "string",
            "in": "query",
            "name": "systemId",
            "description": "System ID"
          },
          {
            "type": "string",
            "in": "query",
            "name": "type",
            "description": "Type"
          }
        ]
      }
    },
    "/FirmwareRepository/softwarecomponent": {
      "get": {
        "summary": "Get all firmware repository software components",
        "tags": [
          "Firmware Repository"
        ],
        "responses": {
          "200": {
            "description": "All FirmwareRepository retrieved on filter, sort, paginate.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FirmwareRepository"
              }
            }
          }
        },
        "operationId": "get-FirmwareRepository-softwarecomponent",
        "description": "Retrieve all FirmwareRepository with filter, sort, paginate which returns Array of firmwarerepository.class.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "operatingSystem",
            "description": "Operating System"
          },
          {
            "type": "string",
            "in": "query",
            "name": "vendorId",
            "description": "Vendor ID"
          },
          {
            "type": "string",
            "in": "query",
            "name": "deviceId",
            "description": "Device ID"
          },
          {
            "type": "string",
            "in": "query",
            "name": "subDeviceId",
            "description": "Sub Device ID"
          },
          {
            "type": "string",
            "in": "query",
            "name": "componentId",
            "description": "Component ID"
          },
          {
            "type": "string",
            "in": "query",
            "name": "subVendorId",
            "description": "Sub Vendor ID"
          },
          {
            "type": "string",
            "in": "query",
            "name": "systemId",
            "description": "System ID"
          },
          {
            "type": "string",
            "in": "query",
            "name": "type",
            "description": "Type"
          }
        ]
      }
    },
    "/ManagedDevice": {
      "get": {
        "summary": "Get managed devices",
        "tags": [
          "Managed Device"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManagedDevice"
              }
            }
          }
        },
        "operationId": "get-ManagedDevice",
        "description": "Retrieve all Devices from Inventory with filter.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Valid sort columns: displayName,serviceTag,refId,health,refType,deviceType,ipAddress,state,model,statusMessage,createdDate,createdBy,updatedDate,updatedBy,healthMessage,compliant,infraTemplateDate,infraTemplateId,serverTemplateDate,serverTemplateId,inventoryDate,complianceCheckDate\n,discoveredDate,identityRef,vendor"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter",
            "description": "Valid filter columns: displayName,serviceTag,refId,health,refType,deviceType,ipAddress,state,model,statusMessage,createdDate,createdBy,updatedDate,updatedBy,healthMessage,compliant,infraTemplateDate,infraTemplateId,serverTemplateDate,serverTemplateId,inventoryDate,complianceCheckDate\n,discoveredDate,identityRef,vendor,credId,service"
          },
          {
            "type": "string",
            "in": "query",
            "name": "offset",
            "description": "Pagination Offset"
          },
          {
            "type": "string",
            "in": "query",
            "name": "limit",
            "description": "Page Limit"
          }
        ]
      },
      "post": {
        "summary": "Create a managed device",
        "operationId": "post-ManagedDevice",
        "responses": {
          "201": {
            "description": "Devices created in inventory.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManagedDevice"
              }
            }
          },
          "400": {
            "description": "Invalid Device to create in inventory, first error encountered error causes an error response to return. Call does not return a list of errors.",
            "schema": {
              "type": "object"
            }
          },
          "409": {
            "description": "Device already exists in inventory, first error encountered error causes an error response to return. Call does not return a list of errors.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Create Device in Inventory and return array of Managed Devices created.\n\nThis API is not intended to be used for discovery. Use the /DiscoveryRequest API to add inventory.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ManagedDevice"
            }
          }
        ],
        "tags": [
          "Managed Device"
        ]
      },
      "parameters": []
    },
    "/ManagedDevice/{refId}": {
      "parameters": [
        {
          "type": "string",
          "name": "refId",
          "in": "path",
          "required": true,
          "description": "Reference Id"
        }
      ],
      "get": {
        "summary": "Get managed device based on reference ID",
        "tags": [
          "Managed Device"
        ],
        "responses": {
          "200": {
            "description": "Device retrieved from inventory.",
            "schema": {
              "$ref": "#/definitions/ManagedDevice"
            }
          },
          "404": {
            "description": "Device not found in inventory.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-ManagedDevice-refId",
        "description": "Retrieve Device from Inventory based on refId.\n\nResponse Content-Type: application/xml, application/json"
      },
      "put": {
        "summary": "Update a managed device",
        "operationId": "put-ManagedDevice-refId",
        "responses": {
          "201": {
            "description": "Device updated in inventory.",
            "schema": {
              "type": "null"
            }
          },
          "400": {
            "description": "Invalid Device.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Device not found in inventory.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Update Device in Inventory.\n\nThis API is not intended to be used for discovery. Use the /DiscoveryRequest API to add inventory.\n\nTo update a device inventory, the best practice is to use a DELETE followed by an add of new inventory, instead of using PUT for /ManagedDevice.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ManagedDevice"
            },
            "description": "Device to update"
          }
        ],
        "tags": [
          "Managed Device"
        ]
      },
      "delete": {
        "summary": "Delete a managed device",
        "operationId": "delete-ManagedDevice-refId",
        "responses": {
          "204": {
            "description": "Device deleted from inventory."
          },
          "400": {
            "description": "Unable to delete from inventory.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Delete Device from Inventory -- this operation is idempotent.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "forceDelete",
            "description": "Force Delete",
            "default": false
          }
        ],
        "tags": [
          "Managed Device"
        ]
      }
    },
    "/ManagedDevice/{refId}/firmware": {
      "parameters": [
        {
          "type": "string",
          "name": "refId",
          "in": "path",
          "required": true,
          "description": "Reference Id"
        }
      ],
      "get": {
        "summary": "Get device firmware version based on reference ID",
        "tags": [
          "Managed Device"
        ],
        "responses": {
          "200": {
            "description": "Devices retrieved from inventory on filter, sort, paginate.",
            "schema": {
              "$ref": "#/definitions/FirmwareDeviceInventory"
            }
          }
        },
        "operationId": "get-ManagedDevice-refId-firmware",
        "description": "Retrieves the device firmware version from the inventory based on the refId.\n\nResponse Content-Type: application/xml, application/json"
      }
    },
    "/ManagedDevice/{refId}/firmware/ compliancereport": {
      "parameters": [
        {
          "type": "string",
          "name": "refId",
          "in": "path",
          "required": true,
          "description": "Reference Id"
        }
      ],
      "get": {
        "summary": "Get firmware compliance report for a managed device based on reference ID",
        "tags": [
          "Managed Device"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FirmwareComplianceReport"
            }
          },
          "401": {
            "description": "No login information specified in the request.",
            "schema": {
              "$ref": "#/definitions/FirmwareComplianceReport"
            }
          },
          "403": {
            "description": "User does not have privileges to access this operation.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-ManagedDevice-refId-firmware-compliancereport",
        "description": "Returns a FirmwareComplianceReports for the Device.\n\nResponse Content-Type: application/xml, application/json"
      }
    },
    "/ManagedDevice/count": {
      "get": {
        "summary": "Get total count for a managed device",
        "tags": [
          "Managed Device"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer"
            }
          }
        },
        "operationId": "get-ManagedDevice-count",
        "description": "Retrieve Device total count.\n\nResponse Content-Type: text/plain",
        "parameters": [
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Filter Criteria"
          }
        ]
      }
    },
    "/ManagedDevice/export/csv": {
      "get": {
        "summary": "Export all managed devices in CSV format",
        "tags": [
          "Managed Device"
        ],
        "responses": {
          "200": {
            "schema": {},
            "description": "OK"
          },
          "400": {
            "description": "Bad Request, verify that input parameters are correct.",
            "schema": {
              "type": "null"
            }
          },
          "401": {
            "description": "No login information specified in the request.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "403": {
            "description": "User does not have privileges to access this operation.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "get-ManagedDevice-export-csv",
        "description": "Exports all Devices in .csv format.\n\nResponse Content-Type: application/octet-stream"
      }
    },
    "/ManagedDevice/firmware": {
      "put": {
        "summary": "Update managed device firmware",
        "operationId": "put-ManagedDevice-firmware",
        "responses": {
          "201": {
            "description": "Device updated Firmware.",
            "schema": {
              "type": "null"
            }
          },
          "400": {
            "description": "Invalid Device.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Device not found in inventory.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Update Device Firmware.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FirmwareUpdateRequest"
            }
          }
        ],
        "tags": [
          "Managed Device"
        ]
      }
    },
    "/ManagedDevice/puppet/{certName}": {
      "parameters": [
        {
          "type": "string",
          "name": "certName",
          "in": "path",
          "required": true,
          "description": "Certificate Name"
        }
      ],
      "get": {
        "summary": "Get device from inventory based on certificate name",
        "tags": [
          "Managed Device"
        ],
        "responses": {
          "200": {
            "description": "Device retrieved from inventory.",
            "schema": {
              "$ref": "#/definitions/ManagedDevice"
            }
          },
          "404": {
            "description": "Device not found in inventory.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-ManagedDevice-puppet-certName",
        "description": "Retrieve Device from Inventory based on certName.\n\nResponse Content-Type: application/xml, application/json"
      },
      "put": {
        "summary": "Update a device in the inventory",
        "operationId": "put-ManagedDevice-puppet-certName",
        "responses": {
          "201": {
            "description": "Device updated in inventory.",
            "schema": {
              "type": "null"
            }
          },
          "400": {
            "description": "Invalid Device.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Device not found in inventory.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Update Device in Inventory.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ManagedDevice"
            }
          }
        ],
        "tags": [
          "Managed Device"
        ]
      }
    },
    "/ManagedDevice/servicemode": {
      "put": {
        "summary": "Place server and associated service in service mode",
        "operationId": "put-ManagedDevice-servicemode",
        "responses": {
          "201": {
            "description": "Device has applied Service Mode changes.",
            "schema": {
              "type": "null"
            }
          },
          "400": {
            "description": "Invalid Device.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Device not found in inventory.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Place server and associated service in Service Mode.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "Managed Device"
        ]
      }
    },
    "/ManagedDevice/update": {
      "post": {
        "summary": "Update device in inventory",
        "operationId": "post-ManagedDevice-update",
        "responses": {
          "201": {
            "description": "Device Inventory jobs scheduled.",
            "schema": {
              "type": "null"
            }
          },
          "400": {
            "description": "Invalid Device.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Device not found in inventory.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Update Device in Inventory.\n\nResponse Content-Type: application/xml, application/json\n\nThis API takes a deviceId query parameter. Here's an example showing how to use the query parameter: \n\nPOST /ManagedDevice/update?deviceId=refId1,refId2,refId3,...",
        "parameters": [
          {
            "type": "array",
            "in": "query",
            "name": "deviceId",
            "description": "Device Inventory Ids"
          }
        ],
        "tags": [
          "Managed Device"
        ]
      }
    },
    "/ManagedDevice/withcompliance": {
      "get": {
        "summary": "Get all devices from inventory with filter",
        "tags": [
          "Managed Device"
        ],
        "responses": {
          "200": {
            "description": "Devices retrieved from inventory on filter, sort, paginate.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManagedDevice"
              }
            }
          }
        },
        "operationId": "get-ManagedDevice-withcompliance",
        "description": "Retrieve all Devices from Inventory with filter. This includes compliance checking and executes longer.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Sort Column"
          },
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Filter Criteria"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "Pagination Offset",
            "default": 0
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Page Limit",
            "default": 50
          }
        ]
      }
    },
    "/NTP": {
      "get": {
        "summary": "Get NTP settings",
        "tags": [
          "NTP"
        ],
        "responses": {
          "200": {
            "description": "Retrieved NTP settings from virtual appliance successfully.",
            "schema": {
              "$ref": "#/definitions/ntpSettings"
            }
          },
          "500": {
            "description": "Unable to get NTP settings from the virtual appliance.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-NTP",
        "description": "Retrieve NTP settings from virtual appliance.\n\nResponse Content-Type: application/json, application/xml"
      },
      "put": {
        "summary": "Update NTP settings",
        "operationId": "put-NTP",
        "responses": {
          "204": {
            "description": "Successfully set the NTP settings to on.",
            "schema": {
              "type": "null"
            }
          },
          "500": {
            "description": "Unable to turn on NTP settings on the appliance.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Apply NTP settings on virtual appliance.\n\nResponse Content-Type: application/json, application/xml",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ntpSettings"
            },
            "description": "NTPSetting object that needs to be set on virtual appliance"
          }
        ],
        "tags": [
          "NTP"
        ]
      },
      "delete": {
        "summary": "Turn off NTP settings",
        "operationId": "delete-NTP",
        "responses": {
          "204": {
            "description": "Successfully set the NTP settings to off.",
            "schema": {
              "type": "null"
            }
          },
          "500": {
            "description": "Unable to turn off NTP settings on the appliance.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Turn off NTP settings on virtual appliance.\n\nResponse Content-Type: application/json, application/xml",
        "tags": [
          "NTP"
        ]
      },
      "parameters": []
    },
    "/Network": {
      "get": {
        "summary": "Get networks",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "Networks retrieved.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Network"
              }
            }
          },
          "400": {
            "description": "Problem with a query parameter, check response for details.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Networks not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Network",
        "description": "Retrieve networks.\n\nResponse Content-Type: application/json, application/xml",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Valid sort columns\nare: name,description,type,vlanId,createdBy,createdDate,updatedBy,updatedDate"
          },
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Valid filter columns\nare: name,description,type,vlanId,createdBy,updatedBy,createdDate,updatedDate"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "Specify pagination\noffset.",
            "default": 0
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Specify page limit.",
            "default": 50
          }
        ]
      },
      "post": {
        "summary": "Add a new network",
        "operationId": "post-Network",
        "responses": {
          "201": {
            "description": "Network created.",
            "schema": {
              "$ref": "#/definitions/Network"
            }
          },
          "400": {
            "description": "Invalid input or network that is supplied, or other input data is correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "409": {
            "description": "Network already exists.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Add a new network.\n\nResponse Content-Type: application/json, application/xml",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Network"
            },
            "description": "Network object that needs to be added."
          }
        ],
        "tags": [
          "Network"
        ]
      },
      "parameters": []
    },
    "/Network/{networkId}": {
      "parameters": [
        {
          "type": "string",
          "name": "networkId",
          "in": "path",
          "required": true,
          "description": "Id of network to retrieve"
        }
      ],
      "get": {
        "summary": "Get a network",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "Network retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/Network"
            }
          },
          "404": {
            "description": "Network not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Network-networkId",
        "description": "Find a network by id.\n\nResponse Content-Type: application/json, application/xml"
      },
      "put": {
        "summary": "Update a network",
        "operationId": "put-Network-networkId",
        "responses": {
          "204": {
            "description": "Network updated successfully.",
            "schema": {
              "type": "null"
            }
          },
          "400": {
            "description": "Invalid input for id or network that is supplied, or other input data is incorrect.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Network not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "409": {
            "description": "Network with similar name already exists.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Update an existing network.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Network"
            },
            "description": "Network object that contains update fields."
          }
        ],
        "tags": [
          "Network"
        ]
      },
      "delete": {
        "summary": "Delete a network",
        "operationId": "delete-Network-networkId",
        "responses": {
          "204": {
            "description": "Network deleted successfully.",
            "schema": {
              "type": "null"
            }
          },
          "400": {
            "description": "Invalid network id supplied.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Delete an existing network.\n\nResponse Content-Type: application/xml, application/json",
        "tags": [
          "Network"
        ]
      }
    },
    "/Network/{networkId}/usageids": {
      "parameters": [
        {
          "type": "string",
          "name": "networkId",
          "in": "path",
          "required": true,
          "description": "Id of network to retrieve from."
        }
      ],
      "get": {
        "summary": "Get usage IDs for a network",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "Network Usage Ids retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/UsageIdList"
            }
          },
          "404": {
            "description": "Network Usage Ids not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Network-networkId-usageids",
        "description": "Find Usage Ids of network by id.\n\nResponse Content-Type: application/json, application/xml"
      }
    },
    "/Network/{networkId}/ipaddresses": {
      "parameters": [
        {
          "type": "string",
          "name": "networkId",
          "in": "path",
          "required": true,
          "description": "Id of network to retrieve from."
        }
      ],
      "get": {
        "summary": "Get IP addresses for a network",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "Network IPs retrieved successfully.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpAddress"
              }
            }
          },
          "404": {
            "description": "Network IPs not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Network-networkId-ipaddresses",
        "description": "Find IPs of network by id.\n\nResponse Content-Type: application/json, application/xml"
      }
    },
    "/Network/export/csv": {
      "get": {
        "summary": "Export all networks in CSV format",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "Bad Request, verify that input parameters are correct.",
            "schema": {
              "type": "null"
            }
          },
          "401": {
            "description": "No login information specified in the request.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "403": {
            "description": "User does not have privileges to access this operation.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "User Log Internal Error, contact your system administrator.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Network-export-csv",
        "description": "Exports all Networks in .csv format.\n\nResponse Content-Type: application/octet-stream"
      }
    },
    "/Network/static": {
      "get": {
        "summary": "Get static networks",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "Networks retrieved that are static.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Network"
              }
            }
          },
          "400": {
            "description": "Problem with a query parameter, check response for details.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Networks not found that are static.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Network-static",
        "description": "Retrieve networks that are static.\n\nResponse Content-Type: application/xml, application/json"
      }
    },
    "/Network/type/{networkType}": {
      "parameters": [
        {
          "type": "string",
          "name": "networkType",
          "in": "path",
          "required": true,
          "description": "Specify NetworkType with hyphens instead of underscores."
        }
      ],
      "get": {
        "summary": "Get networks by type",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "Networks retrieved by networkType.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Network"
              }
            }
          },
          "400": {
            "description": "Problem with a query parameter, check response for details.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Networks not found by networkType.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Network-type-networkType",
        "description": "Retrieve networks by network type.\n\nResponse Content-Type: application/json, application/xml"
      }
    },
    "/OSRepository": {
      "get": {
        "summary": "Get operating system repositories",
        "tags": [
          "OS Repository"
        ],
        "responses": {
          "200": {
            "description": "OSRepository retrieved.",
            "schema": {
              "$ref": "#/definitions/OSRepository"
            }
          }
        },
        "operationId": "get-OSRepository",
        "description": "Gets a list of existing operating system repositories.\n\nResponse Content-Type: application/xml, application/json"
      },
      "post": {
        "summary": "Create a new operating system repository",
        "operationId": "post-OSRepository",
        "responses": {
          "201": {
            "description": "OSRepository created.",
            "schema": {
              "$ref": "#/definitions/OSRepository"
            }
          },
          "400": {
            "description": "Bad Request, verify OSRepository data object is correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Creates a new OSRepository.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OSRepository"
            }
          }
        ],
        "tags": [
          "OS Repository"
        ]
      },
      "parameters": []
    },
    "/OSRepository/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get an operating system repository by ID",
        "tags": [
          "OS Repository"
        ],
        "responses": {
          "200": {
            "description": "OSRepository retrieved.",
            "schema": {
              "$ref": "#/definitions/OSRepository"
            }
          }
        },
        "operationId": "get-OSRepository-id",
        "description": "Gets the OSRepository by its ID.\n\nResponse Content-Type: application/xml, application/json"
      },
      "put": {
        "summary": "Update an operating system repository",
        "operationId": "put-OSRepository-id",
        "responses": {
          "204": {
            "description": "OSRepository updated.",
            "schema": {
              "$ref": "#/definitions/OSRepository"
            }
          },
          "400": {
            "description": "Invalid Parameters to update OSRepository or problem with the Resource Adapters.",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "OSRepository not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Update OSRepository.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OSRepository"
            }
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "sync",
            "description": "Sync ISO",
            "default": false
          }
        ],
        "tags": [
          "OS Repository"
        ]
      },
      "delete": {
        "summary": "Delete an operating system repository",
        "operationId": "delete-OSRepository-id",
        "responses": {
          "200": {
            "description": "Successfully deleted OSRepository.",
            "schema": {
              "$ref": "#/definitions/OSRepository"
            }
          },
          "400": {
            "description": "Bad Request, verify that id is correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Bad Request, verify that id is correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Deletes an existing OSRepository.\n\nResponse Content-Type: application/xml, application/json",
        "tags": [
          "OS Repository"
        ]
      }
    },
    "/OSRepository/connection": {
      "post": {
        "summary": "Test operating system repository connection to remote path",
        "operationId": "post-OSRepository-connection",
        "responses": {
          "201": {
            "description": "Connection to remote path successful.",
            "schema": {
              "$ref": "#/definitions/OSRepository"
            }
          }
        },
        "description": "Tests the connection to a remote path.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OSRepository"
            }
          }
        ],
        "tags": [
          "OS Repository"
        ]
      }
    },
    "/OSRepository/sync/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Synchronize an operating system repository",
        "operationId": "put-OSRepository-sync-id",
        "responses": {
          "200": {
            "description": "OSRepository Sync",
            "schema": {
              "$ref": "#/definitions/OSRepository"
            }
          }
        },
        "description": "Syncs the OSRepository by its ID.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OSRepository"
            },
            "description": "osRepo"
          }
        ],
        "tags": [
          "OS Repository"
        ]
      }
    },
    "/Proxy": {
      "get": {
        "summary": "Get proxy settings",
        "tags": [
          "Proxy"
        ],
        "responses": {
          "200": {
            "description": "Virtual appliance proxy settings retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/proxySettings"
            }
          },
          "500": {
            "description": "Unable to retrieve proxy settings from virtual appliance.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "get-Proxy",
        "description": "Retrieve proxy settings from virtual appliance.\n\nResponse Content-Type: application/json, application/xml"
      },
      "put": {
        "summary": "Update proxy settings",
        "operationId": "put-Proxy",
        "responses": {
          "200": {
            "description": "Proxy settings set successfully on virtual appliance.",
            "schema": {
              "$ref": "#/definitions/proxySettings"
            }
          },
          "500": {
            "description": "Unable to set the proxy settings on virtual appliance.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Set the proxy settings on virtual appliance.\n\nResponse Content-Type: application/json, application/xml",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/proxySettings"
            },
            "description": "ProxySetting object that needs to be set on virtual appliance."
          }
        ],
        "tags": [
          "Proxy"
        ]
      },
      "parameters": []
    },
    "/Proxy/test": {
      "post": {
        "summary": "Test proxy settings",
        "operationId": "post-Proxy-test",
        "responses": {
          "200": {
            "description": "Passed test for proxy settings defined on virtual appliance.",
            "schema": {
              "$ref": "#/definitions/testProxyResponse"
            }
          },
          "500": {
            "description": "Unable to test proxy settings defined on virtual appliance.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Test proxy settings on virtual appliance.\n\nResponse Content-Type: application/json, application/xml",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/proxySettings"
            },
            "description": "ProxySetting object that needs to be tested on virtual appliance."
          }
        ],
        "tags": [
          "Proxy"
        ]
      }
    },
    "/Server": {
      "get": {
        "summary": "Get servers",
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "description": "Retrieved.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Server"
              }
            }
          },
          "400": {
            "description": "Bad Request, verify that input parameters are correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "No login information specified in the request.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "403": {
            "description": "User does not have privileges to access this operation.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Server Internal Error, contact your system administrator.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Server",
        "description": "Gets a list of servers.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Valid sort columns: health,managementIP,serviceTag,powerState,credentialId"
          },
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Valid filter columns: health,management\nIP,serviceTag,powerState,credentialId"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "Specify pagination offset.",
            "default": 0
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Specify page limit.",
            "default": 50
          }
        ]
      },
      "parameters": []
    },
    "/Server/{refId}": {
      "parameters": [
        {
          "type": "string",
          "name": "refId",
          "in": "path",
          "required": true,
          "description": "Reference id of server"
        }
      ],
      "get": {
        "summary": "Get server by ID",
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "description": "Retrieved.",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "400": {
            "description": "Bad Request, verify refId is correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "No login information specified in the request.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "403": {
            "description": "User does not have privileges to access this operation.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Server not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Server Internal Error, contact your system administrator.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Server-refId",
        "description": "Retrieves an individual Server.\n\nResponse Content-Type: application/xml, application/json"
      },
      "delete": {
        "summary": "Delete server",
        "operationId": "delete-Server-refId",
        "responses": {
          "204": {
            "description": "Deleted.",
            "schema": {
              "type": "null"
            }
          },
          "400": {
            "description": "Bad Request, verify refId is correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "No login information specified in the request.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "403": {
            "description": "User does not have privileges to access this operation.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Server Internal Error, contact your system administrator.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Removes a Server.\n\nResponse Content-Type: application/xml, application/json",
        "tags": [
          "Server"
        ]
      }
    },
    "/Server/count": {
      "get": {
        "summary": "Get server count",
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "description": "Retrieved.",
            "schema": {
              "type": "integer"
            }
          },
          "400": {
            "description": "Bad Request, verify that input parameters are correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "No login information specified in the request.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "403": {
            "description": "User does not have privileges to access this operation.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Server Internal Error, contact your system administrator.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Server-count",
        "description": "Gets a count of servers.\n\nResponse Content-Type: text/plain",
        "parameters": [
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Valid filter columns: health,managementIP,serviceTag,powerState,credentialId"
          }
        ]
      }
    },
    "/Server/serviceTag/{serviceTag}": {
      "parameters": [
        {
          "type": "string",
          "name": "serviceTag",
          "in": "path",
          "required": true,
          "description": "serviceTag of the server"
        }
      ],
      "get": {
        "summary": "Get server by service tag",
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "description": "Retrieved.",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "400": {
            "description": "Bad Request, verify refId is correct.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "No login information specified in the request.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "403": {
            "description": "User does not have privileges to access this operation.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Server not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Server Internal Error, contact your system administrator.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "get-Server-serviceTag-serviceTag",
        "description": "Retrieves an individual Server with serviceTag.\n\nResponse Content-Type: application/xml, application/json"
      }
    },
    "/ServiceTemplate": {
      "get": {
        "summary": "Get all service templates",
        "tags": [
          "Service Template"
        ],
        "responses": {
          "200": {
            "description": "All ServiceTemplates retrieved on filter, sort, paginate.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceTemplate"
              }
            }
          }
        },
        "operationId": "get-ServiceTemplate",
        "description": "Retrieve all ServiceTemplates with filter, sort, paginate which returns Array of ServiceTemplate.class.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Supported sort columns are:\nname,createdBy,createdDate,updatedBy,updatedDate"
          },
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Supported filter columns are:\nname,draft,createdBy,updatedBy,createdDate,updatedDate"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "Pagination Offset",
            "default": 0
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Page Limit",
            "default": 50
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "full",
            "description": "Full or Brief",
            "default": false
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "includeAttachments",
            "description": "Include Attachments.",
            "default": true
          }
        ]
      },
      "post": {
        "summary": "Create a service template",
        "operationId": "post-ServiceTemplate",
        "responses": {
          "201": {
            "description": "ServiceTemplate created.",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          },
          "400": {
            "description": "Invalid parameters to create ServiceTemplate or problems with the Resource Adapters.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "409": {
            "description": "Template already exists.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Create new ServiceTemplate.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            },
            "description": "Infrastructure Template to create."
          }
        ],
        "tags": [
          "Service Template"
        ]
      },
      "parameters": []
    },
    "/ServiceTemplate/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Infrastructure Template Id"
        }
      ],
      "get": {
        "summary": "Get service template by ID",
        "tags": [
          "Service Template"
        ],
        "responses": {
          "200": {
            "description": "ServiceTemplate retrieved.",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          },
          "404": {
            "description": "ServiceTemplate not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-ServiceTemplate-id",
        "description": "Retrieve ServiceTemplate based on ServiceTemplate id.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "forDeployment",
            "description": "Will return expanded version of template prepared for deployment wizard",
            "default": false
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "includeBrownfieldVmMang ers",
            "description": "Will return Managed and Reserved VM\nManagers if set to true, other wise only\nreturns Discovered.",
            "default": false
          }
        ]
      },
      "put": {
        "summary": "Update a service template",
        "operationId": "put-ServiceTemplate-id",
        "responses": {
          "204": {
            "description": "Infrastructure Template updated.",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          },
          "400": {
            "description": "Invalid parameters to update ServiceTemplate.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Template not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Update Template.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            },
            "description": "Infrastructure Template to update."
          }
        ],
        "tags": [
          "Service Template"
        ]
      },
      "delete": {
        "summary": "Delete a service template",
        "operationId": "delete-ServiceTemplate-id",
        "responses": {
          "204": {
            "description": "ServiceTemplate deleted.",
            "schema": {
              "type": "null"
            }
          },
          "500": {
            "description": "Unable to delete ServiceTemplate.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Delete ServiceTemplate -- this operation is idempotent.\n\nResponse Content-Type: application/xml, application/json",
        "tags": [
          "Service Template"
        ]
      }
    },
    "/ServiceTemplate/{id}/copy": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Infrastructure Template Id"
        }
      ],
      "post": {
        "summary": "Copy a service template",
        "operationId": "post-ServiceTemplate-id-copy",
        "responses": {
          "201": {
            "description": "ServiceTemplate copied successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          },
          "400": {
            "description": "Invalid Parameters to copy ServiceTemplate or problems with the Resource Adapters.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "409": {
            "description": "Template already exists.",
            "schema": {
              "type": "object"
            }
          }
        },
        "description": "Copy a ServiceTemplate.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            },
            "description": "Infrastructure Template settings"
          }
        ],
        "tags": [
          "Service Template"
        ]
      }
    },
    "/ServiceTemplate/{id}/mapToPhysicalResources": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Infrastructure Template Id"
        }
      ],
      "post": {
        "summary": "Map service template to physical resources",
        "operationId": "post-ServiceTemplate-id-mapToPhysicalResources",
        "responses": {
          "201": {
            "description": "Map Service Template to physical resources.",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          },
          "400": {
            "description": "Invalid Parameters to copy ServiceTemplate or problems with the Resource Adapters.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "409": {
            "description": "Template already exists.",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          }
        },
        "description": "Do Physical Resource allocation based on ServiceTemplate.\n\nResponse Content-Type: application/xml, application/json",
        "tags": [
          "Service Template"
        ]
      }
    },
    "/ServiceTemplate/cloneTemplate": {
      "post": {
        "summary": "Clone a service template",
        "operationId": "post-ServiceTemplate-cloneTemplate",
        "responses": {
          "201": {
            "description": "ServiceTemplate created.",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          },
          "400": {
            "description": "Invalid Parameters to create ServiceTemplate.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "409": {
            "description": "Template already exists.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Create new ServiceTemplate from passed in ServiceTemplate.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            },
            "description": "Service Template to clone."
          }
        ],
        "tags": [
          "Service Template"
        ]
      }
    },
    "/ServiceTemplate/components/service/{serviceId}": {
      "parameters": [
        {
          "type": "string",
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "Service Id"
        }
      ],
      "put": {
        "summary": "Update service template by service ID",
        "operationId": "put-ServiceTemplate-components-service-serviceId",
        "responses": {
          "200": {
            "description": "ServiceTemplate updated.",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          },
          "404": {
            "description": "ServiceTemplate not found.",
            "schema": {
              "type": "object"
            }
          }
        },
        "description": "Update Template by analyzing related components.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            },
            "description": "Template to update"
          }
        ],
        "tags": [
          "Service Template"
        ]
      }
    },
    "/ServiceTemplate/components/template/ {templateId}": {
      "parameters": [
        {
          "type": "string",
          "name": "templateId",
          "in": "path",
          "required": true,
          "description": "Template Id"
        }
      ],
      "put": {
        "summary": "Update service template by template ID",
        "operationId": "put-ServiceTemplate-components-template-templateId",
        "responses": {
          "200": {
            "description": "ServiceTemplate updated.",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          },
          "404": {
            "description": "ServiceTemplate not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Update Template by analyzing related components.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            },
            "description": "Template to update"
          }
        ],
        "tags": [
          "Service Template"
        ]
      }
    },
    "/ServiceTemplate/device/{deviceId}": {
      "parameters": [
        {
          "type": "string",
          "name": "deviceId",
          "in": "path",
          "required": true,
          "description": "Device Id"
        }
      ],
      "get": {
        "summary": "Get default template customized for a device",
        "tags": [
          "Service Template"
        ],
        "responses": {
          "200": {
            "description": "ServiceTemplate retrieved.",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          },
          "404": {
            "description": "ServiceTemplate not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-ServiceTemplate-device-deviceId",
        "description": "Retrieve Default Template customized for specified device.\n\nResponse Content-Type: application/xml, application/json"
      }
    },
    "/ServiceTemplate/export/csv": {
      "get": {
        "summary": "Export all templates in CSV format",
        "tags": [
          "Service Template"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "Bad Request, verify that input parameters are correct.",
            "schema": {
              "type": "null"
            }
          },
          "401": {
            "description": "No login information specified in the request.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "403": {
            "description": "User does not have privileges to access this operation.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "User Log Internal Error, contact your system administrator.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-ServiceTemplate-export-csv",
        "description": "Exports all Templates in .csv format.\n\nResponse Content-Type: application/octet-stream"
      }
    },
    "/ServiceTemplate/service/{serviceId}/{componentType}": {
      "parameters": [
        {
          "type": "string",
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "Service Id"
        },
        {
          "type": "string",
          "name": "componentType",
          "in": "path",
          "required": true,
          "description": "Template Component Type"
        }
      ],
      "get": {
        "summary": "Get default service template with components based on service ID",
        "tags": [
          "Service Template"
        ],
        "responses": {
          "200": {
            "description": "ServiceTemplate retrieved.",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          },
          "404": {
            "description": "ServiceTemplate not found.",
            "schema": {
              "type": "object"
            }
          }
        },
        "operationId": "get-ServiceTemplate-service-serviceId-componentType",
        "description": "Retrieve Default Template with components refined for specified service ID.\n\nResponse Content-Type: application/xml, application/json"
      }
    },
    "/ServiceTemplate/template/{templateId}/{componentType}": {
      "parameters": [
        {
          "type": "string",
          "name": "templateId",
          "in": "path",
          "required": true,
          "description": "Template Id"
        },
        {
          "type": "string",
          "name": "componentType",
          "in": "path",
          "required": true,
          "description": "Template Component Type"
        }
      ],
      "get": {
        "summary": "Get default service template with components based on template ID",
        "tags": [
          "Service Template"
        ],
        "responses": {
          "200": {
            "description": "ServiceTemplate retrieved.",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          },
          "404": {
            "description": "ServiceTemplate not found.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-ServiceTemplate-template-templateId-componentType",
        "description": "Retrieve Default Template with components refined for specified template ID.\n\nResponse Content-Type: application/xml, application/json"
      }
    },
    "/ServiceTemplate/updateParameters": {
      "post": {
        "summary": "Create a new service template with updated parameters",
        "operationId": "post-ServiceTemplate-updateParameters",
        "responses": {
          "200": {
            "description": "Parameters updated.",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          }
        },
        "description": "Create a new ServiceTemplate.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            },
            "description": "Fills in any missing parameters that are required to deploy the template."
          }
        ],
        "tags": [
          "Service Template"
        ]
      }
    },
    "/ServiceTemplate/upload": {
      "post": {
        "summary": "Upload a service template",
        "operationId": "post-ServiceTemplate-upload",
        "responses": {
          "201": {
            "description": "ServiceTemplate uploaded successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          },
          "400": {
            "description": "Invalid parameters to upload template.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Upload a ServiceTemplate.\n\nResponse Content-Type: application/xml, application/json",
        "tags": [
          "Service Template"
        ]
      }
    },
    "/ServiceTemplate/users": {
      "delete": {
        "summary": "Delete users from templates",
        "operationId": "delete-ServiceTemplate-users",
        "responses": {
          "204": {
            "description": "Users deleted from Templates.",
            "schema": {
              "type": "null"
            }
          },
          "500": {
            "description": "Unable to delete User from Templates.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Delete Users from Templates.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "type": "array",
            "in": "query",
            "description": "Valid UserIds",
            "name": "userId"
          }
        ],
        "tags": [
          "Service Template"
        ]
      }
    },
    "/Timezone": {
      "get": {
        "summary": "Get time zone",
        "tags": [
          "Timezone"
        ],
        "responses": {
          "200": {
            "description": "Virtual appliance time zone retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/timeZone"
            }
          },
          "500": {
            "description": "Unable to retrieve virtual appliance time zone.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Timezone",
        "description": "Retrieve virtual appliance time zone.\n\nResponse Content-Type: application/json, application/xml"
      },
      "put": {
        "summary": "Update time zone",
        "operationId": "put-Timezone",
        "responses": {
          "200": {
            "description": "Virtual appliance time zone set successfully.",
            "schema": {
              "type": "null"
            }
          },
          "500": {
            "description": "Unable to set the virtual appliance time zone.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Sets the virtual appliance time zone.\n\nResponse Content-Type: application/json, application/xml",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/timeZone"
            },
            "description": "TimeZoneInfo that needs to be set on virtual appliance."
          }
        ],
        "tags": [
          "Timezone"
        ]
      },
      "parameters": []
    },
    "/Timezone/all": {
      "get": {
        "summary": "Get available time zones",
        "tags": [
          "Timezone"
        ],
        "responses": {
          "200": {
            "description": "Available time zones list retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/availableTimeZones"
            }
          },
          "500": {
            "description": "Unable to retrieve list of available time zones.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Timezone-all",
        "description": "Retrieve list of available time zones.\n\nResponse Content-Type: application/json, application/xml",
        "parameters": [
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "Specify pagination offset."
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Specify page limit, cannot exceed system maximum limit."
          }
        ]
      }
    },
    "/TroubleshootingBundle/export": {
      "post": {
        "summary": "Export troubleshooting bundle",
        "operationId": "post-TroubleshootingBundle-export",
        "responses": {
          "200": {
            "description": "Good request"
          },
          "400": {
            "description": "Invalid parameter values",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "Login information not specified, or forbidden (user does not have privileges)",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Sends the troubleshooting bundle to the defined destination. This can be performed by Admin or Read-only users.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TroubleshootingBundleParams"
            },
            "description": "Troubleshooting bundle to send to the defined destination"
          }
        ],
        "tags": [
          "Troubleshooting Bundle"
        ]
      }
    },
    "/TroubleshootingBundle/test": {
      "post": {
        "summary": "Test connection for troubleshooting bundle",
        "operationId": "post-TroubleshootingBundle-test",
        "responses": {
          "200": {
            "description": "Good request"
          },
          "400": {
            "description": "Invalid parameter values",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "401": {
            "description": "Login information not specified, or forbidden (user does not have privileges)",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Tests the connection to the destination for the troubleshooting bundle. This can be performed by Admin or Read-only users.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TroubleshootingBundleParams"
            },
            "description": "Troubleshooting bundle to use for testing the connection"
          }
        ],
        "tags": [
          "Troubleshooting Bundle"
        ]
      }
    },
    "/Deployment/{id}/cancel": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Deployment Id"
        }
      ],
      "post": {
        "summary": "Cancel deployment",
        "operationId": "post-Deployment-id-cancel",
        "responses": {
          "204": {
            "description": "Deployment canceled.",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "400": {
            "description": "Invalid parameters to cancel Deployment or problem with the Resource Adapters.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Deployment not found."
          }
        },
        "description": "Cancel Deployment.\n\nResponse Content-Type: application/xml, application/json",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Deployment"
            },
            "description": "Deployment to cancel"
          }
        ],
        "tags": [
          "Deployment"
        ]
      }
    },
    "/Appliance/applianceStatus": {
      "get": {
        "summary": "Returns appliance LC status",
        "tags": [
          "Appliance"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpgradeStatus"
            }
          }
        },
        "operationId": "get-appliance-applianceStatus",
        "description": "Appliance LC status"
      },
      "put": {
        "summary": "Sets appliance LC status",
        "operationId": "put-appliance-applianceStatus",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "string",
              "enum": [
                "\"INITIALIZING\"",
                "\"UPDATING_INVENTORY\"",
                "\"UPDATING_TEMPLATES\"",
                "\"UPGRADING\"",
                "\"READY\""
              ]
            }
          }
        ],
        "description": "Appliance LC status",
        "tags": [
          "Appliance"
        ]
      },
      "parameters": []
    },
    "/Appliance": {
      "get": {
        "summary": "Get appliance settings",
        "tags": [
          "Appliance"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Appliance"
            }
          }
        },
        "operationId": "get-appliance",
        "description": "Get appliance settings"
      },
      "put": {
        "summary": "Update Appliance settings at once",
        "operationId": "put-appliance",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Appliance"
            }
          }
        },
        "description": "Update settings like TimeZone, DHCP, proxy etc",
        "tags": [
          "Appliance"
        ]
      },
      "parameters": []
    },
    "/Appliance/upgradeStatus": {
      "get": {
        "summary": "Returns upgrade status",
        "tags": [
          "Appliance"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpgradeStatus"
            }
          }
        },
        "operationId": "get-appliance-upgradeStatus",
        "description": "Application status"
      },
      "parameters": []
    },
    "/Appliance/reboot": {
      "post": {
        "summary": "Restart Appliance",
        "operationId": "post-appliance-reboot",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          }
        },
        "description": "Restart PowerFlex Manager VM",
        "tags": [
          "Appliance"
        ]
      },
      "parameters": []
    },
    "/Appliance/update": {
      "post": {
        "summary": "Upgrade PowerFlex Manager",
        "operationId": "post-appliance-update",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Upgrade PowerFlex Manager VM to a newer version",
        "tags": [
          "Appliance"
        ]
      },
      "parameters": []
    },
    "/Appliance/health": {
      "get": {
        "summary": "Appliance health status",
        "tags": [
          "Appliance"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplianceHealth"
            }
          }
        },
        "operationId": "get-appliance-health",
        "description": "Returns PowerFlex Manager Appliance health status"
      },
      "parameters": []
    },
    "/Appliance/asmVersion": {
      "get": {
        "summary": "Gets the product version",
        "tags": [
          "Appliance"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ASMVersion"
            }
          }
        },
        "operationId": "get-appliance-asmVersion",
        "description": "Gets the product version"
      },
      "parameters": []
    },
    "/License": {
      "put": {
        "summary": "Upload license",
        "operationId": "put-license",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LicenseDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UploadLicenseRequest"
            }
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "store",
            "required": true
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "force"
          }
        ],
        "description": "Upload license",
        "tags": [
          "License"
        ]
      },
      "parameters": [],
      "get": {
        "summary": "Retrieve Appliance License details",
        "operationId": "get-License",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LicenseDetails"
            }
          }
        },
        "description": "Retrieve the Appliance License details",
        "tags": [
          "License"
        ]
      }
    },
    "/Timezone/allMicrosoft": {
      "get": {
        "summary": "Get available Microsoft TimeZones",
        "tags": [
          "Timezone"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/availableTimeZones"
            }
          }
        },
        "operationId": "get-timezone-allMicrosoft",
        "description": "Retrieve the available timezones to be used with Microsoft Windows",
        "parameters": [
          {
            "type": "integer",
            "in": "query",
            "name": "offset"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit"
          }
        ]
      },
      "parameters": []
    },
    "/Timezone/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Find TimeZone by ID",
        "tags": [
          "Timezone"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TimeZoneInfo"
            }
          }
        },
        "operationId": "get-timezone-id",
        "description": "Retrieve the timezone by ID"
      }
    },
    "/Credential/restart_snmp": {
      "get": {
        "summary": "Restarts SNMP Trap converter service for newly edited credentials",
        "tags": [
          "Credential"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {}
          }
        },
        "operationId": "get-Credential-restart_snmp",
        "description": "Restarts SNMP Trap converter service for newly edited credentials"
      }
    },
    "/Deployment/connectivity/{serverGUID}": {
      "parameters": [
        {
          "type": "string",
          "name": "serverGUID",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get switch ports connectivity for a given host",
        "tags": [
          "Deployment"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SwitchConnectivity"
            }
          }
        },
        "operationId": "get-Deployment-connectivity-serverGUID",
        "description": "Get switch ports connectivity for a given host"
      }
    },
    "/Deployment/{id}/puppetLogs/{certName}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "certName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fetch puppet logs for selected device",
        "tags": [
          "Deployment"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PuppetLogEntry"
              }
            }
          }
        },
        "operationId": "get-Deployment-id-puppetLogs-certName",
        "description": "Fetch puppet logs for selected device",
        "parameters": [
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Valid filter columns: category"
          }
        ]
      }
    },
    "/Deployment/getcomponentbyips": {
      "post": {
        "summary": "Find all deployment components using IP from the list",
        "operationId": "post-Deployment-getcomponentbyips",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IpAddressDeploymentResponse"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IPAddressList"
              }
            }
          }
        ],
        "description": "Find all deployment components using IP from the list",
        "tags": [
          "Deployment"
        ]
      }
    },
    "/Deployment/validate": {
      "post": {
        "summary": "Validate deployment and return deployment summary",
        "operationId": "post-Deployment-validate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        ],
        "description": "Validate deployment and return deployment summary",
        "tags": [
          "Deployment"
        ]
      }
    },
    "/Deployment/asmdeployerogs/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get deployment logs",
        "tags": [
          "Deployment"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AsmDeployerLogEntry"
              }
            }
          }
        },
        "operationId": "get-Deployment-asmdeployerogs-id",
        "description": "Get deployment logs"
      }
    },
    "/Deployment/{gatewayId}/sdsnodeconfiguration": {
      "parameters": [
        {
          "type": "string",
          "name": "gatewayId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get SDS node configuration for a gateway",
        "tags": [
          "Deployment"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SDSNodeConfiguration"
              }
            }
          }
        },
        "operationId": "get-Deployment-gatewayId-sdsnodeconfiguration",
        "description": "Get SDS node configuration for a gateway"
      }
    },
    "/Deployment/{id}/vcslvmsmigrateinfo": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve information needed to migrate vCLS VMs",
        "tags": [
          "Deployment"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VclsVmsMigrateInfo"
            }
          }
        },
        "operationId": "get-Deployment-id-vcslvmsmigrateinfo",
        "description": "Retrieve information needed to migrate vCLS VMs"
      }
    },
    "/Deployment/migratevclsvms": {
      "post": {
        "summary": "Migrate vCLS VMs from local to shared storage",
        "operationId": "post-Deployment-migratevclsvms",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/MigrateVclsVmsRequest"
            }
          }
        ],
        "description": "Migrate vCLS VMs from local to shared storage",
        "tags": [
          "Deployment"
        ]
      }
    },
    "/Deployment/{deploymentId}/addvolumes": {
      "parameters": [
        {
          "type": "string",
          "name": "deploymentId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Add volumes to the service",
        "operationId": "post-Deployment-deploymentId-addvolumes",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VolumeActionRequest"
            }
          }
        ],
        "description": "Add volumes to the service",
        "tags": [
          "Deployment"
        ]
      }
    },
    "/Deployment/{deploymentId}/datastores": {
      "parameters": [
        {
          "type": "string",
          "name": "deploymentId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Returns a list of datastores",
        "tags": [
          "Deployment"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Datastore"
              }
            }
          }
        },
        "operationId": "get-Deployment-deploymentId-datastores",
        "description": "Returns a list of datastores in the vCenter datacenter that are mapped to PowerFlex volumes but are not mapped to the SDCs in the specified service {id}"
      }
    },
    "/Deployment/{deploymentId}/resizevolume": {
      "parameters": [
        {
          "type": "string",
          "name": "deploymentId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Resize volumes on the service",
        "operationId": "post-Deployment-deploymentId-resizevolume",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VolumeRequest"
            }
          }
        ],
        "description": "Resize volumes on the service",
        "tags": [
          "Deployment"
        ]
      }
    },
    "/DiscoveryRequest/discoverydresult/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a discovery result",
        "tags": [
          "Discovery Request"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiscoveryResult"
            }
          }
        },
        "operationId": "get-DiscoveryRequest-discoverydresult-id",
        "description": "Get a discovery result"
      }
    },
    "/JobHistory/execution/{jobExecutionId}": {
      "parameters": [
        {
          "type": "string",
          "name": "jobExecutionId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve the execution history for the specific job execution",
        "tags": [
          "Job History"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JrafJobExecutionHistory"
            }
          }
        },
        "operationId": "get-JobHistory-execution-jobExecutionId",
        "description": "Retrieve the execution history for the specific job execution"
      }
    },
    "/JobHistory/execution": {
      "get": {
        "summary": "Retrieve the execution histories for jobs that meet specified criteria",
        "tags": [
          "Job History"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JrafJobExecutionHistoryList"
            }
          }
        },
        "operationId": "get-JobHistory-execution",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "jobName",
            "required": true,
            "description": "Job Name"
          },
          {
            "type": "string",
            "in": "query",
            "name": "jobSelector",
            "required": true,
            "description": "Selector"
          },
          {
            "type": "string",
            "in": "query",
            "name": "qrtzGroup",
            "required": true,
            "description": "Quartz Group Id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "status",
            "required": true,
            "description": "Job Status"
          },
          {
            "type": "string",
            "in": "query",
            "name": "createdBy",
            "required": true,
            "description": "Created By"
          },
          {
            "type": "string",
            "in": "query",
            "name": "startedBy",
            "required": true,
            "description": "Started By"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "sinceEpochTime",
            "required": true,
            "description": "Since Epoch Time"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "topLevelJobsOnly",
            "required": true,
            "description": "Top-Level Jobs Only"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "required": true,
            "description": "Sort Specification"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Number of Records"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "Record Offset"
          }
        ],
        "description": "Retrieve the execution histories for jobs that meet specified criteria"
      }
    },
    "/JobHistory/{jobName}/status": {
      "parameters": [
        {
          "type": "string",
          "name": "jobName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve Job Status",
        "tags": [
          "Job History"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "enum": [
                "com.dell.pg.jraf.client.jobmgr.JrafJobExecStatus@556509a8[ name=STARTING ordinal=0 ]",
                "com.dell.pg.jraf.client.jobmgr.JrafJobExecStatus@247e6c46[ name=IN_PROGRESS ordinal=1 ]",
                "com.dell.pg.jraf.client.jobmgr.JrafJobExecStatus@61a885c2[ name=SUCCESSFUL ordinal=2 ]",
                "com.dell.pg.jraf.client.jobmgr.JrafJobExecStatus@50842dd7[ name=FAILED ordinal=3 ]",
                "com.dell.pg.jraf.client.jobmgr.JrafJobExecStatus@7aa7643d[ name=CANCELLED ordinal=4 ]",
                "com.dell.pg.jraf.client.jobmgr.JrafJobExecStatus@65396278[ name=UNKNOWN ordinal=5 ]",
                "com.dell.pg.jraf.client.jobmgr.JrafJobExecStatus@704614f7[ name=ABNORMAL_TERMINATION ordinal=6 ]"
              ]
            }
          }
        },
        "operationId": "get-JobHistory-jobName-status",
        "description": "Retrieve Job Status"
      }
    },
    "/JobHistory/executiontree": {
      "get": {
        "summary": "Retrieve the execution trees for jobs that meet specified criteria",
        "tags": [
          "Job History"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JrafJobTreeList"
            }
          }
        },
        "operationId": "get-JobHistory-executiontree",
        "description": "Retrieve the execution trees for jobs that meet specified criteria",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "jobName",
            "description": "Job Name",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "jobSelector",
            "description": "Selector",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "qrtzGroup",
            "description": "Quartz Group Id",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "status",
            "description": "Job Status",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "createdBy",
            "description": "Created By",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "startedBy",
            "description": "Started By",
            "required": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "sinceEpochTime",
            "description": "Since Epoch Time",
            "required": true
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "topLevelJobsOnly",
            "description": "Top-Level Jobs Only",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Sort Specification",
            "required": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Number of Records",
            "required": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "Record Offset",
            "required": true
          }
        ]
      }
    },
    "/JobHistory/executiontree/node/{jobExecutionId}": {
      "parameters": [
        {
          "type": "string",
          "name": "jobExecutionId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve the execution trees for the specific job execution",
        "tags": [
          "Job History"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JrafJobTreeNode"
            }
          }
        },
        "operationId": "get-JobHistory-executiontree-node-jobExecutionId",
        "description": "Retrieve the execution trees for the specific job execution"
      }
    },
    "/JobHistory/detail/name/{qrtzName}/group/{qrtzGroup}": {
      "parameters": [
        {
          "type": "string",
          "name": "qrtzName",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "qrtzGroup",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve the job history for a specific Quartz job key",
        "tags": [
          "Job History"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JrafJobHistory"
            }
          }
        },
        "operationId": "get-JobHistory-detail-name-qrtzName-group-qrtzGroup",
        "description": "Retrieve the job history for a specific Quartz job key"
      }
    },
    "/JobManager": {
      "get": {
        "summary": "Retrieve a list of jobs that are scheduled",
        "tags": [
          "Job Manager"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JrafJobInfo"
              }
            }
          }
        },
        "operationId": "get-JobManager",
        "description": "Retrieve a list of jobs that are scheduled",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Sort Specification"
          },
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Filters"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Number of Records",
            "default": 50
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "Record Offset",
            "default": 0
          }
        ]
      }
    },
    "/JobManager/group/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Deletes the given job",
        "operationId": "delete-JobManager-group-id",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Deletes the given job",
        "tags": [
          "Job Manager"
        ]
      }
    },
    "/JobManager/executing": {
      "get": {
        "summary": "Retrieve a list of currently executing jobs",
        "tags": [
          "Job Manager"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JrafJobExecutionContextList"
            }
          }
        },
        "operationId": "get-JobManager-executing",
        "description": "Retrieve a list of currently executing jobs"
      }
    },
    "/JobManager/group": {
      "get": {
        "summary": "Get the group names of all scheduled and executing jobs",
        "tags": [
          "Job Manager"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JrafJobGroupNames"
            }
          }
        },
        "operationId": "get-JobManager-group",
        "description": "Get the group names of all scheduled and executing jobs"
      }
    },
    "/ManagedDevice/export/firmware/csv": {
      "get": {
        "summary": "Exports Firmware Report all Devices in CSV format",
        "tags": [
          "Managed Device"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StreamingResponseBody"
            }
          }
        },
        "operationId": "get-ManagedDevice-export-firmware-csv",
        "description": "Exports Firmware Report all Devices in CSV format"
      }
    },
    "/ManagedDevice/export/firmware/pdf": {
      "get": {
        "summary": "Exports Firmware Report all Devices in PDF format",
        "tags": [
          "Managed Device"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StreamingResponseBody"
            }
          }
        },
        "operationId": "get-ManagedDevice-export-firmware-pdf",
        "description": "Exports Firmware Report all Devices in PDF format"
      }
    },
    "/ManagedDevice/serverFacingSwitchInterfaces": {
      "get": {
        "summary": "Get top of rack switches from DeviceInventory, return array of SwitchInterfaceDetails",
        "tags": [
          "Managed Device"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SwitchInterfacesDetails"
              }
            }
          }
        },
        "operationId": "get-ManagedDevice-serverFacingSwitchInterfaces",
        "description": "Get top of rack switches from DeviceInventory, return array of SwitchInterfaceDetails"
      }
    },
    "/ManagedDevice/driveop": {
      "put": {
        "summary": "Replace drive on a server node",
        "operationId": "put-ManagedDevice-driveop",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DriveOperationRequest"
            }
          }
        },
        "description": "Replace drive on a server node.",
        "tags": [
          "Managed Device"
        ]
      }
    },
    "/ManagedDevice/validatesoftwarecomponents": {
      "put": {
        "summary": "Validate Update Device Firmware Request",
        "operationId": "put-ManagedDevice-validatesoftwarecomponents",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FirmwareUpdateRequest"
            }
          }
        ],
        "description": "Validate Update Device Firmware Request",
        "tags": [
          "Managed Device"
        ]
      }
    },
    "/ManagedDevice/cancelscheduledjob": {
      "post": {
        "summary": "Update the device status for canceling the firmware update job",
        "operationId": "post-ManagedDevice-cancelschedulejob",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Update the device status for canceling the firmware update job",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "jobName",
            "description": "Job name",
            "required": true
          }
        ],
        "tags": [
          "Managed Device"
        ]
      },
      "parameters": []
    },
    "/ManagedDevice/reconfiguremdm": {
      "put": {
        "summary": "Submit MDM configuration request",
        "operationId": "put-ManagedDevice-reconfiguremdm",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MDMUpdateRequest"
            }
          }
        },
        "description": "Submit MDM configuration request.",
        "tags": [
          "Managed Device"
        ]
      }
    },
    "/ManagedDevice/getflexosgatewaymigrateinfo": {
      "post": {
        "summary": "Provides the information for gateway migration to shared datastores",
        "operationId": "post-ManagedDevice-getflexosgatewaymigrateinfo",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FlexOSGatewayMigrateInfo"
            }
          }
        },
        "description": "Provides the information for gateway migration to shared datastores.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "string",
              "description": "Gateway ID"
            }
          }
        ],
        "tags": [
          "Managed Device"
        ]
      }
    },
    "/ManagedDevice/saveflexosgatewaymigrateinfo": {
      "post": {
        "summary": "Creates job to migrate Gateway to selected datastore",
        "operationId": "post-ManagedDevice-saveflexosgatewaymigrateinfo",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SaveFlexOSGatewayMigrateInfoRequest"
            }
          }
        ],
        "description": "Creates job to migrate Gateway to selected datastore.",
        "tags": [
          "Managed Device"
        ]
      }
    },
    "/ManagedDevice/export/config-checks/pdf": {
      "get": {
        "summary": "Exports configuration checks in pdf format",
        "tags": [
          "Managed Device"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StreamingResponseBody"
            }
          }
        },
        "operationId": "get-ManagedDevice-export-config-checks-pdf",
        "description": "Exports configuration checks in pdf format"
      }
    },
    "/ManagedDevice/saveupdatedpassword": {
      "post": {
        "summary": "Update Password change for the specified Device",
        "operationId": "post-ManagedDevice-saveupdatepasswore",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UpdatePasswordChangeRequest"
              }
            }
          }
        },
        "description": "Update Password change for the specified Device.\n\nThe string that needs to be passed to the “type” attribute on the /ManagedDevice/saveupdatedpassword payload must be one of the following enum values:\n\n* ospassword\n* server\n* svm\n* scaleio",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdatePasswordChangeRequest"
            }
          }
        ],
        "tags": [
          "Managed Device"
        ]
      },
      "parameters": []
    },
    "/ManagedDevice/importNetworks": {
      "post": {
        "summary": "Import networks",
        "operationId": "post-ManagedDevice-importNetworks",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ScheduleImportNetworksJobRequest"
            }
          }
        ],
        "description": "Import networks",
        "tags": [
          "Managed Device"
        ]
      }
    },
    "/ManagedDevice/getImportNetworksJobStatus": {
      "post": {
        "summary": "Get Import network job status",
        "operationId": "post-ManagedDevice-getImportNetworksJobStatus",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Get Import network job status",
        "tags": [
          "Managed Device"
        ]
      }
    },
    "/AlertConnector/sendtestemail": {
      "post": {
        "summary": "Send test email",
        "operationId": "post-AlertConnector-sendtestemail",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VxRackFlexAlertEmailServerConfig"
            }
          }
        ],
        "description": "Send test email",
        "tags": [
          "Alert Connector"
        ]
      }
    },
    "/AlertConnector/powerflexgatewayswid": {
      "post": {
        "summary": "Get PowerFlex gateway SWID",
        "operationId": "post-AlertConnector-powerflexgatewayswid",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "description": "Get PowerFlex gateway SWID",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Alert Connector"
        ]
      }
    },
    "/AlertConnector/testconnection": {
      "post": {
        "summary": "Test email settings",
        "operationId": "post-AlertConnector-testconnection",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VxRackFlexAlertEmailServerConfig"
            }
          }
        ],
        "description": "Test email settings",
        "tags": [
          "Alert Connector"
        ]
      }
    },
    "/ServiceTemplate/uploadConfig": {
      "get": {
        "summary": "Retrieve Default Template customized with uploaded config",
        "tags": [
          "Service Template"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          }
        },
        "operationId": "get-ServiceTemplate-uploadConfig",
        "description": "Retrieve Default Template customized with uploaded config",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "configPath",
            "description": "Uploaded Config Path importConfig(String)",
            "required": true
          }
        ]
      }
    },
    "/ServiceTemplate/export": {
      "post": {
        "summary": "Export Service Template",
        "operationId": "post-ServiceTemplate-export",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServiceTemplateExportRequest"
            }
          }
        ],
        "description": "Export Service Template",
        "tags": [
          "Service Template"
        ]
      }
    },
    "/Server/flashled": {
      "put": {
        "summary": "Start or stop flashing LED on node drive",
        "operationId": "put-Server-flashled",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Start or stop flashing LED on node drive",
        "tags": [
          "Server"
        ]
      }
    },
    "/Network/ipAddress/{ipAddress}/usage": {
      "parameters": [
        {
          "type": "string",
          "name": "ipAddress",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Find network usage by IP address",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "string"
            }
          }
        },
        "operationId": "get-Network-ipAddress-ipAddress-usage",
        "description": "Find network usage by IP address"
      }
    },
    "/Network/allNetworkConfig": {
      "get": {
        "summary": "Find all network configurations records",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Network"
              }
            }
          }
        },
        "operationId": "get-Network-allNetworkConfig",
        "description": "Find all network configurations records",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Valid sort columns"
          },
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Valid filter columns"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "Specify pagination offset"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Specify page limit"
          }
        ]
      }
    },
    "/Network/saveOrUpdate/{byResourceId}": {
      "parameters": [
        {
          "type": "string",
          "name": "byResourceId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Save or Update network usage details",
        "operationId": "post-Network-saveOrUpdate-byResourceId",
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Save or Update network usage details",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkUsage"
              }
            }
          }
        ],
        "tags": [
          "Network"
        ]
      }
    },
    "/Network/{resourceId}/networkUsage": {
      "parameters": [
        {
          "type": "string",
          "name": "resourceId",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Delete an existing network usage record",
        "operationId": "delete-Network-resourceId-networkUsage",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Delete an existing network usage record",
        "tags": [
          "Network"
        ]
      }
    },
    "/Network/{networkId}/byNetworkId": {
      "parameters": [
        {
          "type": "string",
          "name": "networkId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Find Network Usage records by network ID",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkUsage"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Network-networkId-byNetworkId",
        "description": "Find Network Usage records by network ID"
      }
    },
    "/Network/{resourceId}/byResourceId": {
      "parameters": [
        {
          "type": "string",
          "name": "resourceId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Find Network Usage records by resource ID",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkUsage"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Network-resourceId-byResourceId",
        "description": "Find Network Usage records by resource ID"
      }
    },
    "/Network/ipAddress/filterAvailable": {
      "post": {
        "summary": "Filter available ip addresses from a Set of ip addresses",
        "operationId": "post-Network-ipAddress-filterAvailable",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/IPAddressList"
            }
          }
        },
        "description": "Filter available ip addresses from a Set of ip addresses",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IPAddressList"
            }
          }
        ],
        "tags": [
          "Network"
        ]
      }
    },
    "/Network/networkUsages": {
      "get": {
        "summary": "Find Network Usage records with filter",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkUsage"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Network-networkUsages",
        "description": "Find Network Usage records with filter",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Valid sort columns are: networkId,resourceType,resourceId,resourceName"
          },
          {
            "type": "array",
            "in": "query",
            "name": "filter",
            "description": "Valid filter columns are: networkId,resourceType,resourceId,resourceName,createdDate"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "offset",
            "description": "Specify pagination offset"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "limit",
            "description": "Specify page limit"
          }
        ]
      }
    },
    "/Network/importNetworks": {
      "post": {
        "summary": "Import selected networks from vCenter",
        "operationId": "post-Network-importNetworks",
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Import selected networks from vCenter",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ImportNetworksRequest"
            }
          }
        ],
        "tags": [
          "Network"
        ]
      }
    },
    "/Network/name/{networkName}": {
      "parameters": [
        {
          "type": "string",
          "name": "networkName",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Find a network by name",
        "tags": [
          "Network"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Network"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-Network-name-networkName",
        "description": "Find a network by name"
      }
    },
    "/Network/GetNetworks": {
      "post": {
        "summary": "Retrieve networks",
        "operationId": "post-Network-GetNetworks",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Uses REST payload model to hold a large filter as to not hit the query param",
        "tags": [
          "Network"
        ]
      }
    },
    "/Network/ipAddress/assign": {
      "put": {
        "summary": "Requests a list of ip addresses on the network to be assigned to the usage Guid",
        "operationId": "put-Network-ipAddress-assign",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Requests a list of ip addresses on the network to be assigned to the usage Guid",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "networkId",
            "description": "Id of network to update",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "numberToReserve",
            "description": "Number of ip addresses to reserve",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "usageGUID",
            "description": "Usage GUID to associate with ipAddress",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "role",
            "description": "Role of network range to reserve ip addresses from"
          }
        ],
        "tags": [
          "Network"
        ]
      }
    },
    "/Network/{networkId}/usage/{usageId}/assign": {
      "parameters": [
        {
          "type": "string",
          "name": "networkId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "usageId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Assigns a list of ip addresses to a Network and Usage Id",
        "operationId": "put-Network-networkId-usage-usageId-assign",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IpAddressList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Assigns a list of ip addresses to a Network and Usage Id",
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "createIfNotPresent",
            "description": "Create temporary Ip Range and Ip Address if not present"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "updateUsage",
            "description": "Update usage Id if already assigned or reserved"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IpAddressList"
            }
          }
        ],
        "tags": [
          "Network"
        ]
      }
    },
    "/Network/ipAddress/{networkId}/device/{deviceId}/reserve": {
      "parameters": [
        {
          "type": "string",
          "name": "networkId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "deviceId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Reserves an IP Address for a device for a given amount of time",
        "operationId": "put-Network-ipAddress-networkId-device-deviceId-reserve",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "string"
            }
          }
        },
        "description": "Reserves an IP Address for a device for a given amount of time.",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "calendarUnit",
            "description": "Calendar unit to request reservation for",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "numberOfUnit",
            "description": "Calendar unit to request reservation for",
            "required": true
          }
        ],
        "tags": [
          "Network"
        ]
      }
    },
    "/Network/ipAddress/{usageId}/permanent": {
      "parameters": [
        {
          "type": "string",
          "name": "usageId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Convert IP Address from reserved to assigned",
        "operationId": "put-Network-ipAddress-usageId-permanent",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Convert IP Address from reserved to assigned",
        "tags": [
          "Network"
        ]
      }
    },
    "/Network/ipAddress/release": {
      "put": {
        "summary": "Releases ip addresses assigned to a usage guid",
        "operationId": "put-Network-ipAddress-release",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Releases ip addresses assigned to a usage guid",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "usageGUID",
            "description": "Usage GUID associated with ipAddress(es)",
            "required": true
          }
        ],
        "tags": [
          "Network"
        ]
      }
    },
    "/Network/{networkId}/release": {
      "parameters": [
        {
          "type": "string",
          "name": "networkId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Releases ip addresses for specified network ID",
        "operationId": "put-Network-networkId-release",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Releases ip addresses for specified network ID",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IpAddressList"
            }
          }
        ],
        "tags": [
          "Network"
        ]
      }
    },
    "/Network/usage/{usageId}/release": {
      "parameters": [
        {
          "type": "string",
          "name": "usageId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Releases ip addresses for specified usage ID",
        "operationId": "put-Network-usage-usageId-release",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Releases ip addresses for specified usage ID",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/IpAddressList"
            }
          }
        ],
        "tags": [
          "Network"
        ]
      }
    },
    "/ServiceTemplate/refreshTemplate": {
      "post": {
        "summary": "Refreshes the Template with latest values",
        "operationId": "post-ServiceTemplate-refreshTemplate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "inDeployment",
            "description": "If Service Template is in Deployment",
            "required": true
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "isBrownfield",
            "description": "Is Used in Brownfield Service",
            "required": true
          }
        ],
        "description": "Refreshes the Template with latest values",
        "tags": [
          "Service Template"
        ]
      }
    },
    "/Compatibility": {
      "get": {
        "summary": "Get the compatibility management settings for the appliance",
        "tags": [
          "Compatibility"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompatibilityManagementSettings"
            }
          }
        },
        "operationId": "get-compatibilityManagement",
        "description": "Get the compatibility management settings for the appliance"
      },
      "post": {
        "summary": "Sets compatibility management settings",
        "operationId": "post-compatibilityManagement",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompatibilityManagementSettings"
            }
          }
        },
        "description": "Sets compatibility management settings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CompatibilityManagementSettings"
            }
          }
        ],
        "tags": [
          "Compatibility"
        ]
      },
      "parameters": []
    },
    "/Compatibility/compatiblePowerflexVersions/{rcmVersion}": {
      "parameters": [
        {
          "type": "string",
          "name": "rcmVersion",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get PowerFlex versions compatible with passed in version",
        "tags": [
          "Compatibility"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "operationId": "get-compatibilityManagement-compatiblePowerflexVersions-rcmVersion",
        "description": "Get PowerFlex versions compatible with passed in version"
      }
    },
    "/Compatibility/changeComplianceFile": {
      "post": {
        "summary": "Change compliance file",
        "operationId": "post-compatibilityManagement-changeComplianceFile",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ComplianceFileCompatibility"
            }
          }
        },
        "description": "Change compliance file",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ComplianceFileCompatibility"
            }
          }
        ],
        "tags": [
          "Compatibility"
        ]
      },
      "parameters": []
    },
    "/Compatibility/checkRCMCompatibleWithCurrentPFXMVersion": {
      "post": {
        "summary": "Check if passed in rcmVersion is compatible with current PowerFlex Manager",
        "operationId": "post-compatibilityManagement-checkRCMCompatibleWithCurrentPFXMVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "description": "Check if passed in rcmVersion is compatible with current PowerFlex Manager",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Compatibility"
        ]
      },
      "parameters": []
    },
    "/Compatibility/checkAllDeploymentRCMsCompatibleWithPFXMVersion": {
      "post": {
        "summary": "Check if current service RCMs are compatible with PowerFlex Manager version",
        "operationId": "post-compatibilityManagement-checkAllDeploymentRCMsCompatibleWithPFXMVersion",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "description": "Check if current service RCMs are compatible with PowerFlex Manager version",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Compatibility"
        ]
      },
      "parameters": []
    },
    "/Compatibility/downloadCompatibilityManagementSettings": {
      "get": {
        "summary": "Downloads and sets compatibility management settings",
        "tags": [
          "Compatibility"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CompatibilityManagementSettings"
            }
          }
        },
        "operationId": "get-compatibilityManagement-downloadCompatibilityManagementSettings",
        "description": "Downloads and sets compatibility management settings"
      },
      "parameters": []
    },
    "/FirmwareRepository/{id}/allowunsignedfile": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Repository ID"
        }
      ],
      "put": {
        "summary": "Allow an unsigned RCM file",
        "operationId": "put-FirmwareRepository-id-allowunsignedfile",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Allow an unsigned RCM file. \n\nThis API supports the new feature added in version 3.8 for signing RCM files. Old RCM files which are still unsigned will go into the \"needsApproval\" state after download and will not be available for use at that stage. This API must be called in order to allow PowerFlex Manager to continue extracting and getting the RCM file into a ready state where it can be used for service deployment or node expansion.\n\nRCM files that are correctly signed (version 3.8 or newer) do not require calling this API, as they will not go into the \"needsApproval\" state.\n\nThis API takes no payload and returns no response.",
        "tags": [
          "Firmware Repository"
        ]
      }
    },
    "/component/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a service template component by Id",
        "responses": {
          "200": {
            "description": "Successful operatio",
            "schema": {
              "$ref": "#/definitions/ServiceTemplateComponent"
            }
          }
        },
        "operationId": "get-component-id",
        "parameters": [
          {
            "type": "boolean",
            "in": "query",
            "name": "forDeployment",
            "description": "Flag should not be used and is specified for internal processing only",
            "required": true
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "forEdit",
            "description": "Flag for if response will be used editing the template component"
          }
        ],
        "tags": [
          "Component"
        ]
      },
      "put": {
        "summary": "Update service template component",
        "operationId": "put-component-id",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServiceTemplateComponent"
            }
          }
        ],
        "tags": [
          "Component"
        ]
      }
    },
    "/component": {
      "get": {
        "summary": "List service template components for the specified filter",
        "tags": [
          "Component"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-component",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "filter",
            "description": "Required filter. Should include at least serviceTemplate.templateId: (serviceTemplate.templateId eq \"c52859c9-96d3-40ec-9b4a-bc0612a272cb\") Search Operators: eq (equals), ne (not equal), ge (greater than equal), le (less than equal), gt (greater than), lt (less than), like, ilike, sw (starts with), ew (ends with), in, empty, notempty, null, notnull Search Controls: and, or, not: (name like \"component-\") and (name not ew \"-local\") Searching for Strings should use \" delimiter around the String. Searching for \"in\" should be a comma separated list of values. Filtered result is supported on children- serviceTemplate, resources, parameters Example of parent level filter:  ((id eq \"bf794626-b5d1-4538-9c42-5a91032ae397\") and (cloned eq true)) Example of child level filter:  (parameters.value like \"vcenter\")"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Supported sort columns are: name,createdBy,createdDate,updatedBy,updatedDate"
          },
          {
            "type": "string",
            "in": "query",
            "name": "offset",
            "description": "Specify pagination offset"
          },
          {
            "type": "string",
            "in": "query",
            "name": "limit",
            "description": "Specify page limit"
          }
        ]
      }
    },
    "/volumes/volume/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a Volume by Id",
        "tags": [
          "Volumes"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Volume"
            }
          }
        },
        "operationId": "get-volumes-volume-id"
      }
    },
    "/volumes/volume": {
      "get": {
        "summary": "List volumes for the specified filter",
        "tags": [
          "Volumes"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/VolumeList"
            }
          }
        },
        "operationId": "get-volumes-volume",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "filter",
            "description": "Required filter. Must include at least gateway and vcenter: (gatewayId eq \"scaleio-100.68.85.82\") or (vcenterId eq \"vcenter-100.68.77.215\") Search Operators: eq (equals), ne (not equal), ge (greater than equal), le (less than equal), gt (greater than), lt (less than), like, ilike, sw (starts with), ew (ends with), in, empty, notempty, null, notnull Search Controls: and, or, not: (gatewayId eq \"scaleio-100.68.85.82\") or (vcenterId not eq \"vcenter-100.68.77.215\") Searching for Strings should use \" delimiter around the String. Searching for \"in\" should be a comma separated list of values.Filtered result is supported on children- datastores, sdcs Example of parent level filter:  ((gatewayId eq \"scaleio-100.68.85.82\") and (name like \"test-HC-vol\")) Example of child level filter:  (sdcs.ipAddress eq \"10.125.78.20\")"
          },
          {
            "type": "string",
            "in": "query",
            "name": "order",
            "description": "Valid sort columns are: name,size,type"
          },
          {
            "type": "string",
            "in": "query",
            "name": "offset",
            "description": "Specify pagination offset"
          },
          {
            "type": "string",
            "in": "query",
            "name": "limit",
            "description": "Specify page limit"
          }
        ]
      }
    },
    "/volumes/volume/findAvailableSequences": {
      "get": {
        "summary": "Retrieve a List of numbers based on filter and count",
        "tags": [
          "Volumes"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NumberList"
            }
          }
        },
        "operationId": "get-volumes-volume-findAvailableSequences",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "deviceId",
            "description": "PowerFlex OS Id (ex.. scaleio-100.68.97.210)",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter",
            "description": "Volume Name filter (ex.. vol-%)",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "limit",
            "description": "The number of instances to retrieve",
            "required": true
          }
        ]
      }
    },
    "/volumes/datastore/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a Volume by Id",
        "tags": [
          "Datastores"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Datastore"
            }
          }
        },
        "operationId": "get-volumes-datastore-id"
      }
    },
    "/volumes/datastore": {
      "get": {
        "summary": "List volumes for the specified filter",
        "tags": [
          "Datastores"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DatastoreList"
            }
          }
        },
        "operationId": "get-volumes-datastore",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "filter",
            "description": "Required filter. Must include at least vcenter ID: (vcenterId eq vcenter-100.68.77.215). Also all columns from Datastore are available i.e. name, id etc. Search Operators: eq (equals), ne (not equal), ge (greater than equal), le (less than equal), gt (greater than), lt (less than), like, ilike, sw (starts with), ew (ends with), in, empty, notempty, null, notnull, and, or, not example of parent level filter:  (vcenterId eq vcenter-100.68.1.1) and (datacenterId eq datacenter-2) and (name eq datastore-1)  example of child level filter:  (volume.sizeInKb gt 16)",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "order",
            "description": "Valid sort columns are the same as in Datastore: name, id, etc"
          },
          {
            "type": "string",
            "in": "query",
            "name": "offset",
            "description": "Specify pagination offset"
          },
          {
            "type": "string",
            "in": "query",
            "name": "limit",
            "description": "Specify page limit"
          }
        ]
      }
    },
    "/volumes/datastore/findAvailableSequences": {
      "get": {
        "summary": "Retrieves a List of numbers based on filter and count",
        "tags": [
          "Datastores"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NumberList"
            }
          }
        },
        "operationId": "get-volumes-datastore-findAvailableSequences",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "vcenterId",
            "description": "VCenter Id (ex.. vcenter-100.68.97.210)",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "datacenterId",
            "description": "Datacenter Id (ex.. datacenter-15)",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter",
            "description": "Datastore Name filter (ex.. datastore-%)",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "limit",
            "description": "The number of instances to retrieve",
            "required": true
          }
        ],
        "description": ""
      }
    },
    "/resourcegroup/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get a Deployment by Id",
        "tags": [
          "Resource Group"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          }
        },
        "operationId": "get-resourcegroup-id"
      }
    },
    "/resourcegroup/template/{templateId}/avaiablenodes": {
      "parameters": [
        {
          "type": "string",
          "name": "templateId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Gets available ManagedDevices for creating a new Deployment from a published service template",
        "operationId": "post-resourcegroup-template-templateId-avaiablenodes",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedDeviceList"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FilterNodesRequest"
            },
            "description": ""
          }
        ],
        "tags": [
          "Resource Group"
        ]
      }
    },
    "/resourcegroup": {
      "get": {
        "summary": "List Deployments for the specified filter",
        "tags": [
          "Resource Group"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Deployment"
              }
            }
          }
        },
        "operationId": "get-resourcegroup",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "filter",
            "description": "Search Operators: eq (equals), ne (not equal), ge (greater than equal), le (less than equal), gt (greater than), lt (less than), like, ilike, sw (starts with), ew (ends with), in, empty, notempty, null, notnull Search Controls: and, or, not: (name like \"CO-\") and (name not ew \"-nodes\") Searching for Strings should use \" delimiter around the String. Searching for \"in\" should be a comma separated list of values. Filtered result is supported on children- deployedDevices, firmwareRepositoryEntity, softwareLicenseRepositoryEntity, softwareLicenseRepositoryEntity, namesRefs, assignedUserList, serviceTemplate, components, resources, parameters. Example of parent level filter:  ((id eq \"bf794626-b5d1-4538-9c42-5a91032ae397\") and (allUsersAllowed ne false)) Example of child level filter:  (deployedDevices.serviceTag like \"JZ63\")"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Supported sort columns are: name,createdBy,createdDate,updatedBy,updatedDate"
          },
          {
            "type": "string",
            "in": "query",
            "name": "offset",
            "description": "Specify pagination offset"
          },
          {
            "type": "string",
            "in": "query",
            "name": "limit",
            "description": "Specify page limit"
          }
        ]
      }
    },
    "/device/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Gets a Managed Device by refId",
        "tags": [
          "Device"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ManagedDevice"
            }
          }
        },
        "operationId": "get-device-id"
      }
    },
    "/device": {
      "get": {
        "summary": "List ManagedDevices for the specified filter",
        "tags": [
          "Device"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ManagedDeviceList"
            }
          }
        },
        "operationId": "get-device",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "filter",
            "description": "Search Operators: eq (equals), ne (not equal), ge (greater than equal), le (less than equal), gt (greater than), lt (less than), like, ilike, sw (starts with), ew (ends with), in, empty, notempty, null, notnull Search Controls: and, or, not: (displayName like \"server-\") and (displayName not ew \"-XFJ\") Searching for Strings should use \" delimiter around the String. Searching for \"in\" should be a comma separated list of values. Filtered result is supported on children- deviceGroupList, deviceLastJobList, deployments Example of parent level filter:  (refId eq \"vcenter-cluster1\") Example of child level filter:  (deployments.id eq \"bf794626-b5d1-4538-9c42-5a91032ae397\")"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Supported sort columns are: displayName,createdBy,createdDate,updatedBy,updatedDate"
          },
          {
            "type": "string",
            "in": "query",
            "name": "offset",
            "description": "Specify pagination offset"
          },
          {
            "type": "string",
            "in": "query",
            "name": "limit",
            "description": "Specify page limit"
          }
        ]
      }
    },
    "/corelcm/status": {
      "get": {
        "summary": "Get PFMP Version and Status",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoreLCMStatus"
            }
          }
        },
        "operationId": "get-corelcm-status",
        "description": "Retrieve the PowerFlex Manager platform version and status.",
        "tags": [
          "CoreLCM"
        ]
      }
    },
    "/nodepool": {
      "get": {
        "summary": "List Device Groups for the specified filter",
        "tags": [
          "Nodepool"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceGroupList"
            }
          }
        },
        "operationId": "get-nodepool",
        "description": "List Device Groups for the specified filter",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "filter",
            "description": "Search Operators: eq (equals), ne (not equal), ge (greater than equal), le (less than equal), gt (greater than), lt (less than), like, ilike, sw (starts with), ew (ends with), in, empty, notempty, null, notnullSearch Controls: and, or, not: (name like \"CO-\") and (name not ew \"-nodes\")Searching for Strings should use \" delimiter around the String. Searching for \"in\" should be a comma separated list of values.Filtered result is supported on children- deviceInventories. Example of parent level filter: (name eq \"nodepool-1\")Example of child level filter:  (deviceInventories.ipAddress ne \"10.125.148.25\")"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Supported sort columns are: name,createdBy,createdDate,updatedBy,updatedDate"
          },
          {
            "type": "string",
            "in": "query",
            "name": "offset",
            "description": "Specify pagination offset"
          },
          {
            "type": "string",
            "in": "query",
            "name": "limit",
            "description": "Specify page limit"
          }
        ]
      }
    },
    "/nodepool/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Gets a Device Group by Sequence Id",
        "tags": [
          "Nodepool"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceGroup"
            }
          }
        },
        "operationId": "get-nodepool-id",
        "description": "Gets a Device Group by Sequence Id"
      }
    },
    "/template": {
      "get": {
        "summary": "List ServiceTemplates for the specified filter",
        "tags": [
          "Template"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceTemplateList"
            }
          }
        },
        "operationId": "get-template",
        "description": "List ServiceTemplates for the specified filter",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "filter",
            "description": "Search Operators: eq (equals), ne (not equal), ge (greater than equal), le (less than equal), gt (greater than), lt (less than), like, ilike, sw (starts with), ew (ends with), in, empty, notempty, null, notnullSearch Controls: and, or, not: (name like \"component-\") and (name not ew \"-local\")Searching for Strings should use \" delimiter around the String. Searching for \"in\" should be a comma separated list of values.Filtered result is supported on children- detailedMessages, assignedUserList, firmwareRepositoryEntity, softwareLicenseRepositoryEntity, deployment, componentsexample of parent level filter:  (id eq \"bf794626-b5d1-4538-9c42-5a91032ae397\")example of child level filter:  (deployments.id eq \"bf794626-b5d1-4538-9c42-5a91032ae397\")"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort",
            "description": "Supported sort columns are: name,createdBy,createdDate,updatedBy,updatedDate"
          },
          {
            "type": "string",
            "in": "query",
            "name": "offset",
            "description": "Specify pagination offset"
          },
          {
            "type": "string",
            "in": "query",
            "name": "limit",
            "description": "Specify page limit"
          }
        ]
      }
    },
    "/template/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get ServiceTemplate by Id",
        "tags": [
          "Template"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceTemplate"
            }
          }
        },
        "operationId": "get-template-id",
        "description": "Get ServiceTemplate by Id"
      }
    }
  },
  "definitions": {
    "asmCredential": {
      "title": "asmCredential",
      "type": "object",
      "properties": {
        "credential": {
          "$ref": "#/definitions/credential"
        },
        "link": {
          "$ref": "#/definitions/Link"
        },
        "references": {
          "$ref": "#/definitions/Link"
        }
      },
      "description": "asmCredential\n\n**Caution:** For the /Credential/ POST and /Credential/{id} PUT APIs, XML is required for request payloads.\n\nThe credential property must be constructed as a tag indicating the type of credential. The tag to use depends on the resource:\n\n- For a node, use serverCredential\n- For a switch, use iomCredential\n- For a vCenter, use vCenterCredential\n- For an Element Manager, use emCredential\n- For a PowerFlex Gateway, use scaleIOCredential\n- For a presentation server, use PSCredential\n- For an operating system administrator, use OSCredential\n- For an operating system user, use OSUserCredential\n",
      "x-examples": {}
    },
    "AsmDetailedMessage": {
      "title": "AsmDetailedMessage",
      "type": "object",
      "description": "AsmDetailedMessage",
      "properties": {
        "timeStamp": {
          "type": "string"
        },
        "messageBundle": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "sequenceNumber": {
          "type": "integer"
        },
        "category": {
          "type": "string"
        },
        "displayMessage": {
          "type": "string"
        },
        "messageCode": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "agentId": {
          "type": "string"
        },
        "responseAction": {
          "type": "string"
        },
        "detailedMessage": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "AuthenticateRequest": {
      "title": "AuthenticateRequest",
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "description": "AuthenticateRequest"
    },
    "credential": {
      "title": "credential",
      "type": "object",
      "description": "credential",
      "properties": {
        "createdDate": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "link": {
          "$ref": "#/definitions/Link"
        },
        "username": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "Link": {
      "title": "Link",
      "type": "object",
      "properties": {
        "rel": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "rel",
        "href"
      ],
      "description": "Link"
    },
    "credentialList": {
      "title": "credentialList",
      "type": "object",
      "properties": {
        "totalRecords": {
          "type": "integer"
        },
        "credentialList": {
          "$ref": "#/definitions/asmCredential"
        }
      },
      "description": "credentialList"
    },
    "AuthenticateResponse": {
      "title": "AuthenticateResponse",
      "type": "object",
      "properties": {
        "userName string true": {
          "type": "string"
        },
        "apiSecret": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "apiKey": {
          "type": "string"
        }
      },
      "description": "AuthenticateResponse"
    },
    "availableTimeZones": {
      "title": "availableTimeZones",
      "type": "object",
      "properties": {
        "availableTimeZones": {
          "$ref": "#/definitions/timeZone"
        }
      },
      "description": "availableTimeZones"
    },
    "Controller": {
      "title": "Controller",
      "type": "object",
      "description": "Controller",
      "properties": {
        "enclosures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Enclosure"
          }
        },
        "fqdd": {
          "type": "string"
        },
        "virtualDisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualDisk"
          }
        },
        "physicalDisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhysicalDisk"
          }
        },
        "numPhysDisks": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "deviceDescription": {
          "type": "string"
        },
        "firmwareVersion": {
          "type": "string"
        },
        "driverVersion": {
          "type": "string"
        },
        "pciSlot": {
          "type": "integer",
          "format": "int32"
        },
        "cacheSizeInMB": {
          "type": "integer",
          "format": "int64"
        },
        "embeddedController": {
          "type": "boolean"
        }
      }
    },
    "Deployment": {
      "title": "Deployment",
      "type": "object",
      "description": "Deployment",
      "x-examples": {
        "example-1": {
          "createdDate": "2019-08-24T14:15:22Z",
          "updatedBy": "string",
          "updatedDate": "2019-08-24T14:15:22Z",
          "firmwareRepository": {
            "createdDate": "2019-08-24T14:15:22Z",
            "updatedBy": "string",
            "updatedDate": "2019-08-24T14:15:22Z",
            "softwareComponents": [
              {
                "createdDate": "2019-08-24T14:15:22Z",
                "updatedBy": "string",
                "updatedDate": "2019-08-24T14:15:22Z",
                "deviceId": "string",
                "componentId": "string",
                "packageId": "string",
                "dellVersion": "string",
                "vendorVersion": "string",
                "subDeviceId": "string",
                "vendorId": "string",
                "subVendorId": "string",
                "hashMd5": "string",
                "systemIDs": [
                  "string"
                ],
                "category": "string",
                "createdBy": "string",
                "componentType": "string",
                "name": "string",
                "id": "string",
                "path": "string",
                "operatingSystem": "string"
              }
            ],
            "sourceLocation": "string",
            "sourceType": "string",
            "diskLocation": "string",
            "md5Hash": "string",
            "downloadStatus": "pending",
            "softwareBundles": [
              {
                "deviceType": "string",
                "createdDate": "2019-08-24T14:15:22Z",
                "updatedBy": "string",
                "updatedDate": "2019-08-24T14:15:22Z",
                "softwareComponents": [
                  {
                    "createdDate": "2019-08-24T14:15:22Z",
                    "updatedBy": "string",
                    "updatedDate": "2019-08-24T14:15:22Z",
                    "deviceId": "string",
                    "componentId": "string",
                    "packageId": "string",
                    "dellVersion": "string",
                    "vendorVersion": "string",
                    "subDeviceId": "string",
                    "vendorId": "string",
                    "subVendorId": "string",
                    "hashMd5": "string",
                    "systemIDs": [
                      "string"
                    ],
                    "category": "string",
                    "createdBy": "string",
                    "componentType": "string",
                    "name": "string",
                    "id": "string",
                    "path": "string",
                    "operatingSystem": "string"
                  }
                ],
                "userBundlePath": "string",
                "userBundle": true,
                "userBundleHashMd5": "string",
                "deviceModel": "string",
                "criticality": "string",
                "fwRepositoryId": "string",
                "bundleDate": "2019-08-24T14:15:22Z",
                "version": "string",
                "description": "string",
                "link": {
                  "rel": "string",
                  "href": "string",
                  "title": "string",
                  "type": "string"
                },
                "createdBy": "string",
                "name": "string",
                "id": "string",
                "bundleType": "SOFTWARE"
              }
            ],
            "bundleCount": 0,
            "defaultCatalog": true,
            "componentCount": 0,
            "deployments": [
              {
                "createdDate": "2019-08-24T14:15:22Z",
                "updatedBy": "string",
                "updatedDate": "2019-08-24T14:15:22Z",
                "firmwareRepository": {},
                "assignedUsers": [
                  {
                    "userName": "string",
                    "createdDate": "2019-08-24T14:15:22Z",
                    "updatedBy": "string",
                    "updatedDate": "2019-08-24T14:15:22Z",
                    "groupName": "string",
                    "email": "string",
                    "phoneNumber": "string",
                    "systemUser": true,
                    "userSeqId": 0,
                    "updatePassword": true,
                    "domainName": "string",
                    "groupDN": "string",
                    "firstName": "string",
                    "lastName": "string",
                    "enabled": "true",
                    "link": {
                      "rel": "string",
                      "href": "string",
                      "title": "string",
                      "type": "string"
                    },
                    "role": "string",
                    "createdBy": "string",
                    "password": "string",
                    "userPreference": "string"
                  }
                ],
                "allUsersAllowed": true,
                "teardown": true,
                "templateValid": true,
                "brownfield": true,
                "vds": true,
                "deploymentHealthStatusType": "green",
                "canMigrate": true,
                "scheduleDate": "string",
                "numberOfDeployments": 0,
                "firmwareRepositoryId": "string",
                "deploymentName": "string",
                "deploymentDescription": "string",
                "serviceTemplate": {
                  "createdDate": "2019-08-24T14:15:22Z",
                  "updatedBy": "string",
                  "updatedDate": "2019-08-24T14:15:22Z",
                  "firmwareRepository": {},
                  "draft": true,
                  "templateName": "string",
                  "templateDescription": "string",
                  "wizardPageNumber": 0,
                  "assignedUsers": [
                    {
                      "userName": "string",
                      "createdDate": "2019-08-24T14:15:22Z",
                      "updatedBy": "string",
                      "updatedDate": "2019-08-24T14:15:22Z",
                      "groupName": "string",
                      "email": "string",
                      "phoneNumber": "string",
                      "systemUser": true,
                      "userSeqId": 0,
                      "updatePassword": true,
                      "domainName": "string",
                      "groupDN": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "enabled": "true",
                      "link": {
                        "rel": "string",
                        "href": "string",
                        "title": "string",
                        "type": "string"
                      },
                      "role": "string",
                      "createdBy": "string",
                      "password": "string",
                      "userPreference": "string"
                    }
                  ],
                  "allUsersAllowed": true,
                  "templateValid": {
                    "valid": true,
                    "messages": [
                      {
                        "timeStamp": "string",
                        "messageBundle": "string",
                        "severity": "string",
                        "sequenceNumber": 0,
                        "category": "string",
                        "displayMessage": "string",
                        "messageCode": "string",
                        "correlationId": "string",
                        "agentId": "string",
                        "responseAction": "string",
                        "detailedMessage": "string"
                      }
                    ]
                  },
                  "templateLocked": true,
                  "templateVersion": "string",
                  "lastDeployedDate": "2019-08-24T14:15:22Z",
                  "manageFirmware": true,
                  "components": {
                    "id": "string",
                    "componentID": "string",
                    "identifier": "string",
                    "componentValid": {
                      "valid": true,
                      "messages": [
                        {
                          "timeStamp": "string",
                          "messageBundle": "string",
                          "severity": "string",
                          "sequenceNumber": 0,
                          "category": "string",
                          "displayMessage": "string",
                          "messageCode": "string",
                          "correlationId": "string",
                          "agentId": "string",
                          "responseAction": "string",
                          "detailedMessage": "string"
                        }
                      ]
                    },
                    "name": "string",
                    "helpText": "string",
                    "clonedFromId": "string",
                    "teardown": true,
                    "type": "string",
                    "subType": "CLASS",
                    "relatedComponents": {},
                    "resources": [
                      {
                        "parameters": [
                          {
                            "min": 0,
                            "networks": [
                              {
                                "id": "string",
                                "name": "string",
                                "description": "string",
                                "type": "HYPERVISOR_MANAGEMENT",
                                "vlanId": 0,
                                "staticNetworkConfiguration": {
                                  "ipAddress": "string",
                                  "subnet": "string",
                                  "gateway": "string",
                                  "primaryDns": "string",
                                  "secondaryDns": "string",
                                  "dnsSuffix": "string",
                                  "ipRange": [
                                    {
                                      "startingIp": "string",
                                      "endingIp": "string",
                                      "id": "string",
                                      "role": "sdconly"
                                    }
                                  ],
                                  "staticRoute": [
                                    {
                                      "staticRouteSourceNetworkId": "string",
                                      "staticRouteDestinationNetworkId": "string",
                                      "subnetMask": "string",
                                      "destinationIpAddress": "string"
                                    }
                                  ],
                                  "staticRoutes": [
                                    {
                                      "staticRouteSourceNetworkId": "string",
                                      "staticRouteDestinationNetworkId": "string",
                                      "subnetMask": "string",
                                      "destinationIpAddress": "string"
                                    }
                                  ]
                                },
                                "destinationIpAddress": "string",
                                "static": true,
                                "createdDate": "2019-08-24T14:15:22Z",
                                "createdBy": "string",
                                "updatedDate": "2019-08-24T14:15:22Z",
                                "updatedBy": "string",
                                "link": {
                                  "rel": "string",
                                  "href": "string",
                                  "title": "string",
                                  "type": "string"
                                }
                              }
                            ],
                            "dependencyValue": "string",
                            "dependencyTarget": "string",
                            "optionsSortable": true,
                            "step": 0,
                            "requiredAtDeployment": true,
                            "hideFromTemplate": true,
                            "toolTip": "string",
                            "infoIcon": true,
                            "maxLength": 0,
                            "networkConfiguration": {
                              "networks": [
                                {
                                  "id": "string",
                                  "ipAddress": "string"
                                }
                              ],
                              "definedInterfaces": [
                                {
                                  "fqdd": "string",
                                  "maxPartitions": 0,
                                  "partitioned": true,
                                  "partitions": [
                                    {
                                      "id": "string",
                                      "name": "string",
                                      "networks": [
                                        "string"
                                      ],
                                      "networkObjects": [
                                        {
                                          "id": "string",
                                          "name": "string",
                                          "description": "string",
                                          "type": "HYPERVISOR_MANAGEMENT",
                                          "vlanId": 0,
                                          "staticNetworkConfiguration": {
                                            "ipAddress": "string",
                                            "subnet": "string",
                                            "gateway": "string",
                                            "primaryDns": "string",
                                            "secondaryDns": "string",
                                            "dnsSuffix": "string",
                                            "ipRange": [
                                              {
                                                "startingIp": "string",
                                                "endingIp": "string",
                                                "id": "string",
                                                "role": "sdconly"
                                              }
                                            ],
                                            "staticRoute": [
                                              {
                                                "staticRouteSourceNetworkId": "string",
                                                "staticRouteDestinationNetworkId": "string",
                                                "subnetMask": "string",
                                                "destinationIpAddress": "string"
                                              }
                                            ],
                                            "staticRoutes": [
                                              {
                                                "staticRouteSourceNetworkId": "string",
                                                "staticRouteDestinationNetworkId": "string",
                                                "subnetMask": "string",
                                                "destinationIpAddress": "string"
                                              }
                                            ]
                                          },
                                          "destinationIpAddress": "string",
                                          "static": true,
                                          "createdDate": "2019-08-24T14:15:22Z",
                                          "createdBy": "string",
                                          "updatedDate": "2019-08-24T14:15:22Z",
                                          "updatedBy": "string",
                                          "link": {
                                            "rel": "string",
                                            "href": "string",
                                            "title": "string",
                                            "type": "string"
                                          }
                                        }
                                      ],
                                      "networkIpAddressList": [
                                        {
                                          "id": "string",
                                          "ipAddress": "string"
                                        }
                                      ],
                                      "minimum": 0,
                                      "maximum": 0,
                                      "lanMacAddress": "string",
                                      "iscsiMacAddress": "string",
                                      "iscsiIQN": "string",
                                      "wwnn": "string",
                                      "wwpn": "string",
                                      "macAddress": "string",
                                      "portNo": 0,
                                      "partitionNo": 0,
                                      "partitionIndex": 0,
                                      "fqdd": "string",
                                      "mirroredPort": "string"
                                    }
                                  ],
                                  "nictype": "string",
                                  "redundancy": true,
                                  "enabled": true,
                                  "name": "string",
                                  "id": "string",
                                  "allNetworks": [
                                    "string"
                                  ]
                                }
                              ],
                              "usedInterfaces": [
                                {
                                  "fqdd": "string",
                                  "maxPartitions": 0,
                                  "partitioned": true,
                                  "partitions": [
                                    {
                                      "id": "string",
                                      "name": "string",
                                      "networks": [
                                        "string"
                                      ],
                                      "networkObjects": [
                                        {
                                          "id": "string",
                                          "name": "string",
                                          "description": "string",
                                          "type": "HYPERVISOR_MANAGEMENT",
                                          "vlanId": 0,
                                          "staticNetworkConfiguration": {
                                            "ipAddress": "string",
                                            "subnet": "string",
                                            "gateway": "string",
                                            "primaryDns": "string",
                                            "secondaryDns": "string",
                                            "dnsSuffix": "string",
                                            "ipRange": [
                                              {
                                                "startingIp": "string",
                                                "endingIp": "string",
                                                "id": "string",
                                                "role": "sdconly"
                                              }
                                            ],
                                            "staticRoute": [
                                              {
                                                "staticRouteSourceNetworkId": "string",
                                                "staticRouteDestinationNetworkId": "string",
                                                "subnetMask": "string",
                                                "destinationIpAddress": "string"
                                              }
                                            ],
                                            "staticRoutes": [
                                              {
                                                "staticRouteSourceNetworkId": "string",
                                                "staticRouteDestinationNetworkId": "string",
                                                "subnetMask": "string",
                                                "destinationIpAddress": "string"
                                              }
                                            ]
                                          },
                                          "destinationIpAddress": "string",
                                          "static": true,
                                          "createdDate": "2019-08-24T14:15:22Z",
                                          "createdBy": "string",
                                          "updatedDate": "2019-08-24T14:15:22Z",
                                          "updatedBy": "string",
                                          "link": {
                                            "rel": "string",
                                            "href": "string",
                                            "title": "string",
                                            "type": "string"
                                          }
                                        }
                                      ],
                                      "networkIpAddressList": [
                                        {
                                          "id": "string",
                                          "ipAddress": "string"
                                        }
                                      ],
                                      "minimum": 0,
                                      "maximum": 0,
                                      "lanMacAddress": "string",
                                      "iscsiMacAddress": "string",
                                      "iscsiIQN": "string",
                                      "wwnn": "string",
                                      "wwpn": "string",
                                      "macAddress": "string",
                                      "portNo": 0,
                                      "partitionNo": 0,
                                      "partitionIndex": 0,
                                      "fqdd": "string",
                                      "mirroredPort": "string"
                                    }
                                  ],
                                  "nictype": "string",
                                  "redundancy": true,
                                  "enabled": true,
                                  "name": "string",
                                  "id": "string",
                                  "allNetworks": [
                                    "string"
                                  ]
                                }
                              ],
                              "allNetworkIds": [
                                "string"
                              ],
                              "interfaces": [
                                {
                                  "maxPartitions": 0,
                                  "partitioned": true,
                                  "nictype": "string",
                                  "redundancy": true,
                                  "fabrictype": "string",
                                  "nports": 0,
                                  "nictypeSource": "string",
                                  "enabled": true,
                                  "name": "string",
                                  "interfaces": [
                                    {
                                      "fqdd": "string",
                                      "maxPartitions": 0,
                                      "partitioned": true,
                                      "partitions": [
                                        {
                                          "id": "string",
                                          "name": "string",
                                          "networks": [
                                            "string"
                                          ],
                                          "networkObjects": [
                                            {
                                              "id": "string",
                                              "name": "string",
                                              "description": "string",
                                              "type": "HYPERVISOR_MANAGEMENT",
                                              "vlanId": 0,
                                              "staticNetworkConfiguration": {
                                                "ipAddress": "string",
                                                "subnet": "string",
                                                "gateway": "string",
                                                "primaryDns": "string",
                                                "secondaryDns": "string",
                                                "dnsSuffix": "string",
                                                "ipRange": [
                                                  {
                                                    "startingIp": "string",
                                                    "endingIp": "string",
                                                    "id": "string",
                                                    "role": "sdconly"
                                                  }
                                                ],
                                                "staticRoute": [
                                                  {
                                                    "staticRouteSourceNetworkId": "string",
                                                    "staticRouteDestinationNetworkId": "string",
                                                    "subnetMask": "string",
                                                    "destinationIpAddress": "string"
                                                  }
                                                ],
                                                "staticRoutes": [
                                                  {
                                                    "staticRouteSourceNetworkId": "string",
                                                    "staticRouteDestinationNetworkId": "string",
                                                    "subnetMask": "string",
                                                    "destinationIpAddress": "string"
                                                  }
                                                ]
                                              },
                                              "destinationIpAddress": "string",
                                              "static": true,
                                              "createdDate": "2019-08-24T14:15:22Z",
                                              "createdBy": "string",
                                              "updatedDate": "2019-08-24T14:15:22Z",
                                              "updatedBy": "string",
                                              "link": {
                                                "rel": "string",
                                                "href": "string",
                                                "title": "string",
                                                "type": "string"
                                              }
                                            }
                                          ],
                                          "networkIpAddressList": [
                                            {
                                              "id": "string",
                                              "ipAddress": "string"
                                            }
                                          ],
                                          "minimum": 0,
                                          "maximum": 0,
                                          "lanMacAddress": "string",
                                          "iscsiMacAddress": "string",
                                          "iscsiIQN": "string",
                                          "wwnn": "string",
                                          "wwpn": "string",
                                          "macAddress": "string",
                                          "portNo": 0,
                                          "partitionNo": 0,
                                          "partitionIndex": 0,
                                          "fqdd": "string",
                                          "mirroredPort": "string"
                                        }
                                      ],
                                      "nictype": "string",
                                      "redundancy": true,
                                      "enabled": true,
                                      "name": "string",
                                      "id": "string",
                                      "allNetworks": [
                                        "string"
                                      ]
                                    }
                                  ],
                                  "id": "string",
                                  "card_index": 0
                                }
                              ],
                              "id": "string"
                            },
                            "raidConfiguration": {
                              "externalSsdHotSpares": [
                                "string"
                              ],
                              "externalVirtualDisks": [
                                {
                                  "raidLevel": "raid0",
                                  "physicalDisks": [
                                    "string"
                                  ],
                                  "mediaType": "SSD",
                                  "controller": "string",
                                  "configuration": {
                                    "raidlevel": "raid0",
                                    "disktype": "requiressd",
                                    "numberofdisks": 0,
                                    "comparator": "minimum",
                                    "id": "string",
                                    "virtualDiskFqdd": "string",
                                    "controllerFqdd": "string"
                                  },
                                  "virtualDiskFqdd": "string",
                                  "rollUpStatus": "string",
                                  "controllerProductName": "string",
                                  "encryptionType": "string"
                                }
                              ],
                              "virtualDisks": [
                                {
                                  "raidLevel": "raid0",
                                  "physicalDisks": [
                                    "string"
                                  ],
                                  "mediaType": "SSD",
                                  "controller": "string",
                                  "configuration": {
                                    "raidlevel": "raid0",
                                    "disktype": "requiressd",
                                    "numberofdisks": 0,
                                    "comparator": "minimum",
                                    "id": "string",
                                    "virtualDiskFqdd": "string",
                                    "controllerFqdd": "string"
                                  },
                                  "virtualDiskFqdd": "string",
                                  "rollUpStatus": "string",
                                  "controllerProductName": "string",
                                  "encryptionType": "string"
                                }
                              ],
                              "externalHddHotSpares": [
                                "string"
                              ],
                              "hddHotSpares": [
                                "string"
                              ],
                              "ssdHotSpares": [
                                "string"
                              ],
                              "sizeToDiskMap": {}
                            },
                            "max": 0,
                            "group": "string",
                            "options": [
                              {
                                "dependencyValue": "string",
                                "dependencyTarget": "string",
                                "name": "string",
                                "value": "string",
                                "dependencies": [
                                  {
                                    "dependencyTarget": "string",
                                    "dependencyValue": "string",
                                    "id": "string"
                                  }
                                ],
                                "attributes": {},
                                "id": "string"
                              }
                            ],
                            "generated": true,
                            "required": true,
                            "value": "string",
                            "id": "string",
                            "type": "BOOLEAN",
                            "readOnly": true,
                            "displayName": "string",
                            "dependencies": [
                              {
                                "dependencyTarget": "string",
                                "dependencyValue": "string",
                                "id": "string"
                              }
                            ],
                            "networkIpAddressList": [
                              {
                                "id": "string",
                                "ipAddress": "string"
                              }
                            ],
                            "preservedForDeployment": true,
                            "scaleIODiskConfiguration": {
                              "scaleIOStoragePoolDisks": [
                                {
                                  "protectionDomainId": "string",
                                  "protectionDomainName": "string",
                                  "storagePoolId": "string",
                                  "storagePoolName": "string",
                                  "diskType": "SSD",
                                  "physicalDiskFqdds": [
                                    "string"
                                  ],
                                  "virtualDiskFqdds": [
                                    "string"
                                  ]
                                }
                              ]
                            },
                            "protectionDomainSettings": [
                              {
                                "general": {
                                  "id": "string",
                                  "name": "string",
                                  "systemId": "string",
                                  "protectionDomainState": "string",
                                  "rebuildNetworkThrottlingInKbps": 0,
                                  "rebalanceNetworkThrottlingInKbps": 0,
                                  "overallIoNetworkThrottlingInKbps": 0,
                                  "sdsDecoupledCounterParameters": {
                                    "shortWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    },
                                    "mediumWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    },
                                    "longWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    }
                                  },
                                  "sdsConfigurationFailureCounterParameters": {
                                    "shortWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    },
                                    "mediumWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    },
                                    "longWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    }
                                  },
                                  "mdmSdsCounterParameters": {
                                    "shortWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    },
                                    "mediumWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    },
                                    "longWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    }
                                  },
                                  "sdsSdsCounterParameters": {
                                    "shortWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    },
                                    "mediumWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    },
                                    "longWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    }
                                  },
                                  "rfcacheOpertionalMode": "string",
                                  "rfcachePageSizeKb": 0,
                                  "rfcacheMaxIoSizeKb": 0,
                                  "sdsReceiveBufferAllocationFailuresCounterParameters": {
                                    "shortWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    },
                                    "mediumWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    },
                                    "longWindow": {
                                      "threshold": 0,
                                      "windowSizeInSec": 0
                                    }
                                  },
                                  "rebuildNetworkThrottlingEnabled": true,
                                  "rebalanceNetworkThrottlingEnabled": true,
                                  "overallIoNetworkThrottlingEnabled": true,
                                  "rfcacheEnabled": true
                                },
                                "statistics": {
                                  "unusedCapacityInKb": 0,
                                  "numOfMappedToAllVolumes": 0,
                                  "capacityAvailableForVolumeAllocationInKb": 0,
                                  "capacityLimitInKb": 0,
                                  "numOfUnmappedVolumes": 0,
                                  "spareCapacityInKb": 0,
                                  "numOfSds": 0,
                                  "capacityInUseInKb": 0,
                                  "numOfStoragePools": 0,
                                  "numOfFaultSets": 0,
                                  "maxCapacityInKb": 0,
                                  "thinCapacityInUseInKb": 0,
                                  "thickCapacityInUseInKb": 0
                                },
                                "storage_pool_list": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "rebuildIoPriorityPolicy": "string",
                                    "rebalanceIoPriorityPolicy": "string",
                                    "rebuildIoPriorityNumOfConcurrentIosPerDevice": 0,
                                    "rebalanceIoPriorityNumOfConcurrentIosPerDevice": 0,
                                    "rebuildIoPriorityBwLimitPerDeviceInKbps": 0,
                                    "rebalanceIoPriorityBwLimitPerDeviceInKbps": 0,
                                    "rebuildIoPriorityAppIopsPerDeviceThreshold": "string",
                                    "rebalanceIoPriorityAppIopsPerDeviceThreshold": "string",
                                    "rebuildIoPriorityAppBwPerDeviceThresholdInKbps": 0,
                                    "rebuildIoPriorityQuietPeriodInMsec": 0,
                                    "rebalanceIoPriorityQuietPeriodInMsec": 0,
                                    "zeroPaddingEnabled": true,
                                    "backgroundScannerMode": "string",
                                    "backgroundScannerBWLimitKBps": 0,
                                    "useRmcache": true,
                                    "protectionDomainId": "string",
                                    "useRfcache": true,
                                    "sparePercentage": 0,
                                    "rmcacheWriteHandlingMode": "string",
                                    "checksumEnabled": true,
                                    "rebuildEnabled": true,
                                    "rebalanceEnabled": true,
                                    "numOfParallelRebuildRebalanceJobsPerDevice": 0,
                                    "capacityAlertHighThreshold": 0,
                                    "capacityAlertCriticalThreshold": 0,
                                    "statistics": {
                                      "numOfDevices": 0,
                                      "unusedCapacityInKb": 0,
                                      "numOfVolumes": 0,
                                      "numOfMappedToAllVolumes": 0,
                                      "capacityAvailableForVolumeAllocationInKb": 0,
                                      "volumeAllocationLimitInKb": 0,
                                      "capacityLimitInKb": 0,
                                      "numOfUnmappedVolumes": 0,
                                      "spareCapacityInKb": 0,
                                      "capacityInUseInKb": 0,
                                      "maxCapacityInKb": 0
                                    },
                                    "dataLayout": "string",
                                    "replicationCapacityMaxRatio": "string",
                                    "mediaType": "HDD",
                                    "mediaTypeFromDiskType": "SSD",
                                    "disk_list": [
                                      {
                                        "id": "string",
                                        "name": "string",
                                        "errorState": "string",
                                        "sdsId": "string",
                                        "deviceState": "string",
                                        "capacityLimitInKb": 0,
                                        "maxCapacityInKb": 0,
                                        "storagePoolId": "string",
                                        "deviceCurrentPathName": "string",
                                        "deviceOriginalPathName": "string",
                                        "serialNumber": "string",
                                        "vendorName": "string",
                                        "modelName": "string"
                                      }
                                    ],
                                    "volume_list": [
                                      {
                                        "id": "string",
                                        "name": "string",
                                        "volumeType": "string",
                                        "storagePoolId": "string",
                                        "dataLayout": "string",
                                        "compressionMethod": "string",
                                        "sizeInKb": 0,
                                        "mappedSdcInfo": [
                                          {
                                            "sdcIp": "string",
                                            "sdcId": "string",
                                            "limitBwInMbps": 0,
                                            "limitIops": 0
                                          }
                                        ]
                                      }
                                    ],
                                    "fglAccpId": "string",
                                    "rebalanceIoPriorityAppBwPerDeviceThresholdInKbps": 0
                                  }
                                ],
                                "sds_list": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "port": 0,
                                    "protectionDomainId": "string",
                                    "faultSetId": "string",
                                    "softwareVersionInfo": "string",
                                    "sdsState": "string",
                                    "membershipState": "string",
                                    "mdmConnectionState": "string",
                                    "drlMode": "string",
                                    "maintenanceState": "string",
                                    "perfProfile": "string",
                                    "onVmWare": true,
                                    "ipList": [
                                      {
                                        "ip": "string",
                                        "role": "string"
                                      }
                                    ]
                                  }
                                ],
                                "sdr_list": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "port": 0,
                                    "protectionDomainId": "string",
                                    "softwareVersionInfo": "string",
                                    "sdrState": "string",
                                    "membershipState": "string",
                                    "mdmConnectionState": "string",
                                    "maintenanceState": "string",
                                    "perfProfile": "string",
                                    "ipList": [
                                      {
                                        "ip": "string",
                                        "role": "string"
                                      }
                                    ]
                                  }
                                ],
                                "acceleration_pool": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "protectionDomainId": "string",
                                    "mediaType": "string",
                                    "rfcache": true
                                  }
                                ]
                              }
                            ],
                            "faultSetSettings": [
                              {
                                "protectionDomainId": "string",
                                "name": "string",
                                "id": "string"
                              }
                            ],
                            "attributes": {},
                            "vdsConfiguration": {
                              "datacenter": {
                                "vcenterId": "string",
                                "datacenterId": "string",
                                "datacenterName": "string"
                              },
                              "portGroupOption": "string",
                              "portGroupCreationOption": "string",
                              "vdsSettings": [
                                {
                                  "id": "string",
                                  "displayName": "string",
                                  "name": "string",
                                  "value": "string",
                                  "portGroups": [
                                    {
                                      "id": "string",
                                      "displayName": "string",
                                      "vlan": 0,
                                      "name": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              ],
                              "vdsNetworkMtuSizeConfiguration": [
                                {
                                  "id": "string",
                                  "value": "string"
                                }
                              ],
                              "vdsNetworkMTUSizeConfiguration": [
                                {
                                  "id": "string",
                                  "value": "string"
                                }
                              ]
                            }
                          }
                        ],
                        "id": "string",
                        "displayName": "string",
                        "parametersMap": {}
                      }
                    ],
                    "brownfield": true,
                    "puppetCertName": "string",
                    "managementIpAddress": "string",
                    "serialNumber": "string",
                    "asmGUID": "string",
                    "cloned": true,
                    "configFile": "string",
                    "manageFirmware": true,
                    "instances": 0,
                    "refId": "string",
                    "ip": "string",
                    "osPuppetCertName": "string",
                    "clonedFromAsmGuid": "string"
                  },
                  "category": "string",
                  "createdBy": "string",
                  "attachments": [
                    "string"
                  ],
                  "id": "string",
                  "licenseRepository": {
                    "id": "string",
                    "name": "string",
                    "type": "CloudLink",
                    "diskLocation": "string",
                    "filename": "string",
                    "state": "string",
                    "createdDate": "2019-08-24T14:15:22Z",
                    "createdBy": "string",
                    "updatedDate": "2019-08-24T14:15:22Z",
                    "updatedBy": "string",
                    "templates": [
                      {}
                    ]
                  },
                  "templateType": "string",
                  "originalTemplateId": "string",
                  "inConfiguration": true,
                  "configuration": {
                    "id": "string",
                    "categories": [
                      {
                        "id": "string",
                        "displayName": "string",
                        "deviceType": "string",
                        "parameters": [
                          {
                            "id": "string",
                            "value": "string",
                            "displayName": "string",
                            "type": "string",
                            "toolTip": "string",
                            "required": true,
                            "hideFromTemplate": true,
                            "deviceType": "string",
                            "dependencies": [
                              {
                                "dependencyTarget": "string",
                                "dependencyValue": "string"
                              }
                            ],
                            "group": "string",
                            "readOnly": true,
                            "generated": true,
                            "infoIcon": true,
                            "step": 0,
                            "maxLength": 0,
                            "min": 0,
                            "max": 0,
                            "networks": [
                              {
                                "id": "string",
                                "name": "string",
                                "description": "string",
                                "type": "HYPERVISOR_MANAGEMENT",
                                "vlanId": 0,
                                "staticNetworkConfiguration": {
                                  "ipAddress": "string",
                                  "subnet": "string",
                                  "gateway": "string",
                                  "primaryDns": "string",
                                  "secondaryDns": "string",
                                  "dnsSuffix": "string",
                                  "ipRange": [
                                    {
                                      "startingIp": "string",
                                      "endingIp": "string",
                                      "id": "string",
                                      "role": "sdconly"
                                    }
                                  ],
                                  "staticRoute": [
                                    {
                                      "staticRouteSourceNetworkId": "string",
                                      "staticRouteDestinationNetworkId": "string",
                                      "subnetMask": "string",
                                      "destinationIpAddress": "string"
                                    }
                                  ],
                                  "staticRoutes": [
                                    {
                                      "staticRouteSourceNetworkId": "string",
                                      "staticRouteDestinationNetworkId": "string",
                                      "subnetMask": "string",
                                      "destinationIpAddress": "string"
                                    }
                                  ]
                                },
                                "destinationIpAddress": "string",
                                "static": true,
                                "createdDate": "2019-08-24T14:15:22Z",
                                "createdBy": "string",
                                "updatedDate": "2019-08-24T14:15:22Z",
                                "updatedBy": "string",
                                "link": {
                                  "rel": "string",
                                  "href": "string",
                                  "title": "string",
                                  "type": "string"
                                }
                              }
                            ],
                            "options": [
                              {
                                "id": "string",
                                "name": "string",
                                "dependencies": [
                                  {
                                    "dependencyTarget": "string",
                                    "dependencyValue": "string"
                                  }
                                ],
                                "attributes": {}
                              }
                            ],
                            "optionsSortable": true
                          }
                        ],
                        "parameterMap": {}
                      }
                    ],
                    "settingsMap": {},
                    "categoriesMap": {}
                  },
                  "serverCount": 0,
                  "storageCount": 0,
                  "clusterCount": 0,
                  "serviceCount": 0,
                  "switchCount": 0,
                  "vmCount": 0,
                  "brownfieldTemplateType": "Ready",
                  "networks": [
                    {
                      "id": "string",
                      "name": "string",
                      "description": "string",
                      "type": "HYPERVISOR_MANAGEMENT",
                      "vlanId": 0,
                      "staticNetworkConfiguration": {
                        "ipAddress": "string",
                        "subnet": "string",
                        "gateway": "string",
                        "primaryDns": "string",
                        "secondaryDns": "string",
                        "dnsSuffix": "string",
                        "ipRange": [
                          {
                            "startingIp": "string",
                            "endingIp": "string",
                            "id": "string",
                            "role": "sdconly"
                          }
                        ],
                        "staticRoute": [
                          {
                            "staticRouteSourceNetworkId": "string",
                            "staticRouteDestinationNetworkId": "string",
                            "subnetMask": "string",
                            "destinationIpAddress": "string"
                          }
                        ],
                        "staticRoutes": [
                          {
                            "staticRouteSourceNetworkId": "string",
                            "staticRouteDestinationNetworkId": "string",
                            "subnetMask": "string",
                            "destinationIpAddress": "string"
                          }
                        ]
                      },
                      "destinationIpAddress": "string",
                      "static": true,
                      "createdDate": "2019-08-24T14:15:22Z",
                      "createdBy": "string",
                      "updatedDate": "2019-08-24T14:15:22Z",
                      "updatedBy": "string",
                      "link": {
                        "rel": "string",
                        "href": "string",
                        "title": "string",
                        "type": "string"
                      }
                    }
                  ],
                  "blockServiceOperationsMap": {},
                  "cachedParameterMap": {},
                  "cachedComponentTypeMap": {},
                  "networksMap": {},
                  "useDefaultCatalog": true
                },
                "deploymentDevice": {
                  "refId": "string",
                  "deviceType": "Server",
                  "serviceTag": "string",
                  "ipAddress": "string",
                  "statusMessage": "string",
                  "healthMessage": "string",
                  "brownfield": true,
                  "componentId": "string",
                  "brownfieldStatus": "NEWLY_AVAILABLE",
                  "deviceHealth": "green",
                  "compliantState": "NA",
                  "statusEndTime": "string",
                  "statusStartTime": "string",
                  "logDump": "string",
                  "status": "Pending",
                  "refType": "string",
                  "deviceGroupName": "string",
                  "currentIpAddress": "string",
                  "model": "string",
                  "cloudLink": true,
                  "dasCache": true,
                  "deviceState": "Ready",
                  "puppetCertName": "string"
                },
                "vms": [
                  {
                    "vmIpaddress": "string",
                    "vmManufacturer": "string",
                    "vmModel": "string",
                    "vmServiceTag": "string",
                    "certificateName": "string"
                  }
                ],
                "jobDetails": [
                  {
                    "level": "string",
                    "message": "string",
                    "timestamp": "string",
                    "executionId": "string",
                    "componentId": "string"
                  }
                ],
                "retry": true,
                "updateServerFirmware": true,
                "individualTeardown": true,
                "overallDeviceHealth": "green",
                "compliant": true,
                "createdBy": "string",
                "status": "Pending",
                "id": "string",
                "owner": "string",
                "DeploymentValid": {
                  "id": "string",
                  "messages": [
                    {
                      "timeStamp": "string",
                      "messageBundle": "string",
                      "severity": "string",
                      "sequenceNumber": 0,
                      "category": "string",
                      "displayMessage": "string",
                      "messageCode": "string",
                      "correlationId": "string",
                      "agentId": "string",
                      "responseAction": "string",
                      "detailedMessage": "string"
                    }
                  ]
                },
                "teardownAfterCancel": true,
                "removeService": true,
                "deploymentScheduledDate": "2019-08-24T14:15:22Z",
                "deploymentStartedDate": "2019-08-24T14:15:22Z",
                "deploymentFinishedDate": "2019-08-24T14:15:22Z",
                "useDefaultCatalog": true,
                "licenseRepository": {
                  "id": "string",
                  "name": "string",
                  "type": "CloudLink",
                  "diskLocation": "string",
                  "filename": "string",
                  "state": "string",
                  "createdDate": "2019-08-24T14:15:22Z",
                  "createdBy": "string",
                  "updatedDate": "2019-08-24T14:15:22Z",
                  "updatedBy": "string",
                  "templates": [
                    {
                      "createdDate": "2019-08-24T14:15:22Z",
                      "updatedBy": "string",
                      "updatedDate": "2019-08-24T14:15:22Z",
                      "firmwareRepository": {},
                      "draft": true,
                      "templateName": "string",
                      "templateDescription": "string",
                      "wizardPageNumber": 0,
                      "assignedUsers": [
                        {
                          "userName": "string",
                          "createdDate": "2019-08-24T14:15:22Z",
                          "updatedBy": "string",
                          "updatedDate": "2019-08-24T14:15:22Z",
                          "groupName": "string",
                          "email": "string",
                          "phoneNumber": "string",
                          "systemUser": true,
                          "userSeqId": 0,
                          "updatePassword": true,
                          "domainName": "string",
                          "groupDN": "string",
                          "firstName": "string",
                          "lastName": "string",
                          "enabled": "true",
                          "link": {
                            "rel": "string",
                            "href": "string",
                            "title": "string",
                            "type": "string"
                          },
                          "role": "string",
                          "createdBy": "string",
                          "password": "string",
                          "userPreference": "string"
                        }
                      ],
                      "allUsersAllowed": true,
                      "templateValid": {
                        "valid": true,
                        "messages": [
                          {
                            "timeStamp": "string",
                            "messageBundle": "string",
                            "severity": "string",
                            "sequenceNumber": 0,
                            "category": "string",
                            "displayMessage": "string",
                            "messageCode": "string",
                            "correlationId": "string",
                            "agentId": "string",
                            "responseAction": "string",
                            "detailedMessage": "string"
                          }
                        ]
                      },
                      "templateLocked": true,
                      "templateVersion": "string",
                      "lastDeployedDate": "2019-08-24T14:15:22Z",
                      "manageFirmware": true,
                      "components": {
                        "id": "string",
                        "componentID": "string",
                        "identifier": "string",
                        "componentValid": {
                          "valid": true,
                          "messages": [
                            {
                              "timeStamp": "string",
                              "messageBundle": "string",
                              "severity": "string",
                              "sequenceNumber": 0,
                              "category": "string",
                              "displayMessage": "string",
                              "messageCode": "string",
                              "correlationId": "string",
                              "agentId": "string",
                              "responseAction": "string",
                              "detailedMessage": "string"
                            }
                          ]
                        },
                        "name": "string",
                        "helpText": "string",
                        "clonedFromId": "string",
                        "teardown": true,
                        "type": "string",
                        "subType": "CLASS",
                        "relatedComponents": {},
                        "resources": [
                          {
                            "parameters": [
                              {
                                "min": 0,
                                "networks": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "description": "string",
                                    "type": "HYPERVISOR_MANAGEMENT",
                                    "vlanId": 0,
                                    "staticNetworkConfiguration": {
                                      "ipAddress": "string",
                                      "subnet": "string",
                                      "gateway": "string",
                                      "primaryDns": "string",
                                      "secondaryDns": "string",
                                      "dnsSuffix": "string",
                                      "ipRange": [
                                        {
                                          "startingIp": "string",
                                          "endingIp": "string",
                                          "id": "string",
                                          "role": "sdconly"
                                        }
                                      ],
                                      "staticRoute": [
                                        {
                                          "staticRouteSourceNetworkId": "string",
                                          "staticRouteDestinationNetworkId": "string",
                                          "subnetMask": "string",
                                          "destinationIpAddress": "string"
                                        }
                                      ],
                                      "staticRoutes": [
                                        {
                                          "staticRouteSourceNetworkId": "string",
                                          "staticRouteDestinationNetworkId": "string",
                                          "subnetMask": "string",
                                          "destinationIpAddress": "string"
                                        }
                                      ]
                                    },
                                    "destinationIpAddress": "string",
                                    "static": true,
                                    "createdDate": "2019-08-24T14:15:22Z",
                                    "createdBy": "string",
                                    "updatedDate": "2019-08-24T14:15:22Z",
                                    "updatedBy": "string",
                                    "link": {
                                      "rel": "string",
                                      "href": "string",
                                      "title": "string",
                                      "type": "string"
                                    }
                                  }
                                ],
                                "dependencyValue": "string",
                                "dependencyTarget": "string",
                                "optionsSortable": true,
                                "step": 0,
                                "requiredAtDeployment": true,
                                "hideFromTemplate": true,
                                "toolTip": "string",
                                "infoIcon": true,
                                "maxLength": 0,
                                "networkConfiguration": {
                                  "networks": [
                                    {
                                      "id": "string",
                                      "ipAddress": "string"
                                    }
                                  ],
                                  "definedInterfaces": [
                                    {
                                      "fqdd": "string",
                                      "maxPartitions": 0,
                                      "partitioned": true,
                                      "partitions": [
                                        {
                                          "id": "string",
                                          "name": "string",
                                          "networks": [
                                            "string"
                                          ],
                                          "networkObjects": [
                                            {
                                              "id": "string",
                                              "name": "string",
                                              "description": "string",
                                              "type": "HYPERVISOR_MANAGEMENT",
                                              "vlanId": 0,
                                              "staticNetworkConfiguration": {
                                                "ipAddress": "string",
                                                "subnet": "string",
                                                "gateway": "string",
                                                "primaryDns": "string",
                                                "secondaryDns": "string",
                                                "dnsSuffix": "string",
                                                "ipRange": [
                                                  {
                                                    "startingIp": "string",
                                                    "endingIp": "string",
                                                    "id": "string",
                                                    "role": "sdconly"
                                                  }
                                                ],
                                                "staticRoute": [
                                                  {
                                                    "staticRouteSourceNetworkId": "string",
                                                    "staticRouteDestinationNetworkId": "string",
                                                    "subnetMask": "string",
                                                    "destinationIpAddress": "string"
                                                  }
                                                ],
                                                "staticRoutes": [
                                                  {
                                                    "staticRouteSourceNetworkId": "string",
                                                    "staticRouteDestinationNetworkId": "string",
                                                    "subnetMask": "string",
                                                    "destinationIpAddress": "string"
                                                  }
                                                ]
                                              },
                                              "destinationIpAddress": "string",
                                              "static": true,
                                              "createdDate": "2019-08-24T14:15:22Z",
                                              "createdBy": "string",
                                              "updatedDate": "2019-08-24T14:15:22Z",
                                              "updatedBy": "string",
                                              "link": {
                                                "rel": "string",
                                                "href": "string",
                                                "title": "string",
                                                "type": "string"
                                              }
                                            }
                                          ],
                                          "networkIpAddressList": [
                                            {
                                              "id": "string",
                                              "ipAddress": "string"
                                            }
                                          ],
                                          "minimum": 0,
                                          "maximum": 0,
                                          "lanMacAddress": "string",
                                          "iscsiMacAddress": "string",
                                          "iscsiIQN": "string",
                                          "wwnn": "string",
                                          "wwpn": "string",
                                          "macAddress": "string",
                                          "portNo": 0,
                                          "partitionNo": 0,
                                          "partitionIndex": 0,
                                          "fqdd": "string",
                                          "mirroredPort": "string"
                                        }
                                      ],
                                      "nictype": "string",
                                      "redundancy": true,
                                      "enabled": true,
                                      "name": "string",
                                      "id": "string",
                                      "allNetworks": [
                                        "string"
                                      ]
                                    }
                                  ],
                                  "usedInterfaces": [
                                    {
                                      "fqdd": "string",
                                      "maxPartitions": 0,
                                      "partitioned": true,
                                      "partitions": [
                                        {
                                          "id": "string",
                                          "name": "string",
                                          "networks": [
                                            "string"
                                          ],
                                          "networkObjects": [
                                            {
                                              "id": "string",
                                              "name": "string",
                                              "description": "string",
                                              "type": "HYPERVISOR_MANAGEMENT",
                                              "vlanId": 0,
                                              "staticNetworkConfiguration": {
                                                "ipAddress": "string",
                                                "subnet": "string",
                                                "gateway": "string",
                                                "primaryDns": "string",
                                                "secondaryDns": "string",
                                                "dnsSuffix": "string",
                                                "ipRange": [
                                                  {
                                                    "startingIp": "string",
                                                    "endingIp": "string",
                                                    "id": "string",
                                                    "role": "sdconly"
                                                  }
                                                ],
                                                "staticRoute": [
                                                  {
                                                    "staticRouteSourceNetworkId": "string",
                                                    "staticRouteDestinationNetworkId": "string",
                                                    "subnetMask": "string",
                                                    "destinationIpAddress": "string"
                                                  }
                                                ],
                                                "staticRoutes": [
                                                  {
                                                    "staticRouteSourceNetworkId": "string",
                                                    "staticRouteDestinationNetworkId": "string",
                                                    "subnetMask": "string",
                                                    "destinationIpAddress": "string"
                                                  }
                                                ]
                                              },
                                              "destinationIpAddress": "string",
                                              "static": true,
                                              "createdDate": "2019-08-24T14:15:22Z",
                                              "createdBy": "string",
                                              "updatedDate": "2019-08-24T14:15:22Z",
                                              "updatedBy": "string",
                                              "link": {
                                                "rel": "string",
                                                "href": "string",
                                                "title": "string",
                                                "type": "string"
                                              }
                                            }
                                          ],
                                          "networkIpAddressList": [
                                            {
                                              "id": "string",
                                              "ipAddress": "string"
                                            }
                                          ],
                                          "minimum": 0,
                                          "maximum": 0,
                                          "lanMacAddress": "string",
                                          "iscsiMacAddress": "string",
                                          "iscsiIQN": "string",
                                          "wwnn": "string",
                                          "wwpn": "string",
                                          "macAddress": "string",
                                          "portNo": 0,
                                          "partitionNo": 0,
                                          "partitionIndex": 0,
                                          "fqdd": "string",
                                          "mirroredPort": "string"
                                        }
                                      ],
                                      "nictype": "string",
                                      "redundancy": true,
                                      "enabled": true,
                                      "name": "string",
                                      "id": "string",
                                      "allNetworks": [
                                        "string"
                                      ]
                                    }
                                  ],
                                  "allNetworkIds": [
                                    "string"
                                  ],
                                  "interfaces": [
                                    {
                                      "maxPartitions": 0,
                                      "partitioned": true,
                                      "nictype": "string",
                                      "redundancy": true,
                                      "fabrictype": "string",
                                      "nports": 0,
                                      "nictypeSource": "string",
                                      "enabled": true,
                                      "name": "string",
                                      "interfaces": [
                                        {
                                          "fqdd": "string",
                                          "maxPartitions": 0,
                                          "partitioned": true,
                                          "partitions": [
                                            {
                                              "id": "string",
                                              "name": "string",
                                              "networks": [
                                                "string"
                                              ],
                                              "networkObjects": [
                                                {
                                                  "id": "string",
                                                  "name": "string",
                                                  "description": "string",
                                                  "type": "HYPERVISOR_MANAGEMENT",
                                                  "vlanId": 0,
                                                  "staticNetworkConfiguration": {
                                                    "ipAddress": "string",
                                                    "subnet": "string",
                                                    "gateway": "string",
                                                    "primaryDns": "string",
                                                    "secondaryDns": "string",
                                                    "dnsSuffix": "string",
                                                    "ipRange": [
                                                      {
                                                        "startingIp": "string",
                                                        "endingIp": "string",
                                                        "id": "string",
                                                        "role": "sdconly"
                                                      }
                                                    ],
                                                    "staticRoute": [
                                                      {
                                                        "staticRouteSourceNetworkId": "string",
                                                        "staticRouteDestinationNetworkId": "string",
                                                        "subnetMask": "string",
                                                        "destinationIpAddress": "string"
                                                      }
                                                    ],
                                                    "staticRoutes": [
                                                      {
                                                        "staticRouteSourceNetworkId": "string",
                                                        "staticRouteDestinationNetworkId": "string",
                                                        "subnetMask": "string",
                                                        "destinationIpAddress": "string"
                                                      }
                                                    ]
                                                  },
                                                  "destinationIpAddress": "string",
                                                  "static": true,
                                                  "createdDate": "2019-08-24T14:15:22Z",
                                                  "createdBy": "string",
                                                  "updatedDate": "2019-08-24T14:15:22Z",
                                                  "updatedBy": "string",
                                                  "link": {
                                                    "rel": "string",
                                                    "href": "string",
                                                    "title": "string",
                                                    "type": "string"
                                                  }
                                                }
                                              ],
                                              "networkIpAddressList": [
                                                {
                                                  "id": "string",
                                                  "ipAddress": "string"
                                                }
                                              ],
                                              "minimum": 0,
                                              "maximum": 0,
                                              "lanMacAddress": "string",
                                              "iscsiMacAddress": "string",
                                              "iscsiIQN": "string",
                                              "wwnn": "string",
                                              "wwpn": "string",
                                              "macAddress": "string",
                                              "portNo": 0,
                                              "partitionNo": 0,
                                              "partitionIndex": 0,
                                              "fqdd": "string",
                                              "mirroredPort": "string"
                                            }
                                          ],
                                          "nictype": "string",
                                          "redundancy": true,
                                          "enabled": true,
                                          "name": "string",
                                          "id": "string",
                                          "allNetworks": [
                                            "string"
                                          ]
                                        }
                                      ],
                                      "id": "string",
                                      "card_index": 0
                                    }
                                  ],
                                  "id": "string"
                                },
                                "raidConfiguration": {
                                  "externalSsdHotSpares": [
                                    "string"
                                  ],
                                  "externalVirtualDisks": [
                                    {
                                      "raidLevel": "raid0",
                                      "physicalDisks": [
                                        "string"
                                      ],
                                      "mediaType": "SSD",
                                      "controller": "string",
                                      "configuration": {
                                        "raidlevel": "raid0",
                                        "disktype": "requiressd",
                                        "numberofdisks": 0,
                                        "comparator": "minimum",
                                        "id": "string",
                                        "virtualDiskFqdd": "string",
                                        "controllerFqdd": "string"
                                      },
                                      "virtualDiskFqdd": "string",
                                      "rollUpStatus": "string",
                                      "controllerProductName": "string",
                                      "encryptionType": "string"
                                    }
                                  ],
                                  "virtualDisks": [
                                    {
                                      "raidLevel": "raid0",
                                      "physicalDisks": [
                                        "string"
                                      ],
                                      "mediaType": "SSD",
                                      "controller": "string",
                                      "configuration": {
                                        "raidlevel": "raid0",
                                        "disktype": "requiressd",
                                        "numberofdisks": 0,
                                        "comparator": "minimum",
                                        "id": "string",
                                        "virtualDiskFqdd": "string",
                                        "controllerFqdd": "string"
                                      },
                                      "virtualDiskFqdd": "string",
                                      "rollUpStatus": "string",
                                      "controllerProductName": "string",
                                      "encryptionType": "string"
                                    }
                                  ],
                                  "externalHddHotSpares": [
                                    "string"
                                  ],
                                  "hddHotSpares": [
                                    "string"
                                  ],
                                  "ssdHotSpares": [
                                    "string"
                                  ],
                                  "sizeToDiskMap": {}
                                },
                                "max": 0,
                                "group": "string",
                                "options": [
                                  {
                                    "dependencyValue": "string",
                                    "dependencyTarget": "string",
                                    "name": "string",
                                    "value": "string",
                                    "dependencies": [
                                      {
                                        "dependencyTarget": "string",
                                        "dependencyValue": "string",
                                        "id": "string"
                                      }
                                    ],
                                    "attributes": {},
                                    "id": "string"
                                  }
                                ],
                                "generated": true,
                                "required": true,
                                "value": "string",
                                "id": "string",
                                "type": "BOOLEAN",
                                "readOnly": true,
                                "displayName": "string",
                                "dependencies": [
                                  {
                                    "dependencyTarget": "string",
                                    "dependencyValue": "string",
                                    "id": "string"
                                  }
                                ],
                                "networkIpAddressList": [
                                  {
                                    "id": "string",
                                    "ipAddress": "string"
                                  }
                                ],
                                "preservedForDeployment": true,
                                "scaleIODiskConfiguration": {
                                  "scaleIOStoragePoolDisks": [
                                    {
                                      "protectionDomainId": "string",
                                      "protectionDomainName": "string",
                                      "storagePoolId": "string",
                                      "storagePoolName": "string",
                                      "diskType": "SSD",
                                      "physicalDiskFqdds": [
                                        "string"
                                      ],
                                      "virtualDiskFqdds": [
                                        "string"
                                      ]
                                    }
                                  ]
                                },
                                "protectionDomainSettings": [
                                  {
                                    "general": {
                                      "id": "string",
                                      "name": "string",
                                      "systemId": "string",
                                      "protectionDomainState": "string",
                                      "rebuildNetworkThrottlingInKbps": 0,
                                      "rebalanceNetworkThrottlingInKbps": 0,
                                      "overallIoNetworkThrottlingInKbps": 0,
                                      "sdsDecoupledCounterParameters": {
                                        "shortWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        },
                                        "mediumWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        },
                                        "longWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        }
                                      },
                                      "sdsConfigurationFailureCounterParameters": {
                                        "shortWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        },
                                        "mediumWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        },
                                        "longWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        }
                                      },
                                      "mdmSdsCounterParameters": {
                                        "shortWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        },
                                        "mediumWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        },
                                        "longWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        }
                                      },
                                      "sdsSdsCounterParameters": {
                                        "shortWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        },
                                        "mediumWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        },
                                        "longWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        }
                                      },
                                      "rfcacheOpertionalMode": "string",
                                      "rfcachePageSizeKb": 0,
                                      "rfcacheMaxIoSizeKb": 0,
                                      "sdsReceiveBufferAllocationFailuresCounterParameters": {
                                        "shortWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        },
                                        "mediumWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        },
                                        "longWindow": {
                                          "threshold": 0,
                                          "windowSizeInSec": 0
                                        }
                                      },
                                      "rebuildNetworkThrottlingEnabled": true,
                                      "rebalanceNetworkThrottlingEnabled": true,
                                      "overallIoNetworkThrottlingEnabled": true,
                                      "rfcacheEnabled": true
                                    },
                                    "statistics": {
                                      "unusedCapacityInKb": 0,
                                      "numOfMappedToAllVolumes": 0,
                                      "capacityAvailableForVolumeAllocationInKb": 0,
                                      "capacityLimitInKb": 0,
                                      "numOfUnmappedVolumes": 0,
                                      "spareCapacityInKb": 0,
                                      "numOfSds": 0,
                                      "capacityInUseInKb": 0,
                                      "numOfStoragePools": 0,
                                      "numOfFaultSets": 0,
                                      "maxCapacityInKb": 0,
                                      "thinCapacityInUseInKb": 0,
                                      "thickCapacityInUseInKb": 0
                                    },
                                    "storage_pool_list": [
                                      {
                                        "id": "string",
                                        "name": "string",
                                        "rebuildIoPriorityPolicy": "string",
                                        "rebalanceIoPriorityPolicy": "string",
                                        "rebuildIoPriorityNumOfConcurrentIosPerDevice": 0,
                                        "rebalanceIoPriorityNumOfConcurrentIosPerDevice": 0,
                                        "rebuildIoPriorityBwLimitPerDeviceInKbps": 0,
                                        "rebalanceIoPriorityBwLimitPerDeviceInKbps": 0,
                                        "rebuildIoPriorityAppIopsPerDeviceThreshold": "string",
                                        "rebalanceIoPriorityAppIopsPerDeviceThreshold": "string",
                                        "rebuildIoPriorityAppBwPerDeviceThresholdInKbps": 0,
                                        "rebuildIoPriorityQuietPeriodInMsec": 0,
                                        "rebalanceIoPriorityQuietPeriodInMsec": 0,
                                        "zeroPaddingEnabled": true,
                                        "backgroundScannerMode": "string",
                                        "backgroundScannerBWLimitKBps": 0,
                                        "useRmcache": true,
                                        "protectionDomainId": "string",
                                        "useRfcache": true,
                                        "sparePercentage": 0,
                                        "rmcacheWriteHandlingMode": "string",
                                        "checksumEnabled": true,
                                        "rebuildEnabled": true,
                                        "rebalanceEnabled": true,
                                        "numOfParallelRebuildRebalanceJobsPerDevice": 0,
                                        "capacityAlertHighThreshold": 0,
                                        "capacityAlertCriticalThreshold": 0,
                                        "statistics": {
                                          "numOfDevices": 0,
                                          "unusedCapacityInKb": 0,
                                          "numOfVolumes": 0,
                                          "numOfMappedToAllVolumes": 0,
                                          "capacityAvailableForVolumeAllocationInKb": 0,
                                          "volumeAllocationLimitInKb": 0,
                                          "capacityLimitInKb": 0,
                                          "numOfUnmappedVolumes": 0,
                                          "spareCapacityInKb": 0,
                                          "capacityInUseInKb": 0,
                                          "maxCapacityInKb": 0
                                        },
                                        "dataLayout": "string",
                                        "replicationCapacityMaxRatio": "string",
                                        "mediaType": "HDD",
                                        "mediaTypeFromDiskType": "SSD",
                                        "disk_list": [
                                          {
                                            "id": "string",
                                            "name": "string",
                                            "errorState": "string",
                                            "sdsId": "string",
                                            "deviceState": "string",
                                            "capacityLimitInKb": 0,
                                            "maxCapacityInKb": 0,
                                            "storagePoolId": "string",
                                            "deviceCurrentPathName": "string",
                                            "deviceOriginalPathName": "string",
                                            "serialNumber": "string",
                                            "vendorName": "string",
                                            "modelName": "string"
                                          }
                                        ],
                                        "volume_list": [
                                          {
                                            "id": "string",
                                            "name": "string",
                                            "volumeType": "string",
                                            "storagePoolId": "string",
                                            "dataLayout": "string",
                                            "compressionMethod": "string",
                                            "sizeInKb": 0,
                                            "mappedSdcInfo": [
                                              {
                                                "sdcIp": "string",
                                                "sdcId": "string",
                                                "limitBwInMbps": 0,
                                                "limitIops": 0
                                              }
                                            ]
                                          }
                                        ],
                                        "fglAccpId": "string",
                                        "rebalanceIoPriorityAppBwPerDeviceThresholdInKbps": 0
                                      }
                                    ],
                                    "sds_list": [
                                      {
                                        "id": "string",
                                        "name": "string",
                                        "port": 0,
                                        "protectionDomainId": "string",
                                        "faultSetId": "string",
                                        "softwareVersionInfo": "string",
                                        "sdsState": "string",
                                        "membershipState": "string",
                                        "mdmConnectionState": "string",
                                        "drlMode": "string",
                                        "maintenanceState": "string",
                                        "perfProfile": "string",
                                        "onVmWare": true,
                                        "ipList": [
                                          {
                                            "ip": "string",
                                            "role": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "sdr_list": [
                                      {
                                        "id": "string",
                                        "name": "string",
                                        "port": 0,
                                        "protectionDomainId": "string",
                                        "softwareVersionInfo": "string",
                                        "sdrState": "string",
                                        "membershipState": "string",
                                        "mdmConnectionState": "string",
                                        "maintenanceState": "string",
                                        "perfProfile": "string",
                                        "ipList": [
                                          {
                                            "ip": "string",
                                            "role": "string"
                                          }
                                        ]
                                      }
                                    ],
                                    "acceleration_pool": [
                                      {
                                        "id": "string",
                                        "name": "string",
                                        "protectionDomainId": "string",
                                        "mediaType": "string",
                                        "rfcache": true
                                      }
                                    ]
                                  }
                                ],
                                "faultSetSettings": [
                                  {
                                    "protectionDomainId": "string",
                                    "name": "string",
                                    "id": "string"
                                  }
                                ],
                                "attributes": {},
                                "vdsConfiguration": {
                                  "datacenter": {
                                    "vcenterId": "string",
                                    "datacenterId": "string",
                                    "datacenterName": "string"
                                  },
                                  "portGroupOption": "string",
                                  "portGroupCreationOption": "string",
                                  "vdsSettings": [
                                    {
                                      "id": "string",
                                      "displayName": "string",
                                      "name": "string",
                                      "value": "string",
                                      "portGroups": [
                                        {
                                          "id": "string",
                                          "displayName": "string",
                                          "vlan": 0,
                                          "name": "string",
                                          "value": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "vdsNetworkMtuSizeConfiguration": [
                                    {
                                      "id": "string",
                                      "value": "string"
                                    }
                                  ],
                                  "vdsNetworkMTUSizeConfiguration": [
                                    {
                                      "id": "string",
                                      "value": "string"
                                    }
                                  ]
                                }
                              }
                            ],
                            "id": "string",
                            "displayName": "string",
                            "parametersMap": {}
                          }
                        ],
                        "brownfield": true,
                        "puppetCertName": "string",
                        "managementIpAddress": "string",
                        "serialNumber": "string",
                        "asmGUID": "string",
                        "cloned": true,
                        "configFile": "string",
                        "manageFirmware": true,
                        "instances": 0,
                        "refId": "string",
                        "ip": "string",
                        "osPuppetCertName": "string",
                        "clonedFromAsmGuid": "string"
                      },
                      "category": "string",
                      "createdBy": "string",
                      "attachments": [
                        "string"
                      ],
                      "id": "string",
                      "licenseRepository": {},
                      "templateType": "string",
                      "originalTemplateId": "string",
                      "inConfiguration": true,
                      "configuration": {
                        "id": "string",
                        "categories": [
                          {
                            "id": "string",
                            "displayName": "string",
                            "deviceType": "string",
                            "parameters": [
                              {
                                "id": "string",
                                "value": "string",
                                "displayName": "string",
                                "type": "string",
                                "toolTip": "string",
                                "required": true,
                                "hideFromTemplate": true,
                                "deviceType": "string",
                                "dependencies": [
                                  {
                                    "dependencyTarget": "string",
                                    "dependencyValue": "string"
                                  }
                                ],
                                "group": "string",
                                "readOnly": true,
                                "generated": true,
                                "infoIcon": true,
                                "step": 0,
                                "maxLength": 0,
                                "min": 0,
                                "max": 0,
                                "networks": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "description": "string",
                                    "type": "HYPERVISOR_MANAGEMENT",
                                    "vlanId": 0,
                                    "staticNetworkConfiguration": {
                                      "ipAddress": "string",
                                      "subnet": "string",
                                      "gateway": "string",
                                      "primaryDns": "string",
                                      "secondaryDns": "string",
                                      "dnsSuffix": "string",
                                      "ipRange": [
                                        {
                                          "startingIp": "string",
                                          "endingIp": "string",
                                          "id": "string",
                                          "role": "sdconly"
                                        }
                                      ],
                                      "staticRoute": [
                                        {
                                          "staticRouteSourceNetworkId": "string",
                                          "staticRouteDestinationNetworkId": "string",
                                          "subnetMask": "string",
                                          "destinationIpAddress": "string"
                                        }
                                      ],
                                      "staticRoutes": [
                                        {
                                          "staticRouteSourceNetworkId": "string",
                                          "staticRouteDestinationNetworkId": "string",
                                          "subnetMask": "string",
                                          "destinationIpAddress": "string"
                                        }
                                      ]
                                    },
                                    "destinationIpAddress": "string",
                                    "static": true,
                                    "createdDate": "2019-08-24T14:15:22Z",
                                    "createdBy": "string",
                                    "updatedDate": "2019-08-24T14:15:22Z",
                                    "updatedBy": "string",
                                    "link": {
                                      "rel": "string",
                                      "href": "string",
                                      "title": "string",
                                      "type": "string"
                                    }
                                  }
                                ],
                                "options": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "dependencies": [
                                      {
                                        "dependencyTarget": "string",
                                        "dependencyValue": "string"
                                      }
                                    ],
                                    "attributes": {}
                                  }
                                ],
                                "optionsSortable": true
                              }
                            ],
                            "parameterMap": {}
                          }
                        ],
                        "settingsMap": {},
                        "categoriesMap": {}
                      },
                      "serverCount": 0,
                      "storageCount": 0,
                      "clusterCount": 0,
                      "serviceCount": 0,
                      "switchCount": 0,
                      "vmCount": 0,
                      "brownfieldTemplateType": "Ready",
                      "networks": [
                        {
                          "id": "string",
                          "name": "string",
                          "description": "string",
                          "type": "HYPERVISOR_MANAGEMENT",
                          "vlanId": 0,
                          "staticNetworkConfiguration": {
                            "ipAddress": "string",
                            "subnet": "string",
                            "gateway": "string",
                            "primaryDns": "string",
                            "secondaryDns": "string",
                            "dnsSuffix": "string",
                            "ipRange": [
                              {
                                "startingIp": "string",
                                "endingIp": "string",
                                "id": "string",
                                "role": "sdconly"
                              }
                            ],
                            "staticRoute": [
                              {
                                "staticRouteSourceNetworkId": "string",
                                "staticRouteDestinationNetworkId": "string",
                                "subnetMask": "string",
                                "destinationIpAddress": "string"
                              }
                            ],
                            "staticRoutes": [
                              {
                                "staticRouteSourceNetworkId": "string",
                                "staticRouteDestinationNetworkId": "string",
                                "subnetMask": "string",
                                "destinationIpAddress": "string"
                              }
                            ]
                          },
                          "destinationIpAddress": "string",
                          "static": true,
                          "createdDate": "2019-08-24T14:15:22Z",
                          "createdBy": "string",
                          "updatedDate": "2019-08-24T14:15:22Z",
                          "updatedBy": "string",
                          "link": {
                            "rel": "string",
                            "href": "string",
                            "title": "string",
                            "type": "string"
                          }
                        }
                      ],
                      "blockServiceOperationsMap": {},
                      "cachedParameterMap": {},
                      "cachedComponentTypeMap": {},
                      "networksMap": {},
                      "useDefaultCatalog": true
                    }
                  ]
                },
                "licenseRepositoryId": "string",
                "noOp": true,
                "firmwareInit": true,
                "disruptiveFirmware": true,
                "preconfigureSVM": true,
                "preconfigureSVMAndUpdate": true,
                "servicesDeployed": "Unknown",
                "precalculatedDeviceHealth": "green",
                "lifecycleModeReasons": [
                  "Service is in Lifecycle mode from previous release for an unknown reason"
                ],
                "canMigratevCLSVMs": true,
                "lifecycleMode": true,
                "scaleUp": true,
                "configurationChange": true,
                "allDeploymentDevicesBrownfieldStatus": "NEWLY_AVAILABLE",
                "operationType": "NONE",
                "operationStatus": "Starting",
                "operationData": "string",
                "deploymentValidationResponse": {
                  "nodes": 0,
                  "storagePools": 0,
                  "drivesPerStoragePool": 0,
                  "maxScalability": 0,
                  "virtualMachines": 0,
                  "numberOfServiceVolumes": 0,
                  "canDeploy": true,
                  "warningMessage": "string",
                  "storagePoolDiskType": [
                    "string"
                  ],
                  "hostnames": [
                    "string"
                  ],
                  "newNodeDiskTypes": [
                    "string"
                  ],
                  "noOfFaultSets": 0,
                  "nodesPerFaultSet": 0,
                  "protectionDomain": "string",
                  "diskTypeMismatch": true
                },
                "currentStepCount": "string",
                "totalNumOfSteps": "string",
                "currentStepMessage": "string",
                "customImage": "string",
                "originalDeploymentId": "string"
              }
            ],
            "username": "string",
            "createdBy": "string",
            "filename": "string",
            "password": "string",
            "embedded": true,
            "name": "string",
            "id": "string",
            "state": "copying",
            "userBundleCount": 0,
            "minimal": true,
            "downloadProgress": 0,
            "extractProgress": 0,
            "fileSizeInGigabytes": 0
          },
          "assignedUsers": [
            {
              "userName": "string",
              "createdDate": "2019-08-24T14:15:22Z",
              "updatedBy": "string",
              "updatedDate": "2019-08-24T14:15:22Z",
              "groupName": "string",
              "email": "string",
              "phoneNumber": "string",
              "systemUser": true,
              "userSeqId": 0,
              "updatePassword": true,
              "domainName": "string",
              "groupDN": "string",
              "firstName": "string",
              "lastName": "string",
              "enabled": "true",
              "link": {
                "rel": "string",
                "href": "string",
                "title": "string",
                "type": "string"
              },
              "role": "string",
              "createdBy": "string",
              "password": "string",
              "userPreference": "string"
            }
          ],
          "allUsersAllowed": true,
          "teardown": true,
          "templateValid": true,
          "brownfield": true,
          "vds": true,
          "deploymentHealthStatusType": "green",
          "canMigrate": true,
          "scheduleDate": "string",
          "numberOfDeployments": 0,
          "firmwareRepositoryId": "string",
          "deploymentName": "string",
          "deploymentDescription": "string",
          "serviceTemplate": {
            "createdDate": "2019-08-24T14:15:22Z",
            "updatedBy": "string",
            "updatedDate": "2019-08-24T14:15:22Z",
            "firmwareRepository": {
              "createdDate": "2019-08-24T14:15:22Z",
              "updatedBy": "string",
              "updatedDate": "2019-08-24T14:15:22Z",
              "softwareComponents": [
                {
                  "createdDate": "2019-08-24T14:15:22Z",
                  "updatedBy": "string",
                  "updatedDate": "2019-08-24T14:15:22Z",
                  "deviceId": "string",
                  "componentId": "string",
                  "packageId": "string",
                  "dellVersion": "string",
                  "vendorVersion": "string",
                  "subDeviceId": "string",
                  "vendorId": "string",
                  "subVendorId": "string",
                  "hashMd5": "string",
                  "systemIDs": [
                    "string"
                  ],
                  "category": "string",
                  "createdBy": "string",
                  "componentType": "string",
                  "name": "string",
                  "id": "string",
                  "path": "string",
                  "operatingSystem": "string"
                }
              ],
              "sourceLocation": "string",
              "sourceType": "string",
              "diskLocation": "string",
              "md5Hash": "string",
              "downloadStatus": "pending",
              "softwareBundles": [
                {
                  "deviceType": "string",
                  "createdDate": "2019-08-24T14:15:22Z",
                  "updatedBy": "string",
                  "updatedDate": "2019-08-24T14:15:22Z",
                  "softwareComponents": [
                    {
                      "createdDate": "2019-08-24T14:15:22Z",
                      "updatedBy": "string",
                      "updatedDate": "2019-08-24T14:15:22Z",
                      "deviceId": "string",
                      "componentId": "string",
                      "packageId": "string",
                      "dellVersion": "string",
                      "vendorVersion": "string",
                      "subDeviceId": "string",
                      "vendorId": "string",
                      "subVendorId": "string",
                      "hashMd5": "string",
                      "systemIDs": [
                        "string"
                      ],
                      "category": "string",
                      "createdBy": "string",
                      "componentType": "string",
                      "name": "string",
                      "id": "string",
                      "path": "string",
                      "operatingSystem": "string"
                    }
                  ],
                  "userBundlePath": "string",
                  "userBundle": true,
                  "userBundleHashMd5": "string",
                  "deviceModel": "string",
                  "criticality": "string",
                  "fwRepositoryId": "string",
                  "bundleDate": "2019-08-24T14:15:22Z",
                  "version": "string",
                  "description": "string",
                  "link": {
                    "rel": "string",
                    "href": "string",
                    "title": "string",
                    "type": "string"
                  },
                  "createdBy": "string",
                  "name": "string",
                  "id": "string",
                  "bundleType": "SOFTWARE"
                }
              ],
              "bundleCount": 0,
              "defaultCatalog": true,
              "componentCount": 0,
              "deployments": [
                {
                  "createdDate": "2019-08-24T14:15:22Z",
                  "updatedBy": "string",
                  "updatedDate": "2019-08-24T14:15:22Z",
                  "firmwareRepository": {},
                  "assignedUsers": [
                    {
                      "userName": "string",
                      "createdDate": "2019-08-24T14:15:22Z",
                      "updatedBy": "string",
                      "updatedDate": "2019-08-24T14:15:22Z",
                      "groupName": "string",
                      "email": "string",
                      "phoneNumber": "string",
                      "systemUser": true,
                      "userSeqId": 0,
                      "updatePassword": true,
                      "domainName": "string",
                      "groupDN": "string",
                      "firstName": "string",
                      "lastName": "string",
                      "enabled": "true",
                      "link": {
                        "rel": "string",
                        "href": "string",
                        "title": "string",
                        "type": "string"
                      },
                      "role": "string",
                      "createdBy": "string",
                      "password": "string",
                      "userPreference": "string"
                    }
                  ],
                  "allUsersAllowed": true,
                  "teardown": true,
                  "templateValid": true,
                  "brownfield": true,
                  "vds": true,
                  "deploymentHealthStatusType": "green",
                  "canMigrate": true,
                  "scheduleDate": "string",
                  "numberOfDeployments": 0,
                  "firmwareRepositoryId": "string",
                  "deploymentName": "string",
                  "deploymentDescription": "string",
                  "serviceTemplate": {},
                  "deploymentDevice": {
                    "refId": "string",
                    "deviceType": "Server",
                    "serviceTag": "string",
                    "ipAddress": "string",
                    "statusMessage": "string",
                    "healthMessage": "string",
                    "brownfield": true,
                    "componentId": "string",
                    "brownfieldStatus": "NEWLY_AVAILABLE",
                    "deviceHealth": "green",
                    "compliantState": "NA",
                    "statusEndTime": "string",
                    "statusStartTime": "string",
                    "logDump": "string",
                    "status": "Pending",
                    "refType": "string",
                    "deviceGroupName": "string",
                    "currentIpAddress": "string",
                    "model": "string",
                    "cloudLink": true,
                    "dasCache": true,
                    "deviceState": "Ready",
                    "puppetCertName": "string"
                  },
                  "vms": [
                    {
                      "vmIpaddress": "string",
                      "vmManufacturer": "string",
                      "vmModel": "string",
                      "vmServiceTag": "string",
                      "certificateName": "string"
                    }
                  ],
                  "jobDetails": [
                    {
                      "level": "string",
                      "message": "string",
                      "timestamp": "string",
                      "executionId": "string",
                      "componentId": "string"
                    }
                  ],
                  "retry": true,
                  "updateServerFirmware": true,
                  "individualTeardown": true,
                  "overallDeviceHealth": "green",
                  "compliant": true,
                  "createdBy": "string",
                  "status": "Pending",
                  "id": "string",
                  "owner": "string",
                  "DeploymentValid": {
                    "id": "string",
                    "messages": [
                      {
                        "timeStamp": "string",
                        "messageBundle": "string",
                        "severity": "string",
                        "sequenceNumber": 0,
                        "category": "string",
                        "displayMessage": "string",
                        "messageCode": "string",
                        "correlationId": "string",
                        "agentId": "string",
                        "responseAction": "string",
                        "detailedMessage": "string"
                      }
                    ]
                  },
                  "teardownAfterCancel": true,
                  "removeService": true,
                  "deploymentScheduledDate": "2019-08-24T14:15:22Z",
                  "deploymentStartedDate": "2019-08-24T14:15:22Z",
                  "deploymentFinishedDate": "2019-08-24T14:15:22Z",
                  "useDefaultCatalog": true,
                  "licenseRepository": {
                    "id": "string",
                    "name": "string",
                    "type": "CloudLink",
                    "diskLocation": "string",
                    "filename": "string",
                    "state": "string",
                    "createdDate": "2019-08-24T14:15:22Z",
                    "createdBy": "string",
                    "updatedDate": "2019-08-24T14:15:22Z",
                    "updatedBy": "string",
                    "templates": [
                      {}
                    ]
                  },
                  "licenseRepositoryId": "string",
                  "noOp": true,
                  "firmwareInit": true,
                  "disruptiveFirmware": true,
                  "preconfigureSVM": true,
                  "preconfigureSVMAndUpdate": true,
                  "servicesDeployed": "Unknown",
                  "precalculatedDeviceHealth": "green",
                  "lifecycleModeReasons": [
                    "Service is in Lifecycle mode from previous release for an unknown reason"
                  ],
                  "canMigratevCLSVMs": true,
                  "lifecycleMode": true,
                  "scaleUp": true,
                  "configurationChange": true,
                  "allDeploymentDevicesBrownfieldStatus": "NEWLY_AVAILABLE",
                  "operationType": "NONE",
                  "operationStatus": "Starting",
                  "operationData": "string",
                  "deploymentValidationResponse": {
                    "nodes": 0,
                    "storagePools": 0,
                    "drivesPerStoragePool": 0,
                    "maxScalability": 0,
                    "virtualMachines": 0,
                    "numberOfServiceVolumes": 0,
                    "canDeploy": true,
                    "warningMessage": "string",
                    "storagePoolDiskType": [
                      "string"
                    ],
                    "hostnames": [
                      "string"
                    ],
                    "newNodeDiskTypes": [
                      "string"
                    ],
                    "noOfFaultSets": 0,
                    "nodesPerFaultSet": 0,
                    "protectionDomain": "string",
                    "diskTypeMismatch": true
                  },
                  "currentStepCount": "string",
                  "totalNumOfSteps": "string",
                  "currentStepMessage": "string",
                  "customImage": "string",
                  "originalDeploymentId": "string"
                }
              ],
              "username": "string",
              "createdBy": "string",
              "filename": "string",
              "password": "string",
              "embedded": true,
              "name": "string",
              "id": "string",
              "state": "copying",
              "userBundleCount": 0,
              "minimal": true,
              "downloadProgress": 0,
              "extractProgress": 0,
              "fileSizeInGigabytes": 0
            },
            "draft": true,
            "templateName": "string",
            "templateDescription": "string",
            "wizardPageNumber": 0,
            "assignedUsers": [
              {
                "userName": "string",
                "createdDate": "2019-08-24T14:15:22Z",
                "updatedBy": "string",
                "updatedDate": "2019-08-24T14:15:22Z",
                "groupName": "string",
                "email": "string",
                "phoneNumber": "string",
                "systemUser": true,
                "userSeqId": 0,
                "updatePassword": true,
                "domainName": "string",
                "groupDN": "string",
                "firstName": "string",
                "lastName": "string",
                "enabled": "true",
                "link": {
                  "rel": "string",
                  "href": "string",
                  "title": "string",
                  "type": "string"
                },
                "role": "string",
                "createdBy": "string",
                "password": "string",
                "userPreference": "string"
              }
            ],
            "allUsersAllowed": true,
            "templateValid": {
              "valid": true,
              "messages": [
                {
                  "timeStamp": "string",
                  "messageBundle": "string",
                  "severity": "string",
                  "sequenceNumber": 0,
                  "category": "string",
                  "displayMessage": "string",
                  "messageCode": "string",
                  "correlationId": "string",
                  "agentId": "string",
                  "responseAction": "string",
                  "detailedMessage": "string"
                }
              ]
            },
            "templateLocked": true,
            "templateVersion": "string",
            "lastDeployedDate": "2019-08-24T14:15:22Z",
            "manageFirmware": true,
            "components": {
              "id": "string",
              "componentID": "string",
              "identifier": "string",
              "componentValid": {
                "valid": true,
                "messages": [
                  {
                    "timeStamp": "string",
                    "messageBundle": "string",
                    "severity": "string",
                    "sequenceNumber": 0,
                    "category": "string",
                    "displayMessage": "string",
                    "messageCode": "string",
                    "correlationId": "string",
                    "agentId": "string",
                    "responseAction": "string",
                    "detailedMessage": "string"
                  }
                ]
              },
              "name": "string",
              "helpText": "string",
              "clonedFromId": "string",
              "teardown": true,
              "type": "string",
              "subType": "CLASS",
              "relatedComponents": {},
              "resources": [
                {
                  "parameters": [
                    {
                      "min": 0,
                      "networks": [
                        {
                          "id": "string",
                          "name": "string",
                          "description": "string",
                          "type": "HYPERVISOR_MANAGEMENT",
                          "vlanId": 0,
                          "staticNetworkConfiguration": {
                            "ipAddress": "string",
                            "subnet": "string",
                            "gateway": "string",
                            "primaryDns": "string",
                            "secondaryDns": "string",
                            "dnsSuffix": "string",
                            "ipRange": [
                              {
                                "startingIp": "string",
                                "endingIp": "string",
                                "id": "string",
                                "role": "sdconly"
                              }
                            ],
                            "staticRoute": [
                              {
                                "staticRouteSourceNetworkId": "string",
                                "staticRouteDestinationNetworkId": "string",
                                "subnetMask": "string",
                                "destinationIpAddress": "string"
                              }
                            ],
                            "staticRoutes": [
                              {
                                "staticRouteSourceNetworkId": "string",
                                "staticRouteDestinationNetworkId": "string",
                                "subnetMask": "string",
                                "destinationIpAddress": "string"
                              }
                            ]
                          },
                          "destinationIpAddress": "string",
                          "static": true,
                          "createdDate": "2019-08-24T14:15:22Z",
                          "createdBy": "string",
                          "updatedDate": "2019-08-24T14:15:22Z",
                          "updatedBy": "string",
                          "link": {
                            "rel": "string",
                            "href": "string",
                            "title": "string",
                            "type": "string"
                          }
                        }
                      ],
                      "dependencyValue": "string",
                      "dependencyTarget": "string",
                      "optionsSortable": true,
                      "step": 0,
                      "requiredAtDeployment": true,
                      "hideFromTemplate": true,
                      "toolTip": "string",
                      "infoIcon": true,
                      "maxLength": 0,
                      "networkConfiguration": {
                        "networks": [
                          {
                            "id": "string",
                            "ipAddress": "string"
                          }
                        ],
                        "definedInterfaces": [
                          {
                            "fqdd": "string",
                            "maxPartitions": 0,
                            "partitioned": true,
                            "partitions": [
                              {
                                "id": "string",
                                "name": "string",
                                "networks": [
                                  "string"
                                ],
                                "networkObjects": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "description": "string",
                                    "type": "HYPERVISOR_MANAGEMENT",
                                    "vlanId": 0,
                                    "staticNetworkConfiguration": {
                                      "ipAddress": "string",
                                      "subnet": "string",
                                      "gateway": "string",
                                      "primaryDns": "string",
                                      "secondaryDns": "string",
                                      "dnsSuffix": "string",
                                      "ipRange": [
                                        {
                                          "startingIp": "string",
                                          "endingIp": "string",
                                          "id": "string",
                                          "role": "sdconly"
                                        }
                                      ],
                                      "staticRoute": [
                                        {
                                          "staticRouteSourceNetworkId": "string",
                                          "staticRouteDestinationNetworkId": "string",
                                          "subnetMask": "string",
                                          "destinationIpAddress": "string"
                                        }
                                      ],
                                      "staticRoutes": [
                                        {
                                          "staticRouteSourceNetworkId": "string",
                                          "staticRouteDestinationNetworkId": "string",
                                          "subnetMask": "string",
                                          "destinationIpAddress": "string"
                                        }
                                      ]
                                    },
                                    "destinationIpAddress": "string",
                                    "static": true,
                                    "createdDate": "2019-08-24T14:15:22Z",
                                    "createdBy": "string",
                                    "updatedDate": "2019-08-24T14:15:22Z",
                                    "updatedBy": "string",
                                    "link": {
                                      "rel": "string",
                                      "href": "string",
                                      "title": "string",
                                      "type": "string"
                                    }
                                  }
                                ],
                                "networkIpAddressList": [
                                  {
                                    "id": "string",
                                    "ipAddress": "string"
                                  }
                                ],
                                "minimum": 0,
                                "maximum": 0,
                                "lanMacAddress": "string",
                                "iscsiMacAddress": "string",
                                "iscsiIQN": "string",
                                "wwnn": "string",
                                "wwpn": "string",
                                "macAddress": "string",
                                "portNo": 0,
                                "partitionNo": 0,
                                "partitionIndex": 0,
                                "fqdd": "string",
                                "mirroredPort": "string"
                              }
                            ],
                            "nictype": "string",
                            "redundancy": true,
                            "enabled": true,
                            "name": "string",
                            "id": "string",
                            "allNetworks": [
                              "string"
                            ]
                          }
                        ],
                        "usedInterfaces": [
                          {
                            "fqdd": "string",
                            "maxPartitions": 0,
                            "partitioned": true,
                            "partitions": [
                              {
                                "id": "string",
                                "name": "string",
                                "networks": [
                                  "string"
                                ],
                                "networkObjects": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "description": "string",
                                    "type": "HYPERVISOR_MANAGEMENT",
                                    "vlanId": 0,
                                    "staticNetworkConfiguration": {
                                      "ipAddress": "string",
                                      "subnet": "string",
                                      "gateway": "string",
                                      "primaryDns": "string",
                                      "secondaryDns": "string",
                                      "dnsSuffix": "string",
                                      "ipRange": [
                                        {
                                          "startingIp": "string",
                                          "endingIp": "string",
                                          "id": "string",
                                          "role": "sdconly"
                                        }
                                      ],
                                      "staticRoute": [
                                        {
                                          "staticRouteSourceNetworkId": "string",
                                          "staticRouteDestinationNetworkId": "string",
                                          "subnetMask": "string",
                                          "destinationIpAddress": "string"
                                        }
                                      ],
                                      "staticRoutes": [
                                        {
                                          "staticRouteSourceNetworkId": "string",
                                          "staticRouteDestinationNetworkId": "string",
                                          "subnetMask": "string",
                                          "destinationIpAddress": "string"
                                        }
                                      ]
                                    },
                                    "destinationIpAddress": "string",
                                    "static": true,
                                    "createdDate": "2019-08-24T14:15:22Z",
                                    "createdBy": "string",
                                    "updatedDate": "2019-08-24T14:15:22Z",
                                    "updatedBy": "string",
                                    "link": {
                                      "rel": "string",
                                      "href": "string",
                                      "title": "string",
                                      "type": "string"
                                    }
                                  }
                                ],
                                "networkIpAddressList": [
                                  {
                                    "id": "string",
                                    "ipAddress": "string"
                                  }
                                ],
                                "minimum": 0,
                                "maximum": 0,
                                "lanMacAddress": "string",
                                "iscsiMacAddress": "string",
                                "iscsiIQN": "string",
                                "wwnn": "string",
                                "wwpn": "string",
                                "macAddress": "string",
                                "portNo": 0,
                                "partitionNo": 0,
                                "partitionIndex": 0,
                                "fqdd": "string",
                                "mirroredPort": "string"
                              }
                            ],
                            "nictype": "string",
                            "redundancy": true,
                            "enabled": true,
                            "name": "string",
                            "id": "string",
                            "allNetworks": [
                              "string"
                            ]
                          }
                        ],
                        "allNetworkIds": [
                          "string"
                        ],
                        "interfaces": [
                          {
                            "maxPartitions": 0,
                            "partitioned": true,
                            "nictype": "string",
                            "redundancy": true,
                            "fabrictype": "string",
                            "nports": 0,
                            "nictypeSource": "string",
                            "enabled": true,
                            "name": "string",
                            "interfaces": [
                              {
                                "fqdd": "string",
                                "maxPartitions": 0,
                                "partitioned": true,
                                "partitions": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "networks": [
                                      "string"
                                    ],
                                    "networkObjects": [
                                      {
                                        "id": "string",
                                        "name": "string",
                                        "description": "string",
                                        "type": "HYPERVISOR_MANAGEMENT",
                                        "vlanId": 0,
                                        "staticNetworkConfiguration": {
                                          "ipAddress": "string",
                                          "subnet": "string",
                                          "gateway": "string",
                                          "primaryDns": "string",
                                          "secondaryDns": "string",
                                          "dnsSuffix": "string",
                                          "ipRange": [
                                            {
                                              "startingIp": "string",
                                              "endingIp": "string",
                                              "id": "string",
                                              "role": "sdconly"
                                            }
                                          ],
                                          "staticRoute": [
                                            {
                                              "staticRouteSourceNetworkId": "string",
                                              "staticRouteDestinationNetworkId": "string",
                                              "subnetMask": "string",
                                              "destinationIpAddress": "string"
                                            }
                                          ],
                                          "staticRoutes": [
                                            {
                                              "staticRouteSourceNetworkId": "string",
                                              "staticRouteDestinationNetworkId": "string",
                                              "subnetMask": "string",
                                              "destinationIpAddress": "string"
                                            }
                                          ]
                                        },
                                        "destinationIpAddress": "string",
                                        "static": true,
                                        "createdDate": "2019-08-24T14:15:22Z",
                                        "createdBy": "string",
                                        "updatedDate": "2019-08-24T14:15:22Z",
                                        "updatedBy": "string",
                                        "link": {
                                          "rel": "string",
                                          "href": "string",
                                          "title": "string",
                                          "type": "string"
                                        }
                                      }
                                    ],
                                    "networkIpAddressList": [
                                      {
                                        "id": "string",
                                        "ipAddress": "string"
                                      }
                                    ],
                                    "minimum": 0,
                                    "maximum": 0,
                                    "lanMacAddress": "string",
                                    "iscsiMacAddress": "string",
                                    "iscsiIQN": "string",
                                    "wwnn": "string",
                                    "wwpn": "string",
                                    "macAddress": "string",
                                    "portNo": 0,
                                    "partitionNo": 0,
                                    "partitionIndex": 0,
                                    "fqdd": "string",
                                    "mirroredPort": "string"
                                  }
                                ],
                                "nictype": "string",
                                "redundancy": true,
                                "enabled": true,
                                "name": "string",
                                "id": "string",
                                "allNetworks": [
                                  "string"
                                ]
                              }
                            ],
                            "id": "string",
                            "card_index": 0
                          }
                        ],
                        "id": "string"
                      },
                      "raidConfiguration": {
                        "externalSsdHotSpares": [
                          "string"
                        ],
                        "externalVirtualDisks": [
                          {
                            "raidLevel": "raid0",
                            "physicalDisks": [
                              "string"
                            ],
                            "mediaType": "SSD",
                            "controller": "string",
                            "configuration": {
                              "raidlevel": "raid0",
                              "disktype": "requiressd",
                              "numberofdisks": 0,
                              "comparator": "minimum",
                              "id": "string",
                              "virtualDiskFqdd": "string",
                              "controllerFqdd": "string"
                            },
                            "virtualDiskFqdd": "string",
                            "rollUpStatus": "string",
                            "controllerProductName": "string",
                            "encryptionType": "string"
                          }
                        ],
                        "virtualDisks": [
                          {
                            "raidLevel": "raid0",
                            "physicalDisks": [
                              "string"
                            ],
                            "mediaType": "SSD",
                            "controller": "string",
                            "configuration": {
                              "raidlevel": "raid0",
                              "disktype": "requiressd",
                              "numberofdisks": 0,
                              "comparator": "minimum",
                              "id": "string",
                              "virtualDiskFqdd": "string",
                              "controllerFqdd": "string"
                            },
                            "virtualDiskFqdd": "string",
                            "rollUpStatus": "string",
                            "controllerProductName": "string",
                            "encryptionType": "string"
                          }
                        ],
                        "externalHddHotSpares": [
                          "string"
                        ],
                        "hddHotSpares": [
                          "string"
                        ],
                        "ssdHotSpares": [
                          "string"
                        ],
                        "sizeToDiskMap": {}
                      },
                      "max": 0,
                      "group": "string",
                      "options": [
                        {
                          "dependencyValue": "string",
                          "dependencyTarget": "string",
                          "name": "string",
                          "value": "string",
                          "dependencies": [
                            {
                              "dependencyTarget": "string",
                              "dependencyValue": "string",
                              "id": "string"
                            }
                          ],
                          "attributes": {},
                          "id": "string"
                        }
                      ],
                      "generated": true,
                      "required": true,
                      "value": "string",
                      "id": "string",
                      "type": "BOOLEAN",
                      "readOnly": true,
                      "displayName": "string",
                      "dependencies": [
                        {
                          "dependencyTarget": "string",
                          "dependencyValue": "string",
                          "id": "string"
                        }
                      ],
                      "networkIpAddressList": [
                        {
                          "id": "string",
                          "ipAddress": "string"
                        }
                      ],
                      "preservedForDeployment": true,
                      "scaleIODiskConfiguration": {
                        "scaleIOStoragePoolDisks": [
                          {
                            "protectionDomainId": "string",
                            "protectionDomainName": "string",
                            "storagePoolId": "string",
                            "storagePoolName": "string",
                            "diskType": "SSD",
                            "physicalDiskFqdds": [
                              "string"
                            ],
                            "virtualDiskFqdds": [
                              "string"
                            ]
                          }
                        ]
                      },
                      "protectionDomainSettings": [
                        {
                          "general": {
                            "id": "string",
                            "name": "string",
                            "systemId": "string",
                            "protectionDomainState": "string",
                            "rebuildNetworkThrottlingInKbps": 0,
                            "rebalanceNetworkThrottlingInKbps": 0,
                            "overallIoNetworkThrottlingInKbps": 0,
                            "sdsDecoupledCounterParameters": {
                              "shortWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              },
                              "mediumWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              },
                              "longWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              }
                            },
                            "sdsConfigurationFailureCounterParameters": {
                              "shortWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              },
                              "mediumWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              },
                              "longWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              }
                            },
                            "mdmSdsCounterParameters": {
                              "shortWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              },
                              "mediumWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              },
                              "longWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              }
                            },
                            "sdsSdsCounterParameters": {
                              "shortWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              },
                              "mediumWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              },
                              "longWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              }
                            },
                            "rfcacheOpertionalMode": "string",
                            "rfcachePageSizeKb": 0,
                            "rfcacheMaxIoSizeKb": 0,
                            "sdsReceiveBufferAllocationFailuresCounterParameters": {
                              "shortWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              },
                              "mediumWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              },
                              "longWindow": {
                                "threshold": 0,
                                "windowSizeInSec": 0
                              }
                            },
                            "rebuildNetworkThrottlingEnabled": true,
                            "rebalanceNetworkThrottlingEnabled": true,
                            "overallIoNetworkThrottlingEnabled": true,
                            "rfcacheEnabled": true
                          },
                          "statistics": {
                            "unusedCapacityInKb": 0,
                            "numOfMappedToAllVolumes": 0,
                            "capacityAvailableForVolumeAllocationInKb": 0,
                            "capacityLimitInKb": 0,
                            "numOfUnmappedVolumes": 0,
                            "spareCapacityInKb": 0,
                            "numOfSds": 0,
                            "capacityInUseInKb": 0,
                            "numOfStoragePools": 0,
                            "numOfFaultSets": 0,
                            "maxCapacityInKb": 0,
                            "thinCapacityInUseInKb": 0,
                            "thickCapacityInUseInKb": 0
                          },
                          "storage_pool_list": [
                            {
                              "id": "string",
                              "name": "string",
                              "rebuildIoPriorityPolicy": "string",
                              "rebalanceIoPriorityPolicy": "string",
                              "rebuildIoPriorityNumOfConcurrentIosPerDevice": 0,
                              "rebalanceIoPriorityNumOfConcurrentIosPerDevice": 0,
                              "rebuildIoPriorityBwLimitPerDeviceInKbps": 0,
                              "rebalanceIoPriorityBwLimitPerDeviceInKbps": 0,
                              "rebuildIoPriorityAppIopsPerDeviceThreshold": "string",
                              "rebalanceIoPriorityAppIopsPerDeviceThreshold": "string",
                              "rebuildIoPriorityAppBwPerDeviceThresholdInKbps": 0,
                              "rebuildIoPriorityQuietPeriodInMsec": 0,
                              "rebalanceIoPriorityQuietPeriodInMsec": 0,
                              "zeroPaddingEnabled": true,
                              "backgroundScannerMode": "string",
                              "backgroundScannerBWLimitKBps": 0,
                              "useRmcache": true,
                              "protectionDomainId": "string",
                              "useRfcache": true,
                              "sparePercentage": 0,
                              "rmcacheWriteHandlingMode": "string",
                              "checksumEnabled": true,
                              "rebuildEnabled": true,
                              "rebalanceEnabled": true,
                              "numOfParallelRebuildRebalanceJobsPerDevice": 0,
                              "capacityAlertHighThreshold": 0,
                              "capacityAlertCriticalThreshold": 0,
                              "statistics": {
                                "numOfDevices": 0,
                                "unusedCapacityInKb": 0,
                                "numOfVolumes": 0,
                                "numOfMappedToAllVolumes": 0,
                                "capacityAvailableForVolumeAllocationInKb": 0,
                                "volumeAllocationLimitInKb": 0,
                                "capacityLimitInKb": 0,
                                "numOfUnmappedVolumes": 0,
                                "spareCapacityInKb": 0,
                                "capacityInUseInKb": 0,
                                "maxCapacityInKb": 0
                              },
                              "dataLayout": "string",
                              "replicationCapacityMaxRatio": "string",
                              "mediaType": "HDD",
                              "mediaTypeFromDiskType": "SSD",
                              "disk_list": [
                                {
                                  "id": "string",
                                  "name": "string",
                                  "errorState": "string",
                                  "sdsId": "string",
                                  "deviceState": "string",
                                  "capacityLimitInKb": 0,
                                  "maxCapacityInKb": 0,
                                  "storagePoolId": "string",
                                  "deviceCurrentPathName": "string",
                                  "deviceOriginalPathName": "string",
                                  "serialNumber": "string",
                                  "vendorName": "string",
                                  "modelName": "string"
                                }
                              ],
                              "volume_list": [
                                {
                                  "id": "string",
                                  "name": "string",
                                  "volumeType": "string",
                                  "storagePoolId": "string",
                                  "dataLayout": "string",
                                  "compressionMethod": "string",
                                  "sizeInKb": 0,
                                  "mappedSdcInfo": [
                                    {
                                      "sdcIp": "string",
                                      "sdcId": "string",
                                      "limitBwInMbps": 0,
                                      "limitIops": 0
                                    }
                                  ]
                                }
                              ],
                              "fglAccpId": "string",
                              "rebalanceIoPriorityAppBwPerDeviceThresholdInKbps": 0
                            }
                          ],
                          "sds_list": [
                            {
                              "id": "string",
                              "name": "string",
                              "port": 0,
                              "protectionDomainId": "string",
                              "faultSetId": "string",
                              "softwareVersionInfo": "string",
                              "sdsState": "string",
                              "membershipState": "string",
                              "mdmConnectionState": "string",
                              "drlMode": "string",
                              "maintenanceState": "string",
                              "perfProfile": "string",
                              "onVmWare": true,
                              "ipList": [
                                {
                                  "ip": "string",
                                  "role": "string"
                                }
                              ]
                            }
                          ],
                          "sdr_list": [
                            {
                              "id": "string",
                              "name": "string",
                              "port": 0,
                              "protectionDomainId": "string",
                              "softwareVersionInfo": "string",
                              "sdrState": "string",
                              "membershipState": "string",
                              "mdmConnectionState": "string",
                              "maintenanceState": "string",
                              "perfProfile": "string",
                              "ipList": [
                                {
                                  "ip": "string",
                                  "role": "string"
                                }
                              ]
                            }
                          ],
                          "acceleration_pool": [
                            {
                              "id": "string",
                              "name": "string",
                              "protectionDomainId": "string",
                              "mediaType": "string",
                              "rfcache": true
                            }
                          ]
                        }
                      ],
                      "faultSetSettings": [
                        {
                          "protectionDomainId": "string",
                          "name": "string",
                          "id": "string"
                        }
                      ],
                      "attributes": {},
                      "vdsConfiguration": {
                        "datacenter": {
                          "vcenterId": "string",
                          "datacenterId": "string",
                          "datacenterName": "string"
                        },
                        "portGroupOption": "string",
                        "portGroupCreationOption": "string",
                        "vdsSettings": [
                          {
                            "id": "string",
                            "displayName": "string",
                            "name": "string",
                            "value": "string",
                            "portGroups": [
                              {
                                "id": "string",
                                "displayName": "string",
                                "vlan": 0,
                                "name": "string",
                                "value": "string"
                              }
                            ]
                          }
                        ],
                        "vdsNetworkMtuSizeConfiguration": [
                          {
                            "id": "string",
                            "value": "string"
                          }
                        ],
                        "vdsNetworkMTUSizeConfiguration": [
                          {
                            "id": "string",
                            "value": "string"
                          }
                        ]
                      }
                    }
                  ],
                  "id": "string",
                  "displayName": "string",
                  "parametersMap": {}
                }
              ],
              "brownfield": true,
              "puppetCertName": "string",
              "managementIpAddress": "string",
              "serialNumber": "string",
              "asmGUID": "string",
              "cloned": true,
              "configFile": "string",
              "manageFirmware": true,
              "instances": 0,
              "refId": "string",
              "ip": "string",
              "osPuppetCertName": "string",
              "clonedFromAsmGuid": "string"
            },
            "category": "string",
            "createdBy": "string",
            "attachments": [
              "string"
            ],
            "id": "string",
            "licenseRepository": {
              "id": "string",
              "name": "string",
              "type": "CloudLink",
              "diskLocation": "string",
              "filename": "string",
              "state": "string",
              "createdDate": "2019-08-24T14:15:22Z",
              "createdBy": "string",
              "updatedDate": "2019-08-24T14:15:22Z",
              "updatedBy": "string",
              "templates": [
                {}
              ]
            },
            "templateType": "string",
            "originalTemplateId": "string",
            "inConfiguration": true,
            "configuration": {
              "id": "string",
              "categories": [
                {
                  "id": "string",
                  "displayName": "string",
                  "deviceType": "string",
                  "parameters": [
                    {
                      "id": "string",
                      "value": "string",
                      "displayName": "string",
                      "type": "string",
                      "toolTip": "string",
                      "required": true,
                      "hideFromTemplate": true,
                      "deviceType": "string",
                      "dependencies": [
                        {
                          "dependencyTarget": "string",
                          "dependencyValue": "string"
                        }
                      ],
                      "group": "string",
                      "readOnly": true,
                      "generated": true,
                      "infoIcon": true,
                      "step": 0,
                      "maxLength": 0,
                      "min": 0,
                      "max": 0,
                      "networks": [
                        {
                          "id": "string",
                          "name": "string",
                          "description": "string",
                          "type": "HYPERVISOR_MANAGEMENT",
                          "vlanId": 0,
                          "staticNetworkConfiguration": {
                            "ipAddress": "string",
                            "subnet": "string",
                            "gateway": "string",
                            "primaryDns": "string",
                            "secondaryDns": "string",
                            "dnsSuffix": "string",
                            "ipRange": [
                              {
                                "startingIp": "string",
                                "endingIp": "string",
                                "id": "string",
                                "role": "sdconly"
                              }
                            ],
                            "staticRoute": [
                              {
                                "staticRouteSourceNetworkId": "string",
                                "staticRouteDestinationNetworkId": "string",
                                "subnetMask": "string",
                                "destinationIpAddress": "string"
                              }
                            ],
                            "staticRoutes": [
                              {
                                "staticRouteSourceNetworkId": "string",
                                "staticRouteDestinationNetworkId": "string",
                                "subnetMask": "string",
                                "destinationIpAddress": "string"
                              }
                            ]
                          },
                          "destinationIpAddress": "string",
                          "static": true,
                          "createdDate": "2019-08-24T14:15:22Z",
                          "createdBy": "string",
                          "updatedDate": "2019-08-24T14:15:22Z",
                          "updatedBy": "string",
                          "link": {
                            "rel": "string",
                            "href": "string",
                            "title": "string",
                            "type": "string"
                          }
                        }
                      ],
                      "options": [
                        {
                          "id": "string",
                          "name": "string",
                          "dependencies": [
                            {
                              "dependencyTarget": "string",
                              "dependencyValue": "string"
                            }
                          ],
                          "attributes": {}
                        }
                      ],
                      "optionsSortable": true
                    }
                  ],
                  "parameterMap": {}
                }
              ],
              "settingsMap": {},
              "categoriesMap": {}
            },
            "serverCount": 0,
            "storageCount": 0,
            "clusterCount": 0,
            "serviceCount": 0,
            "switchCount": 0,
            "vmCount": 0,
            "brownfieldTemplateType": "Ready",
            "networks": [
              {
                "id": "string",
                "name": "string",
                "description": "string",
                "type": "HYPERVISOR_MANAGEMENT",
                "vlanId": 0,
                "staticNetworkConfiguration": {
                  "ipAddress": "string",
                  "subnet": "string",
                  "gateway": "string",
                  "primaryDns": "string",
                  "secondaryDns": "string",
                  "dnsSuffix": "string",
                  "ipRange": [
                    {
                      "startingIp": "string",
                      "endingIp": "string",
                      "id": "string",
                      "role": "sdconly"
                    }
                  ],
                  "staticRoute": [
                    {
                      "staticRouteSourceNetworkId": "string",
                      "staticRouteDestinationNetworkId": "string",
                      "subnetMask": "string",
                      "destinationIpAddress": "string"
                    }
                  ],
                  "staticRoutes": [
                    {
                      "staticRouteSourceNetworkId": "string",
                      "staticRouteDestinationNetworkId": "string",
                      "subnetMask": "string",
                      "destinationIpAddress": "string"
                    }
                  ]
                },
                "destinationIpAddress": "string",
                "static": true,
                "createdDate": "2019-08-24T14:15:22Z",
                "createdBy": "string",
                "updatedDate": "2019-08-24T14:15:22Z",
                "updatedBy": "string",
                "link": {
                  "rel": "string",
                  "href": "string",
                  "title": "string",
                  "type": "string"
                }
              }
            ],
            "blockServiceOperationsMap": {},
            "cachedParameterMap": {},
            "cachedComponentTypeMap": {},
            "networksMap": {},
            "useDefaultCatalog": true
          },
          "deploymentDevice": {
            "refId": "string",
            "deviceType": "Server",
            "serviceTag": "string",
            "ipAddress": "string",
            "statusMessage": "string",
            "healthMessage": "string",
            "brownfield": true,
            "componentId": "string",
            "brownfieldStatus": "NEWLY_AVAILABLE",
            "deviceHealth": "green",
            "compliantState": "NA",
            "statusEndTime": "string",
            "statusStartTime": "string",
            "logDump": "string",
            "status": "Pending",
            "refType": "string",
            "deviceGroupName": "string",
            "currentIpAddress": "string",
            "model": "string",
            "cloudLink": true,
            "dasCache": true,
            "deviceState": "Ready",
            "puppetCertName": "string"
          },
          "vms": [
            {
              "vmIpaddress": "string",
              "vmManufacturer": "string",
              "vmModel": "string",
              "vmServiceTag": "string",
              "certificateName": "string"
            }
          ],
          "jobDetails": [
            {
              "level": "string",
              "message": "string",
              "timestamp": "string",
              "executionId": "string",
              "componentId": "string"
            }
          ],
          "retry": true,
          "updateServerFirmware": true,
          "individualTeardown": true,
          "overallDeviceHealth": "green",
          "compliant": true,
          "createdBy": "string",
          "status": "Pending",
          "id": "string",
          "owner": "string",
          "DeploymentValid": {
            "id": "string",
            "messages": [
              {
                "timeStamp": "string",
                "messageBundle": "string",
                "severity": "string",
                "sequenceNumber": 0,
                "category": "string",
                "displayMessage": "string",
                "messageCode": "string",
                "correlationId": "string",
                "agentId": "string",
                "responseAction": "string",
                "detailedMessage": "string"
              }
            ]
          },
          "teardownAfterCancel": true,
          "removeService": true,
          "deploymentScheduledDate": "2019-08-24T14:15:22Z",
          "deploymentStartedDate": "2019-08-24T14:15:22Z",
          "deploymentFinishedDate": "2019-08-24T14:15:22Z",
          "useDefaultCatalog": true,
          "licenseRepository": {
            "id": "string",
            "name": "string",
            "type": "CloudLink",
            "diskLocation": "string",
            "filename": "string",
            "state": "string",
            "createdDate": "2019-08-24T14:15:22Z",
            "createdBy": "string",
            "updatedDate": "2019-08-24T14:15:22Z",
            "updatedBy": "string",
            "templates": [
              {
                "createdDate": "2019-08-24T14:15:22Z",
                "updatedBy": "string",
                "updatedDate": "2019-08-24T14:15:22Z",
                "firmwareRepository": {
                  "createdDate": "2019-08-24T14:15:22Z",
                  "updatedBy": "string",
                  "updatedDate": "2019-08-24T14:15:22Z",
                  "softwareComponents": [
                    {
                      "createdDate": "2019-08-24T14:15:22Z",
                      "updatedBy": "string",
                      "updatedDate": "2019-08-24T14:15:22Z",
                      "deviceId": "string",
                      "componentId": "string",
                      "packageId": "string",
                      "dellVersion": "string",
                      "vendorVersion": "string",
                      "subDeviceId": "string",
                      "vendorId": "string",
                      "subVendorId": "string",
                      "hashMd5": "string",
                      "systemIDs": [
                        "string"
                      ],
                      "category": "string",
                      "createdBy": "string",
                      "componentType": "string",
                      "name": "string",
                      "id": "string",
                      "path": "string",
                      "operatingSystem": "string"
                    }
                  ],
                  "sourceLocation": "string",
                  "sourceType": "string",
                  "diskLocation": "string",
                  "md5Hash": "string",
                  "downloadStatus": "pending",
                  "softwareBundles": [
                    {
                      "deviceType": "string",
                      "createdDate": "2019-08-24T14:15:22Z",
                      "updatedBy": "string",
                      "updatedDate": "2019-08-24T14:15:22Z",
                      "softwareComponents": [
                        {
                          "createdDate": "2019-08-24T14:15:22Z",
                          "updatedBy": "string",
                          "updatedDate": "2019-08-24T14:15:22Z",
                          "deviceId": "string",
                          "componentId": "string",
                          "packageId": "string",
                          "dellVersion": "string",
                          "vendorVersion": "string",
                          "subDeviceId": "string",
                          "vendorId": "string",
                          "subVendorId": "string",
                          "hashMd5": "string",
                          "systemIDs": [
                            "string"
                          ],
                          "category": "string",
                          "createdBy": "string",
                          "componentType": "string",
                          "name": "string",
                          "id": "string",
                          "path": "string",
                          "operatingSystem": "string"
                        }
                      ],
                      "userBundlePath": "string",
                      "userBundle": true,
                      "userBundleHashMd5": "string",
                      "deviceModel": "string",
                      "criticality": "string",
                      "fwRepositoryId": "string",
                      "bundleDate": "2019-08-24T14:15:22Z",
                      "version": "string",
                      "description": "string",
                      "link": {
                        "rel": "string",
                        "href": "string",
                        "title": "string",
                        "type": "string"
                      },
                      "createdBy": "string",
                      "name": "string",
                      "id": "string",
                      "bundleType": "SOFTWARE"
                    }
                  ],
                  "bundleCount": 0,
                  "defaultCatalog": true,
                  "componentCount": 0,
                  "deployments": [
                    {
                      "createdDate": "2019-08-24T14:15:22Z",
                      "updatedBy": "string",
                      "updatedDate": "2019-08-24T14:15:22Z",
                      "firmwareRepository": {},
                      "assignedUsers": [
                        {
                          "userName": "string",
                          "createdDate": "2019-08-24T14:15:22Z",
                          "updatedBy": "string",
                          "updatedDate": "2019-08-24T14:15:22Z",
                          "groupName": "string",
                          "email": "string",
                          "phoneNumber": "string",
                          "systemUser": true,
                          "userSeqId": 0,
                          "updatePassword": true,
                          "domainName": "string",
                          "groupDN": "string",
                          "firstName": "string",
                          "lastName": "string",
                          "enabled": "true",
                          "link": {
                            "rel": "string",
                            "href": "string",
                            "title": "string",
                            "type": "string"
                          },
                          "role": "string",
                          "createdBy": "string",
                          "password": "string",
                          "userPreference": "string"
                        }
                      ],
                      "allUsersAllowed": true,
                      "teardown": true,
                      "templateValid": true,
                      "brownfield": true,
                      "vds": true,
                      "deploymentHealthStatusType": "green",
                      "canMigrate": true,
                      "scheduleDate": "string",
                      "numberOfDeployments": 0,
                      "firmwareRepositoryId": "string",
                      "deploymentName": "string",
                      "deploymentDescription": "string",
                      "serviceTemplate": {},
                      "deploymentDevice": {
                        "refId": "string",
                        "deviceType": "Server",
                        "serviceTag": "string",
                        "ipAddress": "string",
                        "statusMessage": "string",
                        "healthMessage": "string",
                        "brownfield": true,
                        "componentId": "string",
                        "brownfieldStatus": "NEWLY_AVAILABLE",
                        "deviceHealth": "green",
                        "compliantState": "NA",
                        "statusEndTime": "string",
                        "statusStartTime": "string",
                        "logDump": "string",
                        "status": "Pending",
                        "refType": "string",
                        "deviceGroupName": "string",
                        "currentIpAddress": "string",
                        "model": "string",
                        "cloudLink": true,
                        "dasCache": true,
                        "deviceState": "Ready",
                        "puppetCertName": "string"
                      },
                      "vms": [
                        {
                          "vmIpaddress": "string",
                          "vmManufacturer": "string",
                          "vmModel": "string",
                          "vmServiceTag": "string",
                          "certificateName": "string"
                        }
                      ],
                      "jobDetails": [
                        {
                          "level": "string",
                          "message": "string",
                          "timestamp": "string",
                          "executionId": "string",
                          "componentId": "string"
                        }
                      ],
                      "retry": true,
                      "updateServerFirmware": true,
                      "individualTeardown": true,
                      "overallDeviceHealth": "green",
                      "compliant": true,
                      "createdBy": "string",
                      "status": "Pending",
                      "id": "string",
                      "owner": "string",
                      "DeploymentValid": {
                        "id": "string",
                        "messages": [
                          {
                            "timeStamp": "string",
                            "messageBundle": "string",
                            "severity": "string",
                            "sequenceNumber": 0,
                            "category": "string",
                            "displayMessage": "string",
                            "messageCode": "string",
                            "correlationId": "string",
                            "agentId": "string",
                            "responseAction": "string",
                            "detailedMessage": "string"
                          }
                        ]
                      },
                      "teardownAfterCancel": true,
                      "removeService": true,
                      "deploymentScheduledDate": "2019-08-24T14:15:22Z",
                      "deploymentStartedDate": "2019-08-24T14:15:22Z",
                      "deploymentFinishedDate": "2019-08-24T14:15:22Z",
                      "useDefaultCatalog": true,
                      "licenseRepository": {},
                      "licenseRepositoryId": "string",
                      "noOp": true,
                      "firmwareInit": true,
                      "disruptiveFirmware": true,
                      "preconfigureSVM": true,
                      "preconfigureSVMAndUpdate": true,
                      "servicesDeployed": "Unknown",
                      "precalculatedDeviceHealth": "green",
                      "lifecycleModeReasons": [
                        "Service is in Lifecycle mode from previous release for an unknown reason"
                      ],
                      "canMigratevCLSVMs": true,
                      "lifecycleMode": true,
                      "scaleUp": true,
                      "configurationChange": true,
                      "allDeploymentDevicesBrownfieldStatus": "NEWLY_AVAILABLE",
                      "operationType": "NONE",
                      "operationStatus": "Starting",
                      "operationData": "string",
                      "deploymentValidationResponse": {
                        "nodes": 0,
                        "storagePools": 0,
                        "drivesPerStoragePool": 0,
                        "maxScalability": 0,
                        "virtualMachines": 0,
                        "numberOfServiceVolumes": 0,
                        "canDeploy": true,
                        "warningMessage": "string",
                        "storagePoolDiskType": [
                          "string"
                        ],
                        "hostnames": [
                          "string"
                        ],
                        "newNodeDiskTypes": [
                          "string"
                        ],
                        "noOfFaultSets": 0,
                        "nodesPerFaultSet": 0,
                        "protectionDomain": "string",
                        "diskTypeMismatch": true
                      },
                      "currentStepCount": "string",
                      "totalNumOfSteps": "string",
                      "currentStepMessage": "string",
                      "customImage": "string",
                      "originalDeploymentId": "string"
                    }
                  ],
                  "username": "string",
                  "createdBy": "string",
                  "filename": "string",
                  "password": "string",
                  "embedded": true,
                  "name": "string",
                  "id": "string",
                  "state": "copying",
                  "userBundleCount": 0,
                  "minimal": true,
                  "downloadProgress": 0,
                  "extractProgress": 0,
                  "fileSizeInGigabytes": 0
                },
                "draft": true,
                "templateName": "string",
                "templateDescription": "string",
                "wizardPageNumber": 0,
                "assignedUsers": [
                  {
                    "userName": "string",
                    "createdDate": "2019-08-24T14:15:22Z",
                    "updatedBy": "string",
                    "updatedDate": "2019-08-24T14:15:22Z",
                    "groupName": "string",
                    "email": "string",
                    "phoneNumber": "string",
                    "systemUser": true,
                    "userSeqId": 0,
                    "updatePassword": true,
                    "domainName": "string",
                    "groupDN": "string",
                    "firstName": "string",
                    "lastName": "string",
                    "enabled": "true",
                    "link": {
                      "rel": "string",
                      "href": "string",
                      "title": "string",
                      "type": "string"
                    },
                    "role": "string",
                    "createdBy": "string",
                    "password": "string",
                    "userPreference": "string"
                  }
                ],
                "allUsersAllowed": true,
                "templateValid": {
                  "valid": true,
                  "messages": [
                    {
                      "timeStamp": "string",
                      "messageBundle": "string",
                      "severity": "string",
                      "sequenceNumber": 0,
                      "category": "string",
                      "displayMessage": "string",
                      "messageCode": "string",
                      "correlationId": "string",
                      "agentId": "string",
                      "responseAction": "string",
                      "detailedMessage": "string"
                    }
                  ]
                },
                "templateLocked": true,
                "templateVersion": "string",
                "lastDeployedDate": "2019-08-24T14:15:22Z",
                "manageFirmware": true,
                "components": {
                  "id": "string",
                  "componentID": "string",
                  "identifier": "string",
                  "componentValid": {
                    "valid": true,
                    "messages": [
                      {
                        "timeStamp": "string",
                        "messageBundle": "string",
                        "severity": "string",
                        "sequenceNumber": 0,
                        "category": "string",
                        "displayMessage": "string",
                        "messageCode": "string",
                        "correlationId": "string",
                        "agentId": "string",
                        "responseAction": "string",
                        "detailedMessage": "string"
                      }
                    ]
                  },
                  "name": "string",
                  "helpText": "string",
                  "clonedFromId": "string",
                  "teardown": true,
                  "type": "string",
                  "subType": "CLASS",
                  "relatedComponents": {},
                  "resources": [
                    {
                      "parameters": [
                        {
                          "min": 0,
                          "networks": [
                            {
                              "id": "string",
                              "name": "string",
                              "description": "string",
                              "type": "HYPERVISOR_MANAGEMENT",
                              "vlanId": 0,
                              "staticNetworkConfiguration": {
                                "ipAddress": "string",
                                "subnet": "string",
                                "gateway": "string",
                                "primaryDns": "string",
                                "secondaryDns": "string",
                                "dnsSuffix": "string",
                                "ipRange": [
                                  {
                                    "startingIp": "string",
                                    "endingIp": "string",
                                    "id": "string",
                                    "role": "sdconly"
                                  }
                                ],
                                "staticRoute": [
                                  {
                                    "staticRouteSourceNetworkId": "string",
                                    "staticRouteDestinationNetworkId": "string",
                                    "subnetMask": "string",
                                    "destinationIpAddress": "string"
                                  }
                                ],
                                "staticRoutes": [
                                  {
                                    "staticRouteSourceNetworkId": "string",
                                    "staticRouteDestinationNetworkId": "string",
                                    "subnetMask": "string",
                                    "destinationIpAddress": "string"
                                  }
                                ]
                              },
                              "destinationIpAddress": "string",
                              "static": true,
                              "createdDate": "2019-08-24T14:15:22Z",
                              "createdBy": "string",
                              "updatedDate": "2019-08-24T14:15:22Z",
                              "updatedBy": "string",
                              "link": {
                                "rel": "string",
                                "href": "string",
                                "title": "string",
                                "type": "string"
                              }
                            }
                          ],
                          "dependencyValue": "string",
                          "dependencyTarget": "string",
                          "optionsSortable": true,
                          "step": 0,
                          "requiredAtDeployment": true,
                          "hideFromTemplate": true,
                          "toolTip": "string",
                          "infoIcon": true,
                          "maxLength": 0,
                          "networkConfiguration": {
                            "networks": [
                              {
                                "id": "string",
                                "ipAddress": "string"
                              }
                            ],
                            "definedInterfaces": [
                              {
                                "fqdd": "string",
                                "maxPartitions": 0,
                                "partitioned": true,
                                "partitions": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "networks": [
                                      "string"
                                    ],
                                    "networkObjects": [
                                      {
                                        "id": "string",
                                        "name": "string",
                                        "description": "string",
                                        "type": "HYPERVISOR_MANAGEMENT",
                                        "vlanId": 0,
                                        "staticNetworkConfiguration": {
                                          "ipAddress": "string",
                                          "subnet": "string",
                                          "gateway": "string",
                                          "primaryDns": "string",
                                          "secondaryDns": "string",
                                          "dnsSuffix": "string",
                                          "ipRange": [
                                            {
                                              "startingIp": "string",
                                              "endingIp": "string",
                                              "id": "string",
                                              "role": "sdconly"
                                            }
                                          ],
                                          "staticRoute": [
                                            {
                                              "staticRouteSourceNetworkId": "string",
                                              "staticRouteDestinationNetworkId": "string",
                                              "subnetMask": "string",
                                              "destinationIpAddress": "string"
                                            }
                                          ],
                                          "staticRoutes": [
                                            {
                                              "staticRouteSourceNetworkId": "string",
                                              "staticRouteDestinationNetworkId": "string",
                                              "subnetMask": "string",
                                              "destinationIpAddress": "string"
                                            }
                                          ]
                                        },
                                        "destinationIpAddress": "string",
                                        "static": true,
                                        "createdDate": "2019-08-24T14:15:22Z",
                                        "createdBy": "string",
                                        "updatedDate": "2019-08-24T14:15:22Z",
                                        "updatedBy": "string",
                                        "link": {
                                          "rel": "string",
                                          "href": "string",
                                          "title": "string",
                                          "type": "string"
                                        }
                                      }
                                    ],
                                    "networkIpAddressList": [
                                      {
                                        "id": "string",
                                        "ipAddress": "string"
                                      }
                                    ],
                                    "minimum": 0,
                                    "maximum": 0,
                                    "lanMacAddress": "string",
                                    "iscsiMacAddress": "string",
                                    "iscsiIQN": "string",
                                    "wwnn": "string",
                                    "wwpn": "string",
                                    "macAddress": "string",
                                    "portNo": 0,
                                    "partitionNo": 0,
                                    "partitionIndex": 0,
                                    "fqdd": "string",
                                    "mirroredPort": "string"
                                  }
                                ],
                                "nictype": "string",
                                "redundancy": true,
                                "enabled": true,
                                "name": "string",
                                "id": "string",
                                "allNetworks": [
                                  "string"
                                ]
                              }
                            ],
                            "usedInterfaces": [
                              {
                                "fqdd": "string",
                                "maxPartitions": 0,
                                "partitioned": true,
                                "partitions": [
                                  {
                                    "id": "string",
                                    "name": "string",
                                    "networks": [
                                      "string"
                                    ],
                                    "networkObjects": [
                                      {
                                        "id": "string",
                                        "name": "string",
                                        "description": "string",
                                        "type": "HYPERVISOR_MANAGEMENT",
                                        "vlanId": 0,
                                        "staticNetworkConfiguration": {
                                          "ipAddress": "string",
                                          "subnet": "string",
                                          "gateway": "string",
                                          "primaryDns": "string",
                                          "secondaryDns": "string",
                                          "dnsSuffix": "string",
                                          "ipRange": [
                                            {
                                              "startingIp": "string",
                                              "endingIp": "string",
                                              "id": "string",
                                              "role": "sdconly"
                                            }
                                          ],
                                          "staticRoute": [
                                            {
                                              "staticRouteSourceNetworkId": "string",
                                              "staticRouteDestinationNetworkId": "string",
                                              "subnetMask": "string",
                                              "destinationIpAddress": "string"
                                            }
                                          ],
                                          "staticRoutes": [
                                            {
                                              "staticRouteSourceNetworkId": "string",
                                              "staticRouteDestinationNetworkId": "string",
                                              "subnetMask": "string",
                                              "destinationIpAddress": "string"
                                            }
                                          ]
                                        },
                                        "destinationIpAddress": "string",
                                        "static": true,
                                        "createdDate": "2019-08-24T14:15:22Z",
                                        "createdBy": "string",
                                        "updatedDate": "2019-08-24T14:15:22Z",
                                        "updatedBy": "string",
                                        "link": {
                                          "rel": "string",
                                          "href": "string",
                                          "title": "string",
                                          "type": "string"
                                        }
                                      }
                                    ],
                                    "networkIpAddressList": [
                                      {
                                        "id": "string",
                                        "ipAddress": "string"
                                      }
                                    ],
                                    "minimum": 0,
                                    "maximum": 0,
                                    "lanMacAddress": "string",
                                    "iscsiMacAddress": "string",
                                    "iscsiIQN": "string",
                                    "wwnn": "string",
                                    "wwpn": "string",
                                    "macAddress": "string",
                                    "portNo": 0,
                                    "partitionNo": 0,
                                    "partitionIndex": 0,
                                    "fqdd": "string",
                                    "mirroredPort": "string"
                                  }
                                ],
                                "nictype": "string",
                                "redundancy": true,
                                "enabled": true,
                                "name": "string",
                                "id": "string",
                                "allNetworks": [
                                  "string"
                                ]
                              }
                            ],
                            "allNetworkIds": [
                              "string"
                            ],
                            "interfaces": [
                              {
                                "maxPartitions": 0,
                                "partitioned": true,
                                "nictype": "string",
                                "redundancy": true,
                                "fabrictype": "string",
                                "nports": 0,
                                "nictypeSource": "string",
                                "enabled": true,
                                "name": "string",
                                "interfaces": [
                                  {
                                    "fqdd": "string",
                                    "maxPartitions": 0,
                                    "partitioned": true,
                                    "partitions": [
                                      {
                                        "id": "string",
                                        "name": "string",
                                        "networks": [
                                          "string"
                                        ],
                                        "networkObjects": [
                                          {
                                            "id": "string",
                                            "name": "string",
                                            "description": "string",
                                            "type": "HYPERVISOR_MANAGEMENT",
                                            "vlanId": 0,
                                            "staticNetworkConfiguration": {
                                              "ipAddress": "string",
                                              "subnet": "string",
                                              "gateway": "string",
                                              "primaryDns": "string",
                                              "secondaryDns": "string",
                                              "dnsSuffix": "string",
                                              "ipRange": [
                                                {
                                                  "startingIp": "string",
                                                  "endingIp": "string",
                                                  "id": "string",
                                                  "role": "sdconly"
                                                }
                                              ],
                                              "staticRoute": [
                                                {
                                                  "staticRouteSourceNetworkId": "string",
                                                  "staticRouteDestinationNetworkId": "string",
                                                  "subnetMask": "string",
                                                  "destinationIpAddress": "string"
                                                }
                                              ],
                                              "staticRoutes": [
                                                {
                                                  "staticRouteSourceNetworkId": "string",
                                                  "staticRouteDestinationNetworkId": "string",
                                                  "subnetMask": "string",
                                                  "destinationIpAddress": "string"
                                                }
                                              ]
                                            },
                                            "destinationIpAddress": "string",
                                            "static": true,
                                            "createdDate": "2019-08-24T14:15:22Z",
                                            "createdBy": "string",
                                            "updatedDate": "2019-08-24T14:15:22Z",
                                            "updatedBy": "string",
                                            "link": {
                                              "rel": "string",
                                              "href": "string",
                                              "title": "string",
                                              "type": "string"
                                            }
                                          }
                                        ],
                                        "networkIpAddressList": [
                                          {
                                            "id": "string",
                                            "ipAddress": "string"
                                          }
                                        ],
                                        "minimum": 0,
                                        "maximum": 0,
                                        "lanMacAddress": "string",
                                        "iscsiMacAddress": "string",
                                        "iscsiIQN": "string",
                                        "wwnn": "string",
                                        "wwpn": "string",
                                        "macAddress": "string",
                                        "portNo": 0,
                                        "partitionNo": 0,
                                        "partitionIndex": 0,
                                        "fqdd": "string",
                                        "mirroredPort": "string"
                                      }
                                    ],
                                    "nictype": "string",
                                    "redundancy": true,
                                    "enabled": true,
                                    "name": "string",
                                    "id": "string",
                                    "allNetworks": [
                                      "string"
                                    ]
                                  }
                                ],
                                "id": "string",
                                "card_index": 0
                              }
                            ],
                            "id": "string"
                          },
                          "raidConfiguration": {
                            "externalSsdHotSpares": [
                              "string"
                            ],
                            "externalVirtualDisks": [
                              {
                                "raidLevel": "raid0",
                                "physicalDisks": [
                                  "string"
                                ],
                                "mediaType": "SSD",
                                "controller": "string",
                                "configuration": {
                                  "raidlevel": "raid0",
                                  "disktype": "requiressd",
                                  "numberofdisks": 0,
                                  "comparator": "minimum",
                                  "id": "string",
                                  "virtualDiskFqdd": "string",
                                  "controllerFqdd": "string"
                                },
                                "virtualDiskFqdd": "string",
                                "rollUpStatus": "string",
                                "controllerProductName": "string",
                                "encryptionType": "string"
                              }
                            ],
                            "virtualDisks": [
                              {
                                "raidLevel": "raid0",
                                "physicalDisks": [
                                  "string"
                                ],
                                "mediaType": "SSD",
                                "controller": "string",
                                "configuration": {
                                  "raidlevel": "raid0",
                                  "disktype": "requiressd",
                                  "numberofdisks": 0,
                                  "comparator": "minimum",
                                  "id": "string",
                                  "virtualDiskFqdd": "string",
                                  "controllerFqdd": "string"
                                },
                                "virtualDiskFqdd": "string",
                                "rollUpStatus": "string",
                                "controllerProductName": "string",
                                "encryptionType": "string"
                              }
                            ],
                            "externalHddHotSpares": [
                              "string"
                            ],
                            "hddHotSpares": [
                              "string"
                            ],
                            "ssdHotSpares": [
                              "string"
                            ],
                            "sizeToDiskMap": {}
                          },
                          "max": 0,
                          "group": "string",
                          "options": [
                            {
                              "dependencyValue": "string",
                              "dependencyTarget": "string",
                              "name": "string",
                              "value": "string",
                              "dependencies": [
                                {
                                  "dependencyTarget": "string",
                                  "dependencyValue": "string",
                                  "id": "string"
                                }
                              ],
                              "attributes": {},
                              "id": "string"
                            }
                          ],
                          "generated": true,
                          "required": true,
                          "value": "string",
                          "id": "string",
                          "type": "BOOLEAN",
                          "readOnly": true,
                          "displayName": "string",
                          "dependencies": [
                            {
                              "dependencyTarget": "string",
                              "dependencyValue": "string",
                              "id": "string"
                            }
                          ],
                          "networkIpAddressList": [
                            {
                              "id": "string",
                              "ipAddress": "string"
                            }
                          ],
                          "preservedForDeployment": true,
                          "scaleIODiskConfiguration": {
                            "scaleIOStoragePoolDisks": [
                              {
                                "protectionDomainId": "string",
                                "protectionDomainName": "string",
                                "storagePoolId": "string",
                                "storagePoolName": "string",
                                "diskType": "SSD",
                                "physicalDiskFqdds": [
                                  "string"
                                ],
                                "virtualDiskFqdds": [
                                  "string"
                                ]
                              }
                            ]
                          },
                          "protectionDomainSettings": [
                            {
                              "general": {
                                "id": "string",
                                "name": "string",
                                "systemId": "string",
                                "protectionDomainState": "string",
                                "rebuildNetworkThrottlingInKbps": 0,
                                "rebalanceNetworkThrottlingInKbps": 0,
                                "overallIoNetworkThrottlingInKbps": 0,
                                "sdsDecoupledCounterParameters": {
                                  "shortWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  },
                                  "mediumWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  },
                                  "longWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  }
                                },
                                "sdsConfigurationFailureCounterParameters": {
                                  "shortWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  },
                                  "mediumWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  },
                                  "longWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  }
                                },
                                "mdmSdsCounterParameters": {
                                  "shortWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  },
                                  "mediumWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  },
                                  "longWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  }
                                },
                                "sdsSdsCounterParameters": {
                                  "shortWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  },
                                  "mediumWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  },
                                  "longWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  }
                                },
                                "rfcacheOpertionalMode": "string",
                                "rfcachePageSizeKb": 0,
                                "rfcacheMaxIoSizeKb": 0,
                                "sdsReceiveBufferAllocationFailuresCounterParameters": {
                                  "shortWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  },
                                  "mediumWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  },
                                  "longWindow": {
                                    "threshold": 0,
                                    "windowSizeInSec": 0
                                  }
                                },
                                "rebuildNetworkThrottlingEnabled": true,
                                "rebalanceNetworkThrottlingEnabled": true,
                                "overallIoNetworkThrottlingEnabled": true,
                                "rfcacheEnabled": true
                              },
                              "statistics": {
                                "unusedCapacityInKb": 0,
                                "numOfMappedToAllVolumes": 0,
                                "capacityAvailableForVolumeAllocationInKb": 0,
                                "capacityLimitInKb": 0,
                                "numOfUnmappedVolumes": 0,
                                "spareCapacityInKb": 0,
                                "numOfSds": 0,
                                "capacityInUseInKb": 0,
                                "numOfStoragePools": 0,
                                "numOfFaultSets": 0,
                                "maxCapacityInKb": 0,
                                "thinCapacityInUseInKb": 0,
                                "thickCapacityInUseInKb": 0
                              },
                              "storage_pool_list": [
                                {
                                  "id": "string",
                                  "name": "string",
                                  "rebuildIoPriorityPolicy": "string",
                                  "rebalanceIoPriorityPolicy": "string",
                                  "rebuildIoPriorityNumOfConcurrentIosPerDevice": 0,
                                  "rebalanceIoPriorityNumOfConcurrentIosPerDevice": 0,
                                  "rebuildIoPriorityBwLimitPerDeviceInKbps": 0,
                                  "rebalanceIoPriorityBwLimitPerDeviceInKbps": 0,
                                  "rebuildIoPriorityAppIopsPerDeviceThreshold": "string",
                                  "rebalanceIoPriorityAppIopsPerDeviceThreshold": "string",
                                  "rebuildIoPriorityAppBwPerDeviceThresholdInKbps": 0,
                                  "rebuildIoPriorityQuietPeriodInMsec": 0,
                                  "rebalanceIoPriorityQuietPeriodInMsec": 0,
                                  "zeroPaddingEnabled": true,
                                  "backgroundScannerMode": "string",
                                  "backgroundScannerBWLimitKBps": 0,
                                  "useRmcache": true,
                                  "protectionDomainId": "string",
                                  "useRfcache": true,
                                  "sparePercentage": 0,
                                  "rmcacheWriteHandlingMode": "string",
                                  "checksumEnabled": true,
                                  "rebuildEnabled": true,
                                  "rebalanceEnabled": true,
                                  "numOfParallelRebuildRebalanceJobsPerDevice": 0,
                                  "capacityAlertHighThreshold": 0,
                                  "capacityAlertCriticalThreshold": 0,
                                  "statistics": {
                                    "numOfDevices": 0,
                                    "unusedCapacityInKb": 0,
                                    "numOfVolumes": 0,
                                    "numOfMappedToAllVolumes": 0,
                                    "capacityAvailableForVolumeAllocationInKb": 0,
                                    "volumeAllocationLimitInKb": 0,
                                    "capacityLimitInKb": 0,
                                    "numOfUnmappedVolumes": 0,
                                    "spareCapacityInKb": 0,
                                    "capacityInUseInKb": 0,
                                    "maxCapacityInKb": 0
                                  },
                                  "dataLayout": "string",
                                  "replicationCapacityMaxRatio": "string",
                                  "mediaType": "HDD",
                                  "mediaTypeFromDiskType": "SSD",
                                  "disk_list": [
                                    {
                                      "id": "string",
                                      "name": "string",
                                      "errorState": "string",
                                      "sdsId": "string",
                                      "deviceState": "string",
                                      "capacityLimitInKb": 0,
                                      "maxCapacityInKb": 0,
                                      "storagePoolId": "string",
                                      "deviceCurrentPathName": "string",
                                      "deviceOriginalPathName": "string",
                                      "serialNumber": "string",
                                      "vendorName": "string",
                                      "modelName": "string"
                                    }
                                  ],
                                  "volume_list": [
                                    {
                                      "id": "string",
                                      "name": "string",
                                      "volumeType": "string",
                                      "storagePoolId": "string",
                                      "dataLayout": "string",
                                      "compressionMethod": "string",
                                      "sizeInKb": 0,
                                      "mappedSdcInfo": [
                                        {
                                          "sdcIp": "string",
                                          "sdcId": "string",
                                          "limitBwInMbps": 0,
                                          "limitIops": 0
                                        }
                                      ]
                                    }
                                  ],
                                  "fglAccpId": "string",
                                  "rebalanceIoPriorityAppBwPerDeviceThresholdInKbps": 0
                                }
                              ],
                              "sds_list": [
                                {
                                  "id": "string",
                                  "name": "string",
                                  "port": 0,
                                  "protectionDomainId": "string",
                                  "faultSetId": "string",
                                  "softwareVersionInfo": "string",
                                  "sdsState": "string",
                                  "membershipState": "string",
                                  "mdmConnectionState": "string",
                                  "drlMode": "string",
                                  "maintenanceState": "string",
                                  "perfProfile": "string",
                                  "onVmWare": true,
                                  "ipList": [
                                    {
                                      "ip": "string",
                                      "role": "string"
                                    }
                                  ]
                                }
                              ],
                              "sdr_list": [
                                {
                                  "id": "string",
                                  "name": "string",
                                  "port": 0,
                                  "protectionDomainId": "string",
                                  "softwareVersionInfo": "string",
                                  "sdrState": "string",
                                  "membershipState": "string",
                                  "mdmConnectionState": "string",
                                  "maintenanceState": "string",
                                  "perfProfile": "string",
                                  "ipList": [
                                    {
                                      "ip": "string",
                                      "role": "string"
                                    }
                                  ]
                                }
                              ],
                              "acceleration_pool": [
                                {
                                  "id": "string",
                                  "name": "string",
                                  "protectionDomainId": "string",
                                  "mediaType": "string",
                                  "rfcache": true
                                }
                              ]
                            }
                          ],
                          "faultSetSettings": [
                            {
                              "protectionDomainId": "string",
                              "name": "string",
                              "id": "string"
                            }
                          ],
                          "attributes": {},
                          "vdsConfiguration": {
                            "datacenter": {
                              "vcenterId": "string",
                              "datacenterId": "string",
                              "datacenterName": "string"
                            },
                            "portGroupOption": "string",
                            "portGroupCreationOption": "string",
                            "vdsSettings": [
                              {
                                "id": "string",
                                "displayName": "string",
                                "name": "string",
                                "value": "string",
                                "portGroups": [
                                  {
                                    "id": "string",
                                    "displayName": "string",
                                    "vlan": 0,
                                    "name": "string",
                                    "value": "string"
                                  }
                                ]
                              }
                            ],
                            "vdsNetworkMtuSizeConfiguration": [
                              {
                                "id": "string",
                                "value": "string"
                              }
                            ],
                            "vdsNetworkMTUSizeConfiguration": [
                              {
                                "id": "string",
                                "value": "string"
                              }
                            ]
                          }
                        }
                      ],
                      "id": "string",
                      "displayName": "string",
                      "parametersMap": {}
                    }
                  ],
                  "brownfield": true,
                  "puppetCertName": "string",
                  "managementIpAddress": "string",
                  "serialNumber": "string",
                  "asmGUID": "string",
                  "cloned": true,
                  "configFile": "string",
                  "manageFirmware": true,
                  "instances": 0,
                  "refId": "string",
                  "ip": "string",
                  "osPuppetCertName": "string",
                  "clonedFromAsmGuid": "string"
                },
                "category": "string",
                "createdBy": "string",
                "attachments": [
                  "string"
                ],
                "id": "string",
                "licenseRepository": {},
                "templateType": "string",
                "originalTemplateId": "string",
                "inConfiguration": true,
                "configuration": {
                  "id": "string",
                  "categories": [
                    {
                      "id": "string",
                      "displayName": "string",
                      "deviceType": "string",
                      "parameters": [
                        {
                          "id": "string",
                          "value": "string",
                          "displayName": "string",
                          "type": "string",
                          "toolTip": "string",
                          "required": true,
                          "hideFromTemplate": true,
                          "deviceType": "string",
                          "dependencies": [
                            {
                              "dependencyTarget": "string",
                              "dependencyValue": "string"
                            }
                          ],
                          "group": "string",
                          "readOnly": true,
                          "generated": true,
                          "infoIcon": true,
                          "step": 0,
                          "maxLength": 0,
                          "min": 0,
                          "max": 0,
                          "networks": [
                            {
                              "id": "string",
                              "name": "string",
                              "description": "string",
                              "type": "HYPERVISOR_MANAGEMENT",
                              "vlanId": 0,
                              "staticNetworkConfiguration": {
                                "ipAddress": "string",
                                "subnet": "string",
                                "gateway": "string",
                                "primaryDns": "string",
                                "secondaryDns": "string",
                                "dnsSuffix": "string",
                                "ipRange": [
                                  {
                                    "startingIp": "string",
                                    "endingIp": "string",
                                    "id": "string",
                                    "role": "sdconly"
                                  }
                                ],
                                "staticRoute": [
                                  {
                                    "staticRouteSourceNetworkId": "string",
                                    "staticRouteDestinationNetworkId": "string",
                                    "subnetMask": "string",
                                    "destinationIpAddress": "string"
                                  }
                                ],
                                "staticRoutes": [
                                  {
                                    "staticRouteSourceNetworkId": "string",
                                    "staticRouteDestinationNetworkId": "string",
                                    "subnetMask": "string",
                                    "destinationIpAddress": "string"
                                  }
                                ]
                              },
                              "destinationIpAddress": "string",
                              "static": true,
                              "createdDate": "2019-08-24T14:15:22Z",
                              "createdBy": "string",
                              "updatedDate": "2019-08-24T14:15:22Z",
                              "updatedBy": "string",
                              "link": {
                                "rel": "string",
                                "href": "string",
                                "title": "string",
                                "type": "string"
                              }
                            }
                          ],
                          "options": [
                            {
                              "id": "string",
                              "name": "string",
                              "dependencies": [
                                {
                                  "dependencyTarget": "string",
                                  "dependencyValue": "string"
                                }
                              ],
                              "attributes": {}
                            }
                          ],
                          "optionsSortable": true
                        }
                      ],
                      "parameterMap": {}
                    }
                  ],
                  "settingsMap": {},
                  "categoriesMap": {}
                },
                "serverCount": 0,
                "storageCount": 0,
                "clusterCount": 0,
                "serviceCount": 0,
                "switchCount": 0,
                "vmCount": 0,
                "brownfieldTemplateType": "Ready",
                "networks": [
                  {
                    "id": "string",
                    "name": "string",
                    "description": "string",
                    "type": "HYPERVISOR_MANAGEMENT",
                    "vlanId": 0,
                    "staticNetworkConfiguration": {
                      "ipAddress": "string",
                      "subnet": "string",
                      "gateway": "string",
                      "primaryDns": "string",
                      "secondaryDns": "string",
                      "dnsSuffix": "string",
                      "ipRange": [
                        {
                          "startingIp": "string",
                          "endingIp": "string",
                          "id": "string",
                          "role": "sdconly"
                        }
                      ],
                      "staticRoute": [
                        {
                          "staticRouteSourceNetworkId": "string",
                          "staticRouteDestinationNetworkId": "string",
                          "subnetMask": "string",
                          "destinationIpAddress": "string"
                        }
                      ],
                      "staticRoutes": [
                        {
                          "staticRouteSourceNetworkId": "string",
                          "staticRouteDestinationNetworkId": "string",
                          "subnetMask": "string",
                          "destinationIpAddress": "string"
                        }
                      ]
                    },
                    "destinationIpAddress": "string",
                    "static": true,
                    "createdDate": "2019-08-24T14:15:22Z",
                    "createdBy": "string",
                    "updatedDate": "2019-08-24T14:15:22Z",
                    "updatedBy": "string",
                    "link": {
                      "rel": "string",
                      "href": "string",
                      "title": "string",
                      "type": "string"
                    }
                  }
                ],
                "blockServiceOperationsMap": {},
                "cachedParameterMap": {},
                "cachedComponentTypeMap": {},
                "networksMap": {},
                "useDefaultCatalog": true
              }
            ]
          },
          "licenseRepositoryId": "string",
          "noOp": true,
          "firmwareInit": true,
          "disruptiveFirmware": true,
          "preconfigureSVM": true,
          "preconfigureSVMAndUpdate": true,
          "servicesDeployed": "Unknown",
          "precalculatedDeviceHealth": "green",
          "lifecycleModeReasons": [
            "Service is in Lifecycle mode from previous release for an unknown reason"
          ],
          "canMigratevCLSVMs": true,
          "lifecycleMode": true,
          "scaleUp": true,
          "configurationChange": true,
          "allDeploymentDevicesBrownfieldStatus": "NEWLY_AVAILABLE",
          "operationType": "NONE",
          "operationStatus": "Starting",
          "operationData": "string",
          "deploymentValidationResponse": {
            "nodes": 0,
            "storagePools": 0,
            "drivesPerStoragePool": 0,
            "maxScalability": 0,
            "virtualMachines": 0,
            "numberOfServiceVolumes": 0,
            "canDeploy": true,
            "warningMessage": "string",
            "storagePoolDiskType": [
              "string"
            ],
            "hostnames": [
              "string"
            ],
            "newNodeDiskTypes": [
              "string"
            ],
            "noOfFaultSets": 0,
            "nodesPerFaultSet": 0,
            "protectionDomain": "string",
            "diskTypeMismatch": true
          },
          "currentStepCount": "string",
          "totalNumOfSteps": "string",
          "currentStepMessage": "string",
          "customImage": "string",
          "originalDeploymentId": "string"
        }
      },
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "firmwareRepository": {
          "$ref": "#/definitions/FirmwareRepository"
        },
        "assignedUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "allUsersAllowed": {
          "type": "boolean"
        },
        "teardown": {
          "type": "boolean"
        },
        "templateValid": {
          "type": "boolean"
        },
        "brownfield": {
          "type": "boolean"
        },
        "vds": {
          "type": "boolean"
        },
        "deploymentHealthStatusType": {
          "type": "string",
          "enum": [
            "green",
            "yellow",
            "red",
            "cancelled"
          ]
        },
        "canMigrate": {
          "type": "boolean"
        },
        "scheduleDate": {
          "type": "string"
        },
        "numberOfDeployments": {
          "type": "integer"
        },
        "firmwareRepositoryId": {
          "type": "string"
        },
        "deploymentName": {
          "type": "string"
        },
        "deploymentDescription": {
          "type": "string"
        },
        "serviceTemplate": {
          "$ref": "#/definitions/ServiceTemplate"
        },
        "deploymentDevice": {
          "$ref": "#/definitions/DeploymentDevice"
        },
        "vms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VM"
          }
        },
        "jobDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsmDeployerLogEntry"
          }
        },
        "retry": {
          "type": "boolean"
        },
        "updateServerFirmware": {
          "type": "boolean"
        },
        "individualTeardown": {
          "type": "boolean"
        },
        "overallDeviceHealth": {
          "type": "string",
          "enum": [
            "green",
            "yellow",
            "red",
            "servicemode",
            "unknown"
          ]
        },
        "compliant": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Pending",
            "In Progress",
            "Deployed",
            "Incomplete",
            "Lifecycle Mode",
            "Error",
            "Cancelled",
            "Cancelling",
            "Firmware Updating",
            "Post Deployment Software Updating",
            "Service Mode"
          ]
        },
        "id": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "DeploymentValid": {
          "$ref": "#/definitions/DeploymentValid"
        },
        "teardownAfterCancel": {
          "type": "boolean"
        },
        "removeService": {
          "type": "boolean"
        },
        "deploymentScheduledDate": {
          "type": "string",
          "format": "date-time"
        },
        "deploymentStartedDate": {
          "type": "string",
          "format": "date-time"
        },
        "deploymentFinishedDate": {
          "type": "string",
          "format": "date-time"
        },
        "useDefaultCatalog": {
          "type": "boolean"
        },
        "licenseRepository": {
          "$ref": "#/definitions/SoftwareLicenseRepository"
        },
        "licenseRepositoryId": {
          "type": "string"
        },
        "noOp": {
          "type": "boolean"
        },
        "firmwareInit": {
          "type": "boolean"
        },
        "disruptiveFirmware": {
          "type": "boolean"
        },
        "preconfigureSVM": {
          "type": "boolean"
        },
        "preconfigureSVMAndUpdate": {
          "type": "boolean"
        },
        "servicesDeployed": {
          "type": "string",
          "enum": [
            "Unknown",
            "Cloudlink",
            "DAS Cache"
          ]
        },
        "precalculatedDeviceHealth": {
          "type": "string",
          "enum": [
            "green",
            "yellow",
            "red",
            "servicemode",
            "unknown"
          ]
        },
        "lifecycleModeReasons": {
          "type": "string",
          "enum": [
            "Service is in Lifecycle mode from previous release for an unknown reason",
            "Target RCM is minimal and is not complete",
            "Compliance file Out of Date",
            "vCLS volumes are on node(s) local storage",
            "Deployment Validation failed",
            "NSX is configured on a node",
            "Node's contain non-NVMe disk drives with Raw Device Mapping",
            "One or more nodes contain H755 PERC controllers"
          ]
        },
        "canMigratevCLSVMs": {
          "type": "boolean"
        },
        "lifecycleMode": {
          "type": "boolean"
        },
        "scaleUp": {
          "type": "boolean"
        },
        "configurationChange": {
          "type": "boolean"
        },
        "allDeploymentDevicesBrownfieldStatus": {
          "type": "string",
          "enum": [
            "NEWLY_AVAILABLE",
            "NOT_APPLICABLE",
            "UNAVAILABLE_RELATED_SERVER_NOT_IN_INVENTORY",
            "UNAVAILABLE_RELATED_SERVER_IN_EXISTING_SERVICE",
            "UNAVAILABLE_RELATED_SERVER_NOT_MANAGED_OR_RESERVED",
            "UNAVAILABLE_NOT_IN_INVENTORY",
            "UNAVAILABLE_NOT_MANAGED_OR_RESERVED",
            "UNAVAILABLE_IN_EXISTING_SERVICE",
            "UNAVAILABLE_THIS_DEVICE_AND_RELATED_SERVER_NOT_IN_INVENTORY",
            "UNAVAILABLE_THIS_DEVICE_AND_RELATED_SERVER_NOT_MANAGED_OR_RESERVED",
            "UNAVAILABLE_THIS_DEVICE_NOT_MANAGED_OR_RESERVED_AND_RELATED_SERVER_NOT_IN_INVENTORY",
            "UNAVAILABLE_THIS_DEVICE_NOT_MANAGED_OR_RESERVED_AND_RELATED_SERVER_IN_EXISTING_SERVICE",
            "UNAVAILABLE_THIS_DEVICE_NOT_IN_INVENTORY_AND_RELATED_SERVER_NOT_MANAGED_OR_RESERVED",
            "UNAVAILABLE_THIS_DEVICE_NOT_IN_INVENTORY_AND_RELATED_SERVER_IN_EXISTING_SERVICE",
            "UNAVAILABLE_MISSING_OS_INVENTORY",
            "UNAVAILABLE_TIMEOUT_OS_INVENTORY",
            "AVAILABLE",
            "CURRENTLY_DEPLOYED_IN_BROWNFIELD",
            "UNAVAILABLE_REMOVED_FROM_SERVICE",
            "LIFECYCLE_MODE"
          ]
        },
        "operationType": {
          "type": "string",
          "enum": [
            "NONE",
            "CREATE",
            "SCALEUP",
            "RETRY",
            "TEARDOWN",
            "UPDATE_SERVICE_DETAILS",
            "REMOVE_DRIVE",
            "ADD_DRIVE",
            "SERVICE_MODE",
            "SERVICE_MODE_EVACUATE",
            "SERVICE_MODE_PROTECTED",
            "UPDATE_FIRMWARE",
            "MIGRATE_VCLS_VMS"
          ]
        },
        "operationStatus": {
          "type": "string",
          "enum": [
            "Starting",
            "In Progress",
            "Successful",
            "Failed",
            "Cancelled",
            "Abnormal Termination"
          ]
        },
        "operationData": {
          "type": "string"
        },
        "deploymentValidationResponse": {
          "$ref": "#/definitions/DeploymentValidationResponse"
        },
        "currentStepCount": {
          "type": "string"
        },
        "totalNumOfSteps": {
          "type": "string"
        },
        "currentStepMessage": {
          "type": "string"
        },
        "customImage": {
          "type": "string"
        },
        "originalDeploymentId": {
          "type": "string"
        },
        "currentBatchCount": {
          "type": "string"
        },
        "totalBatchCount": {
          "type": "string"
        }
      }
    },
    "DeploymentDevice": {
      "title": "DeploymentDevice",
      "type": "object",
      "description": "DeploymentDevice",
      "properties": {
        "refId": {
          "type": "string"
        },
        "deviceType": {
          "type": "string",
          "enum": [
            "Server",
            "Rack Server",
            "Blade Server",
            "FX Server",
            "Tower Server",
            "Storage Group",
            "EM",
            "OME",
            "IPI Cabinet",
            "Cloudlink Center",
            "Powerflex Presentation Server",
            "Switch",
            "Virtual Machine",
            "VM Manager",
            "PowerFlex Gateway",
            "Unknown"
          ]
        },
        "serviceTag": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "statusMessage": {
          "type": "string"
        },
        "healthMessage": {
          "type": "string"
        },
        "brownfield": {
          "type": "boolean"
        },
        "componentId": {
          "type": "string"
        },
        "brownfieldStatus": {
          "type": "string",
          "enum": [
            "NEWLY_AVAILABLE",
            "NOT_APPLICABLE",
            "UNAVAILABLE_RELATED_SERVER_NOT_IN_INVENTORY",
            "UNAVAILABLE_RELATED_SERVER_IN_EXISTING_SERVICE",
            "UNAVAILABLE_RELATED_SERVER_NOT_MANAGED_OR_RESERVED",
            "UNAVAILABLE_NOT_IN_INVENTORY",
            "UNAVAILABLE_NOT_MANAGED_OR_RESERVED",
            "UNAVAILABLE_IN_EXISTING_SERVICE",
            "UNAVAILABLE_THIS_DEVICE_AND_RELATED_SERVER_NOT_IN_INVENTORY",
            "UNAVAILABLE_THIS_DEVICE_AND_RELATED_SERVER_NOT_MANAGED_OR_RESERVED",
            "UNAVAILABLE_THIS_DEVICE_NOT_MANAGED_OR_RESERVED_AND_RELATED_SERVER_NOT_IN_INVENTORY",
            "UNAVAILABLE_THIS_DEVICE_NOT_MANAGED_OR_RESERVED_AND_RELATED_SERVER_IN_EXISTING_SERVICE",
            "UNAVAILABLE_THIS_DEVICE_NOT_IN_INVENTORY_AND_RELATED_SERVER_NOT_MANAGED_OR_RESERVED",
            "UNAVAILABLE_THIS_DEVICE_NOT_IN_INVENTORY_AND_RELATED_SERVER_IN_EXISTING_SERVICE",
            "UNAVAILABLE_MISSING_OS_INVENTORY",
            "UNAVAILABLE_TIMEOUT_OS_INVENTORY",
            "AVAILABLE",
            "CURRENTLY_DEPLOYED_IN_BROWNFIELD",
            "UNAVAILABLE_REMOVED_FROM_SERVICE",
            "LIFECYCLE_MODE"
          ]
        },
        "deviceHealth": {
          "type": "string",
          "enum": [
            "green",
            "yellow",
            "red",
            "servicemode",
            "unknown"
          ]
        },
        "compliantState": {
          "type": "string",
          "enum": [
            "NA",
            "compliant",
            "noncompliant",
            "unknown",
            "updaterequired"
          ]
        },
        "statusEndTime": {
          "type": "string"
        },
        "statusStartTime": {
          "type": "string"
        },
        "logDump": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Pending",
            "In Progress",
            "Deployed",
            "Incomplete",
            "Lifecycle Mode",
            "Error",
            "Cancelled",
            "Cancelling",
            "Firmware Updating",
            "Post Deployment Software Updating",
            "Service Mode"
          ]
        },
        "refType": {
          "type": "string"
        },
        "deviceGroupName": {
          "type": "string"
        },
        "currentIpAddress": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "cloudLink": {
          "type": "boolean"
        },
        "dasCache": {
          "type": "boolean"
        },
        "deviceState": {
          "type": "string",
          "enum": [
            "Ready",
            "Updating",
            "Update Failed",
            "Configuration Error",
            "Pending Configuration Template",
            "Pending Delete",
            "Pending Service Mode",
            "Pending",
            "Discovery Failed",
            "Deployment Error",
            "Delete Failed",
            "Deleted",
            "Deployed",
            "Deploying",
            "Cancelled",
            "Service Mode"
          ]
        },
        "puppetCertName": {
          "type": "string"
        }
      }
    },
    "DeploymentFilterResponse": {
      "title": "DeploymentFilterResponse",
      "type": "object",
      "description": "DeploymentFilterResponse",
      "properties": {
        "numberRequestedServers": {
          "type": "integer",
          "format": "int32"
        },
        "numberSelectedServers": {
          "type": "integer",
          "format": "int32"
        },
        "failedPoolId": {
          "type": "string"
        },
        "failedPoolName": {
          "type": "string"
        },
        "selectedServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedServer"
          }
        },
        "rejectedServers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RejectedServer"
          }
        }
      }
    },
    "DeviceDiscoveryRequest": {
      "title": "DeviceDiscoveryRequest",
      "type": "object",
      "description": "DeviceDiscoveryRequest",
      "properties": {
        "deviceType": {
          "type": "string"
        },
        "deviceStartIp": {
          "type": "string"
        },
        "deviceServerCredRef": {
          "type": "string"
        },
        "deviceChassisCredRef": {
          "type": "string"
        },
        "deviceSwitchCredRef": {
          "type": "string"
        },
        "deviceSCVMMCredRef": {
          "type": "string"
        },
        "deviceStorageCredRef": {
          "type": "string"
        },
        "deviceVCenterCredRef": {
          "type": "string"
        },
        "deviceEMCredRef": {
          "type": "string"
        },
        "unmanaged": {
          "type": "boolean"
        },
        "reserved": {
          "type": "boolean"
        },
        "serverPoolId": {
          "type": "string"
        },
        "snmpConfigure": {
          "type": "boolean"
        },
        "config": {
          "type": "string"
        },
        "deviceBMCServerCredRef": {
          "type": "string"
        },
        "deviceEndIp": {
          "type": "string"
        }
      }
    },
    "DeviceDiscoveryRequests": {
      "title": "DeviceDiscoveryRequests",
      "type": "object",
      "description": "DeviceDiscoveryRequests\n\n**Note:** For JSON, the discoverIpRangeDeviceRequests property begins with a capital letter (DiscoverIpRangeDeviceRequests).",
      "properties": {
        "discoverIpRangeDeviceRequests": {
          "$ref": "#/definitions/DeviceDiscoveryRequest"
        }
      }
    },
    "DeviceGroup": {
      "title": "DeviceGroup",
      "type": "object",
      "description": "DeviceGroup",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "groupDescription": {
          "type": "string"
        },
        "managedDeviceList": {
          "$ref": "#/definitions/ManagedDeviceList"
        },
        "groupUserList": {
          "$ref": "#/definitions/GroupUserList"
        },
        "groupSeqId": {
          "type": "integer",
          "format": "int64"
        },
        "groupName": {
          "type": "string"
        },
        "link": {
          "$ref": "#/definitions/Link"
        },
        "createdBy": {
          "type": "string"
        }
      },
      "required": [
        "groupName"
      ]
    },
    "DeviceGroupList": {
      "title": "DeviceGroupList",
      "type": "object",
      "description": "DeviceGroupList",
      "properties": {
        "deviceGroup": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceGroup"
          }
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      }
    },
    "dhcpSettings": {
      "title": "dhcpSettings",
      "type": "object",
      "properties": {
        "subnet": {
          "type": "string"
        },
        "netmask": {
          "type": "string"
        },
        "startingIpAddress": {
          "type": "string"
        },
        "endingIpAddress": {
          "type": "string"
        },
        "defaultLeaseTime": {
          "type": "integer"
        },
        "maxLeaseTime": {},
        "gateway": {
          "type": "string"
        },
        "dns": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "domain": {
          "type": "string"
        }
      },
      "description": "dhcpSettings"
    },
    "DiscoveryRequest": {
      "title": "DiscoveryRequest",
      "type": "object",
      "description": "DiscoveryRequest",
      "properties": {
        "devices": {
          "$ref": "#/definitions/DiscoveredDevices"
        },
        "statusMessage": {
          "type": "string"
        },
        "totalCount": {
          "type": "integer"
        },
        "discoveryRequestList": {
          "$ref": "#/definitions/DeviceDiscoveryRequests"
        },
        "link": {
          "$ref": "#/definitions/Link"
        },
        "status": {
          "type": "string",
          "enum": [
            "Pending",
            "Connected",
            "Unsupported",
            "Inprogress",
            "Success",
            "Failed to discover",
            "Error discovering",
            "Ignore device at this time"
          ]
        },
        "id": {
          "type": "string"
        }
      }
    },
    "DiscoveryResult": {
      "title": "DiscoveryResult",
      "type": "object",
      "description": "DiscoveryResult",
      "properties": {
        "refId": {
          "type": "string"
        },
        "deviceType": {
          "type": "string",
          "enum": [
            "Server",
            "Rack Server",
            "Blade Server",
            "FX Server",
            "Tower Server",
            "Storage Group",
            "EM",
            "OME",
            "IPI Cabinet",
            "Cloudlink Center",
            "Powerflex Presentation Server",
            "Switch",
            "VM Manager",
            "Virtual Machine",
            "PowerFlex Gateway",
            "Unknown"
          ]
        },
        "serviceTag": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "iomCount": {
          "type": "integer"
        },
        "serverCount": {
          "type": "integer"
        },
        "model": {
          "type": "string"
        },
        "serverType": {
          "type": "string"
        },
        "discoverDeviceType": {
          "type": "string",
          "enum": [
            "CMC",
            "CMC_FX2",
            "IDRAC7",
            "IDRAC8",
            "IDRAC9",
            "UNKNOWN",
            "SERVER",
            "VRTX",
            "VCENTER",
            "FORCE10",
            "FORCE10_S4810",
            "FORCE10_S5000",
            "FORCE10_S6000",
            "FORCE10_S4048",
            "FORCE10_S5048",
            "FORCE10IOM",
            "FX2_IOM",
            "DELL_IOM_84",
            "BROCADE",
            "POWERCONNECT",
            "POWERCONNECT_N3000",
            "POWERCONNECT_N4000",
            "CISCONEXUS",
            "SCVMM",
            "BMC",
            "EM",
            "SCALEIO",
            "OME",
            "IPI",
            "RHVM",
            "CLC",
            "PRESENTATION_SERVER",
            "DELLSWITCHOS10"
          ]
        },
        "firmwareDeviceInventories": {
          "$ref": "#/definitions/FirmwareDeviceInventory"
        },
        "statusMessage": {
          "type": "string"
        },
        "deviceRefId": {
          "type": "string"
        },
        "healthState": {
          "type": "string"
        },
        "healthStatusMsg": {
          "type": "string"
        },
        "parentJobId": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "config": {
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Pending",
            "Connected",
            "Unsupported",
            "Inprogress",
            "Success",
            "Failed to discover",
            "Error discovering",
            "Ignore device at this time"
          ]
        },
        "refType": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        }
      }
    },
    "emailServerConfig": {
      "title": "emailServerConfig",
      "type": "object",
      "properties": {
        "emailServerType": {
          "type": "string"
        },
        "emailServerIp": {
          "type": "string"
        },
        "emailServerPort": {
          "type": "string"
        },
        "emailSenderAddress": {
          "type": "string"
        },
        "emailUserName": {
          "type": "string"
        },
        "emailPassword": {
          "type": "string"
        },
        "emailRecipientAddress_1": {
          "type": "string"
        },
        "emailRecipientAddress_2": {
          "type": "string"
        },
        "emailRecipientAddress_3": {
          "type": "string"
        },
        "emailRecipientAddress_4": {
          "type": "string"
        },
        "emailRecipientAddress_5": {
          "type": "string"
        },
        "credentialId": {
          "type": "string"
        }
      },
      "description": "emailServerConfig"
    },
    "Enclosure": {
      "title": "Enclosure",
      "type": "object",
      "description": "Enclosure",
      "properties": {
        "fqdd": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "slotCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Fabric": {
      "title": "Fabric",
      "type": "object",
      "description": "Fabric",
      "properties": {
        "maxPartitions": {
          "type": "integer",
          "format": "int32"
        },
        "partitioned": {
          "type": "boolean"
        },
        "nictype": {
          "type": "string"
        },
        "redundancy": {
          "type": "boolean"
        },
        "fabrictype": {
          "type": "string"
        },
        "nports": {
          "type": "integer",
          "format": "int32"
        },
        "nictypeSource": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "interfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Interface"
          }
        },
        "id": {
          "type": "string"
        },
        "card_index": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "fc_interface": {
      "title": "fc_interface",
      "type": "object",
      "properties": {
        "fqdd": {
          "type": "string"
        },
        "wwpn": {
          "type": "string"
        },
        "activeZoneset": {
          "type": "string"
        },
        "connectedZones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "connectedSwitch": {
          "type": "string"
        }
      },
      "description": "fc_interface"
    },
    "FirmwareComplianceComponent": {
      "title": "FirmwareComplianceComponent",
      "type": "object",
      "description": "FirmwareComplianceComponent",
      "properties": {
        "embeddedRepoComponents": {
          "$ref": "#/definitions/SoftwareComponent"
        },
        "defaultRepoComponents": {
          "$ref": "#/definitions/SoftwareComponent"
        },
        "compliantState": {
          "type": "string",
          "enum": [
            "NA",
            "compliant",
            "noncompliant",
            "unknown",
            "updaterequired"
          ]
        }
      }
    },
    "FirmwareComplianceReport": {
      "title": "FirmwareComplianceReport",
      "type": "object",
      "description": "FirmwareComplianceReport",
      "properties": {
        "serviceTag": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "firmwareRepositoryName": {
          "type": "string"
        },
        "firmwareComplianceReportComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirmwareComplianceReportComponent"
          }
        },
        "compliant": {
          "type": "boolean"
        },
        "deviceType": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "available": {
          "type": "boolean"
        },
        "managedState": {
          "type": "string",
          "enum": [
            "managed",
            "unmanaged",
            "reserved"
          ]
        },
        "embededRepo": {
          "type": "boolean"
        },
        "deviceState": {
          "type": "string",
          "enum": [
            "Ready",
            "Updating",
            "Update Failed",
            "Configuration Error",
            "Pending Configuration Template",
            "Pending Delete",
            "Pending Service Mode",
            "Pending",
            "Discovery Failed",
            "Deployment Error",
            "Delete Failed",
            "Deleted",
            "Deployed",
            "Deploying",
            "Cancelled",
            "Service Mode"
          ]
        },
        "id": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "canUpdate": {
          "type": "boolean"
        }
      }
    },
    "FirmwareDeviceInventory": {
      "title": "FirmwareDeviceInventory",
      "type": "object",
      "description": "FirmwareDeviceInventory",
      "properties": {
        "deviceInventory": {
          "$ref": "#/definitions/ManagedDevice"
        },
        "discoveryResult": {
          "$ref": "#/definitions/DiscoveryResult"
        },
        "fqdd": {
          "type": "string"
        },
        "componentID": {
          "type": "string"
        },
        "deviceID": {
          "type": "string"
        },
        "vendorID": {
          "type": "string"
        },
        "subdeviceID": {
          "type": "string"
        },
        "subvendorID": {
          "type": "string"
        },
        "ipaddress": {
          "type": "string"
        },
        "firmwareComplianceComponents": {
          "$ref": "#/definitions/FirmwareComplianceComponent"
        },
        "servicetag": {
          "type": "string"
        },
        "parent_job_id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time"
        },
        "componentType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "operatingSystem": {
          "type": "string"
        },
        "sourceType": {
          "type": "string",
          "enum": [
            "Catalog",
            "Device"
          ]
        }
      }
    },
    "FirmwareInventory": {
      "title": "FirmwareInventory",
      "type": "object",
      "description": "FirmwareInventory",
      "properties": {
        "deviceRef": {
          "type": "string"
        },
        "firmwareId": {
          "type": "string"
        },
        "fqdd": {
          "type": "string"
        },
        "componentID": {
          "type": "string"
        },
        "deviceID": {
          "type": "string"
        },
        "vendorID": {
          "type": "string"
        },
        "subdeviceID": {
          "type": "string"
        },
        "subvendorID": {
          "type": "string"
        },
        "isbPresent": {
          "type": "boolean"
        },
        "updateable": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time"
        },
        "componentType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "FirmwareRepository": {
      "title": "FirmwareRepository",
      "type": "object",
      "description": "FirmwareRepository",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "softwareComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SoftwareComponent"
          }
        },
        "sourceLocation": {
          "type": "string"
        },
        "sourceType": {
          "type": "string"
        },
        "diskLocation": {
          "type": "string"
        },
        "md5Hash": {
          "type": "string"
        },
        "downloadStatus": {
          "type": "string",
          "enum": [
            "pending",
            "copying",
            "error",
            "available"
          ]
        },
        "softwareBundles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SoftwareBundle"
          }
        },
        "bundleCount": {
          "type": "integer"
        },
        "defaultCatalog": {
          "type": "boolean"
        },
        "componentCount": {
          "type": "integer"
        },
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        },
        "username": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "embedded": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "copying",
            "errors",
            "available"
          ]
        },
        "userBundleCount": {
          "type": "integer",
          "format": "int32"
        },
        "minimal": {
          "type": "boolean"
        },
        "downloadProgress": {
          "type": "integer",
          "format": "int32"
        },
        "extractProgress": {
          "type": "integer",
          "format": "int32"
        },
        "fileSizeInGigabytes": {
          "type": "number",
          "format": "float"
        },
        "signedKeySourceLocation": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        },
        "rcmapproved": {
          "type": "boolean"
        }
      }
    },
    "FirmwareUpdateRequest": {
      "title": "FirmwareUpdateRequest",
      "type": "object",
      "description": "FirmwareUpdateRequest",
      "properties": {
        "updateType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "DEVICE",
            "GATEWAY"
          ]
        },
        "idList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scheduleType": {
          "type": "string"
        },
        "exitMaintenanceMode": {
          "type": "boolean"
        },
        "scheduleDate": {
          "type": "string"
        },
        "deviceIdToUpdateList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "option": {
          "type": "string"
        },
        "reconfigure": {
          "type": "boolean"
        }
      }
    },
    "GroupUser": {
      "title": "GroupUser",
      "type": "object",
      "description": "GroupUser",
      "properties": {
        "userName": {
          "type": "string"
        },
        "userSeqId": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "role": {
          "type": "string"
        }
      }
    },
    "GroupUserList": {
      "title": "GroupUserList",
      "type": "object",
      "description": "GroupUserList",
      "properties": {
        "totalRecords": {
          "type": "integer",
          "format": "int32"
        },
        "groupUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupUser"
          }
        }
      }
    },
    "Interface": {
      "title": "Interface",
      "type": "object",
      "description": "Interface",
      "properties": {
        "fqdd": {
          "type": "string"
        },
        "maxPartitions": {
          "type": "integer"
        },
        "partitioned": {
          "type": "boolean"
        },
        "partitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Partition"
          }
        },
        "nictype": {
          "type": "string"
        },
        "redundancy": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "allNetworks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IpAddress": {
      "title": "IpAddress",
      "type": "object",
      "description": "IpAddress",
      "properties": {
        "ipRangeId": {
          "type": "string"
        },
        "ipasLong": {
          "type": "integer",
          "format": "int64"
        },
        "ipaddress": {
          "type": "string"
        },
        "usageId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      },
      "required": [
        "usageId",
        "state",
        "role"
      ]
    },
    "IpRange": {
      "title": "IpRange",
      "type": "object",
      "description": "IpRange",
      "properties": {
        "startingIp": {
          "type": "string"
        },
        "endingIp": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "sdconly",
            "sdsonly",
            "sdsorsdc"
          ]
        }
      },
      "required": [
        "startingIp",
        "endingIp"
      ]
    },
    "LocalizedLogMessage": {
      "title": "LocalizedLogMessage",
      "type": "object",
      "description": "LocalizedLogMessage",
      "properties": {
        "logId": {
          "type": "integer",
          "format": "int64"
        },
        "messageCode": {
          "type": "string"
        },
        "bundleName": {
          "type": "string"
        },
        "category": {
          "type": "string",
          "enum": [
            "SECURITY",
            "APPLIANCE_CONFIGURATION",
            "TEMPLATE_CONFIGURATION",
            "NETWORK_CONFIGURATION",
            "INFRASTRUCTURE_OR_HARDWARE_CONFIGURATION",
            "INFRASTRUCTURE_OR_HARDWARE_MONITORING",
            "DEPLOYMENT",
            "LICENSING",
            "SERVICEMODE",
            "MISCELLANEOUS"
          ]
        },
        "severity": {
          "type": "string",
          "enum": [
            "CRITICAL",
            "ERROR",
            "WARNING",
            "INFO"
          ]
        },
        "userName": {
          "type": "string"
        },
        "agentId": {
          "type": "string"
        },
        "correlationId": {
          "type": "integer"
        },
        "timeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "localizedMessage": {
          "type": "string"
        }
      }
    },
    "LogicalNetworkIdentityInventory": {
      "title": "LogicalNetworkIdentityInventory",
      "type": "object",
      "description": "LogicalNetworkIdentityInventory",
      "properties": {
        "isbPresent": {
          "type": "boolean"
        },
        "identityType": {
          "type": "string",
          "enum": [
            "UNKOWN",
            "WWPN",
            "WWNN",
            "ISCI_MAC",
            "FIPS_MAC",
            "LAN_MAC",
            "IQN_INITIATOR",
            "IP_INITIATOR",
            "BOOTLUN",
            "IQN_TARGET",
            "IP_TARGET",
            "WWPN_TARGET"
          ]
        },
        "permanentIdentity": {
          "type": "string"
        },
        "currentIdentity": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "LogicalNetworkInterface": {
      "title": "LogicalNetworkInterface",
      "type": "object",
      "description": "LogicalNetworkInterface",
      "properties": {
        "vendorName": {
          "type": "string"
        },
        "fqdd": {
          "type": "string"
        },
        "isbPresent": {
          "type": "boolean"
        },
        "vendorId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "identityList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalNetworkIdentityInventory"
          }
        },
        "productId": {
          "type": "string"
        },
        "networkMode": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "LAN",
            "ISCI",
            "FCOE"
          ]
        },
        "relativeBandwidthWeight": {
          "type": "integer",
          "format": "int32"
        },
        "maxBandwidth": {
          "type": "number",
          "format": "double"
        },
        "portId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "ManagedDevice": {
      "title": "ManagedDevice",
      "type": "object",
      "description": "ManagedDevice",
      "properties": {
        "refId": {
          "type": "string"
        },
        "deviceType": {
          "type": "string",
          "enum": [
            "Server",
            "Rack Server",
            "Blade Server",
            "FX Server",
            "Tower Server",
            "Storage Group",
            "EM",
            "OME",
            "IPI Cabinet",
            "Cloudlink Center",
            "PowerFlex Presentation Server",
            "Switch",
            "VM Manager",
            "Virtual Machine",
            "PowerFlex Gateway",
            "Unknown"
          ]
        },
        "serviceTag": {
          "type": "string"
        },
        "health": {
          "type": "string",
          "enum": [
            "green",
            "yellow",
            "red",
            "servicemode",
            "unkown"
          ]
        },
        "ipAddress": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "infraTemplateDate": {
          "type": "string",
          "format": "date-time"
        },
        "infraTemplateId": {
          "type": "string"
        },
        "serverTemplateDate": {
          "type": "string",
          "format": "date-time"
        },
        "serverTemplateId": {
          "type": "string"
        },
        "inventoryDate": {
          "type": "string",
          "format": "date-time"
        },
        "complianceCheckDate": {
          "type": "string",
          "format": "date-time"
        },
        "discoveredDate": {
          "type": "string",
          "format": "date-time"
        },
        "deviceGroupList": {
          "$ref": "#/definitions/DeviceGroupList"
        },
        "detailLink": {
          "$ref": "#/definitions/Link"
        },
        "operatingSystem": {
          "type": "string"
        },
        "numberOfCPUs": {
          "type": "integer",
          "format": "int32"
        },
        "memoryInGB": {
          "type": "integer",
          "format": "int32"
        },
        "credId": {
          "type": "string"
        },
        "nics": {
          "type": "integer",
          "format": "int32"
        },
        "discoverDeviceType": {
          "type": "string",
          "enum": [
            "CMC",
            "CMC_FX2",
            "IDRAC7",
            "IDRAC8",
            "IDRAC9",
            "UNKNOWN",
            "SERVER",
            "VRTX",
            "VCENTER",
            "FORCE10",
            "FORCE10_S4810",
            "FORCE10_S5000",
            "FORCE10_S6000",
            "FORCE10_S4048",
            "FORCE10_IOM",
            "FX2_IOM",
            "DELL_IOM_84",
            "BROCADE",
            "POWERCONNECT",
            "POWERCONNECT_N3000",
            "POWERCONNECT_F4000",
            "CISCONEXUS",
            "SCVMM",
            "BMC",
            "EM",
            "SCALEIO",
            "OME",
            "IPI",
            "RHVM",
            "CLC",
            "PRESENTATION_SERVER",
            "DELLSWITCHOS10"
          ]
        },
        "failuresCount": {
          "type": "integer",
          "format": "int32"
        },
        "chassisId": {
          "type": "string"
        },
        "facts": {
          "type": "string"
        },
        "statusMessage": {
          "type": "string",
          "enum": [
            "Ready",
            "Updating",
            "Update Failed",
            "Configuration Error",
            "Pending Configuration Template",
            "Pending Delete",
            "Pending Service Mode",
            "Pending",
            "Discovery Failed",
            "Deployment Error",
            "Delete Failed",
            "Deleted",
            "Deployed",
            "Deploying",
            "Cancelled",
            "Service Mode"
          ]
        },
        "manufacturer": {
          "type": "string"
        },
        "cpuType": {
          "type": "string"
        },
        "healthMessage": {
          "type": "string"
        },
        "config": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "refType": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "Ready",
            "Updating",
            "Updated Failed",
            "Configuration Error",
            "Pending Configuration Template",
            "Pending Delete",
            "Pending Service Mode",
            "Pending",
            "Discovery Failed",
            "Deployment Error",
            "Delete Failed",
            "Deleted",
            "Deployed",
            "Deploying",
            "Cancelled",
            "Service Mode"
          ]
        },
        "displayName": {
          "type": "string"
        },
        "currentIpAddress": {
          "type": "string"
        },
        "managedState": {
          "type": "string",
          "enum": [
            "managed",
            "unmanaged",
            "reserved"
          ]
        },
        "inUse": {
          "type": "boolean"
        },
        "serviceReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceReference"
          }
        },
        "firmwareName": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "compliance": {
          "type": "string",
          "enum": [
            "NA",
            "compliant",
            "noncompliant",
            "unknown",
            "updaterequired"
          ]
        },
        "parsedFacts": {
          "type": "string"
        },
        "osIpAddress": {
          "type": "string"
        },
        "osAdminCredential": {
          "type": "string"
        },
        "osImageType": {
          "type": "string"
        },
        "lastJobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceJobStatus"
          }
        },
        "puppetCertName": {
          "type": "string"
        },
        "svmAdminCredential": {
          "type": "string"
        },
        "svmName": {
          "type": "string"
        },
        "svmIpAddress": {
          "type": "string"
        },
        "svmImageType": {
          "type": "string"
        },
        "flexosMaintMode": {
          "type": "integer",
          "format": "int32"
        },
        "esxiMaintMode": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ManagedDeviceList": {
      "title": "ManagedDeviceList",
      "type": "object",
      "description": "ManagedDeviceList",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "managedDevices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedDevice"
          }
        },
        "paging": {
          "$ref": "#/definitions/Paging"
        }
      }
    },
    "MemoryInventory": {
      "title": "MemoryInventory",
      "type": "object",
      "description": "MemoryInventory",
      "properties": {
        "model": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "fqdd": {
          "type": "string"
        },
        "partNumber": {
          "type": "string"
        },
        "bankLabel": {
          "type": "string"
        },
        "currentOperatingSpeed": {
          "type": "integer"
        },
        "instanceID": {
          "type": "string"
        },
        "lastSystemInventoryTime": {
          "type": "string"
        },
        "manufactureDate": {
          "type": "string"
        },
        "memoryType": {
          "type": "string"
        },
        "primaryStatus": {
          "type": "string"
        },
        "rank": {
          "type": "string"
        },
        "speed": {
          "type": "integer"
        },
        "serialNumber": {
          "type": "string"
        },
        "lastUpdateTime": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "remainingRatedWriteEndurance": {
          "type": "string"
        }
      }
    },
    "Network": {
      "title": "Network",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "HYPERVISOR_MANAGEMENT",
            "HYPERVISOR_MIGRATION",
            "HYPERVISOR_CLUSTER_PRIVATE",
            "PUBLIC_LAN",
            "PRIVATE_LAN",
            "STORAGE_ISCSI_SAN",
            "STORAGE_FCOE_SAN",
            "OOB_OR_INFRASTRUCTURE_MANAGEMENT",
            "PXE",
            "FILESHARE",
            "FIP_SNOOPING",
            "VSAN",
            "HARDWARE_MANAGEMENT",
            "SCALEIO_MANAGEMENT",
            "SCALEIO_DATA",
            "SCALEIO_DATA_SDC",
            "SCALEIO_DATA_SDS",
            "SCALEIO_DATA_REPLICATION"
          ]
        },
        "vlanId": {
          "type": "integer",
          "format": "int32"
        },
        "staticNetworkConfiguration": {
          "$ref": "#/definitions/StaticNetworkConfiguration"
        },
        "destinationIpAddress": {
          "type": "string"
        },
        "static": {
          "type": "boolean"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "link": {
          "$ref": "#/definitions/Link"
        }
      },
      "description": "Network"
    },
    "NetworkConfiguration": {
      "title": "NetworkConfiguration",
      "type": "object",
      "description": "NetworkConfiguration",
      "properties": {
        "interfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Fabric"
          }
        },
        "id": {
          "type": "string"
        },
        "isSoftwareOnly": {
          "type": "boolean"
        },
        "softwareOnly": {
          "type": "string"
        }
      }
    },
    "ntpSettings": {
      "title": "ntpSettings",
      "type": "object",
      "properties": {
        "preferredNTPServer": {
          "type": "string"
        },
        "secondaryNTPServer": {
          "type": "string"
        }
      },
      "description": "ntpSettings"
    },
    "OperatingSystemSupport": {
      "title": "OperatingSystemSupport",
      "type": "object",
      "properties": {
        "versions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operatingSystem": {
          "type": "string"
        }
      },
      "description": "OperatingSystemSupport"
    },
    "OSRepository": {
      "title": "OSRepository",
      "type": "object",
      "description": "OSRepository",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "imageType": {
          "type": "string"
        },
        "sourcePath": {
          "type": "string"
        },
        "razorName": {
          "type": "string"
        },
        "inUse": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "repoType": {
          "type": "string",
          "enum": [
            "ISO",
            "OVA",
            "VIB",
            "YUM",
            "ZIPPR",
            "SMB"
          ]
        },
        "rcmPath": {
          "type": "string"
        },
        "firmwareRepository": {
          "$ref": "#/definitions/FirmwareRepository"
        },
        "metadata": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        },
        "fromWeb": {
          "type": "boolean"
        }
      }
    },
    "Partition": {
      "title": "Partition",
      "type": "object",
      "description": "Partition",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "networks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "networkObjects": {
          "type": "array",
          "x-deprecated": true,
          "items": {
            "$ref": "#/definitions/Network"
          }
        },
        "networkIpAddressList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkIpAddress"
          }
        },
        "minimum": {
          "type": "integer",
          "format": "int32"
        },
        "maximum": {
          "type": "integer",
          "format": "int32"
        },
        "lanMacAddress": {
          "type": "string"
        },
        "iscsiMacAddress": {
          "type": "string"
        },
        "iscsiIQN": {
          "type": "string"
        },
        "wwnn": {
          "type": "string"
        },
        "wwpn": {
          "type": "string"
        },
        "macAddress": {
          "type": "string"
        },
        "portNo": {
          "type": "integer",
          "format": "int32"
        },
        "partitionNo": {
          "type": "integer",
          "format": "int32"
        },
        "partitionIndex": {
          "type": "integer",
          "format": "int32"
        },
        "fqdd": {
          "type": "string"
        },
        "mirroredPort": {
          "type": "string"
        }
      }
    },
    "PhysicalDisk": {
      "title": "PhysicalDisk",
      "type": "object",
      "description": "PhysicalDisk",
      "properties": {
        "fqdd": {
          "type": "string"
        },
        "hotSpareStatus": {
          "type": "string",
          "enum": [
            "No",
            "Dedicated",
            "Global"
          ]
        },
        "mediaType": {
          "type": "string",
          "enum": [
            "SSD",
            "HDD",
            "NVMe",
            "ANY"
          ]
        },
        "driveNumber": {
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "deviceDescription": {
          "type": "string"
        },
        "raidStatus": {
          "type": "string"
        },
        "securityState": {
          "type": "string"
        },
        "busProtocol": {
          "type": "string"
        },
        "deviceSerial": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "remainingRatedWriteEndurance": {
          "type": "string"
        },
        "rollUpStatus": {
          "type": "string"
        },
        "predictiveFailureState": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "supportedEncryptionTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PhysicalType": {
      "title": "PhysicalType",
      "type": "object",
      "properties": {
        "values": {
          "type": "string",
          "enum": [
            "BLADE",
            "RACK",
            "SLED"
          ],
          "description": "Available values: BLADE, RACK, SLED"
        }
      },
      "description": "PhysicalType"
    },
    "ProcessorInventory": {
      "title": "ProcessorInventory",
      "type": "object",
      "description": "ProcessorInventory",
      "properties": {
        "present": {
          "type": "boolean"
        },
        "model": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "fqdd": {
          "type": "string"
        },
        "cores": {
          "type": "integer",
          "format": "int32"
        },
        "enabledCores": {
          "type": "integer",
          "format": "int32"
        },
        "maxClockSpeed": {
          "type": "integer",
          "format": "int32"
        },
        "currentClockSpeed": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "proxySettings": {
      "title": "proxySettings",
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "proxyServer": {
          "type": "string"
        },
        "userCredentialEnabled": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "password": {
          "type": "string"
        },
        "port": {
          "type": "string"
        }
      },
      "description": "proxySettings"
    },
    "RAIDConfiguration": {
      "title": "RAIDConfiguration",
      "type": "object",
      "description": "RAIDConfiguration",
      "properties": {
        "externalSsdHotSpares": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "externalVirtualDisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualDisk"
          }
        },
        "virtualDisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualDisk"
          }
        },
        "externalHddHotSpares": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hddHotSpares": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ssdHotSpares": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sizeToDiskMap": {
          "type": "object"
        }
      }
    },
    "RejectedServer": {
      "title": "RejectedServer",
      "type": "object",
      "description": "RejectedServer",
      "properties": {
        "refId": {
          "type": "string"
        },
        "serviceTag": {
          "type": "string"
        },
        "ipaddress": {
          "type": "string"
        },
        "reason": {
          "type": "string",
          "enum": [
            "RAID",
            "BAD_STATE",
            "UNMANAGED_STATE",
            "UPDATING_STATE",
            "PENDING_STATE",
            "NIC_CAPS",
            "SD_NOT_PRESENT",
            "LOCAL_FLASH_STORAGE_NOT_PRESENT",
            "BAD_MODEL",
            "ALREADY_DEPLOYED",
            "RESERVED_STATE",
            "CLONED_MODEL_MISMATCH",
            "FIRMWARE_NOT_COMPLIANT",
            "OTHER",
            "VSAN_NOT_SUPPORTED",
            "SCALEIO_NOT_SUPPORTED",
            "SERVICE_MODE",
            "NODE_INTERLEAVING_MISMATCH",
            "COMPRESSION",
            "INVALID_INVENTORY",
            "CLOUDLINK",
            "SED",
            "INSUFFICIENT_CPU_FOR_POWERFLEX"
          ]
        },
        "message": {
          "type": "string"
        }
      }
    },
    "SelectedNIC": {
      "title": "SelectedNIC",
      "type": "object",
      "properties": {
        "fqdd": {
          "type": "string"
        },
        "cardNumber": {
          "type": "integer"
        },
        "portNumber": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        }
      },
      "description": "SelectedNIC"
    },
    "SelectedServer": {
      "title": "SelectedServer",
      "type": "object",
      "description": "SelectedServer",
      "properties": {
        "refId": {
          "type": "string"
        },
        "serviceTag": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "nics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SelectedNIC"
          }
        },
        "componentId": {
          "type": "string"
        },
        "matchUnordered": {
          "type": "boolean"
        },
        "raidConfiguration": {
          "$ref": "#/definitions/RAIDConfiguration"
        },
        "exactMatch": {
          "type": "boolean"
        },
        "storageType": {
          "type": "string",
          "enum": [
            "NVME",
            "ALL_FLASH",
            "HYBRID",
            "HDD",
            "NONE"
          ]
        }
      }
    },
    "Server": {
      "title": "Server",
      "type": "object",
      "description": "Server",
      "properties": {
        "managementIP": {
          "type": "string"
        },
        "serviceTag": {
          "type": "string"
        },
        "assetTag": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "url": {
          "$ref": "#/definitions/Link"
        },
        "refId": {
          "type": "string"
        },
        "refType": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "deviceType": {
          "type": "string"
        },
        "health": {
          "type": "string",
          "enum": [
            "GREEN",
            "YELLOW",
            "RED",
            "UNKNOWN"
          ]
        },
        "healthStatusMessage": {
          "type": "string"
        },
        "powerState": {
          "type": "string",
          "enum": [
            "ON",
            "OFF",
            "UNKNOWN"
          ]
        },
        "discoveryTime": {
          "type": "string",
          "format": "date-time"
        },
        "inventoryTime": {
          "type": "string",
          "format": "date-time"
        },
        "idracName": {
          "type": "string"
        },
        "serverType": {
          "type": "string",
          "enum": [
            "BLADE",
            "RACK",
            "TOWER",
            "COMPELLENT"
          ]
        },
        "idracMACAddress": {
          "type": "string"
        },
        "operatingSystemName": {
          "type": "string"
        },
        "harddisk": {
          "type": "integer",
          "format": "int32"
        },
        "sdcard": {
          "type": "integer",
          "format": "int32"
        },
        "noOfControllers": {
          "type": "integer",
          "format": "int32"
        },
        "sdState": {
          "type": "string",
          "enum": [
            "SD_KNOWN",
            "SD_PRESENT",
            "SD_ABSENT"
          ]
        },
        "memory": {
          "type": "integer",
          "format": "int64"
        },
        "deviceId": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "credentialId": {
          "type": "string"
        },
        "currentJobName": {
          "type": "string"
        },
        "serverJobStatus": {
          "$ref": "#/definitions/ServerJobStatus"
        },
        "config": {
          "type": "string"
        },
        "bios": {
          "type": "string"
        },
        "bootSource": {
          "type": "string"
        },
        "controllers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Controller"
          }
        },
        "enclosures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Enclosure"
          }
        },
        "firmwareList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FirmwareInventory"
          }
        },
        "processorList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessorInventory"
          }
        },
        "memoryList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MemoryInventory"
          }
        },
        "iDracDCIMSensorList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IDracDCIMSensoreInventory"
          }
        },
        "networkInterfaceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogicalNetworkInterface"
          }
        }
      }
    },
    "ServerJobStatus": {
      "title": "ServerJobStatus",
      "type": "object",
      "description": "ServerJobStatus",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "jobType": {
          "type": "string"
        },
        "jobStatus": {
          "type": "string"
        },
        "jobName": {
          "type": "string"
        },
        "startedBy": {
          "type": "string"
        }
      }
    },
    "ServerNetworkObjects": {
      "title": "ServerNetworkObjects",
      "type": "object",
      "description": "ServerNetworkObjects",
      "properties": {
        "physicalType": {
          "$ref": "#/definitions/PhysicalType"
        },
        "razorPolicyName": {
          "type": "string"
        },
        "networkConfig": {
          "$ref": "#/definitions/NetworkConfiguration"
        },
        "relatedSwitches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "portConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortConnection"
          }
        },
        "fcInterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fc_interface"
          }
        },
        "fcoeInterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fc_interface"
          }
        },
        "serialNumber": {
          "type": "string"
        },
        "server": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ServiceTemplate": {
      "title": "ServiceTemplate",
      "type": "object",
      "description": "ServiceTemplate",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "firmwareRepository": {
          "$ref": "#/definitions/FirmwareRepository"
        },
        "draft": {
          "type": "boolean"
        },
        "templateName": {
          "type": "string"
        },
        "templateDescription": {
          "type": "string"
        },
        "assignedUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "allUsersAllowed": {
          "type": "boolean"
        },
        "templateValid": {
          "$ref": "#/definitions/ServiceTemplateValid"
        },
        "templateLocked": {
          "type": "boolean"
        },
        "templateVersion": {
          "type": "string"
        },
        "lastDeployedDate": {
          "type": "string",
          "format": "date-time"
        },
        "manageFirmware": {
          "type": "boolean"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTemplateComponent"
          }
        },
        "category": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "licenseRepository": {
          "$ref": "#/definitions/SoftwareLicenseRepository"
        },
        "templateType": {
          "type": "string"
        },
        "originalTemplateId": {
          "type": "string"
        },
        "inConfiguration": {
          "type": "boolean"
        },
        "configuration": {
          "$ref": "#/definitions/ConfigureTemplate"
        },
        "serverCount": {
          "type": "integer",
          "format": "int32"
        },
        "storageCount": {
          "type": "integer",
          "format": "int32"
        },
        "clusterCount": {
          "type": "integer",
          "format": "int32"
        },
        "serviceCount": {
          "type": "integer",
          "format": "int32"
        },
        "switchCount": {
          "type": "integer",
          "format": "int32"
        },
        "vmCount": {
          "type": "integer",
          "format": "int32"
        },
        "brownfieldTemplateType": {
          "type": "string",
          "enum": [
            "Ready",
            "Updating",
            "Update Failed",
            "Configuration Error",
            "Pending Configuration Template",
            "Pending Delete",
            "Pending Service Mode",
            "Pending",
            "Discovery Failed",
            "Deployment Error",
            "Delete Failed",
            "Deleted",
            "Deployed",
            "Deploying",
            "Cancelled",
            "Service Mode"
          ]
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Network"
          }
        },
        "blockServiceOperationsMap": {
          "type": "object"
        },
        "cachedParameterMap": {
          "type": "object"
        },
        "cachedComponentTypeMap": {
          "type": "object"
        },
        "networksMap": {
          "type": "object"
        },
        "useDefaultCatalog": {
          "type": "boolean"
        },
        "sdnasCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ServiceTemplateCategory": {
      "title": "ServiceTemplateCategory",
      "type": "object",
      "description": "ServiceTemplateCategory",
      "properties": {
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTemplateSetting"
          }
        },
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "parametersMap": {
          "type": "object"
        },
        "guid": {
          "type": "string"
        }
      }
    },
    "ServiceTemplateOption": {
      "title": "ServiceTemplateOption",
      "type": "object",
      "description": "ServiceTemplateOption",
      "properties": {
        "dependencyValue": {
          "type": "string",
          "x-deprecated": true
        },
        "dependencyTarget": {
          "type": "string",
          "x-deprecated": true
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTemplateDependency"
          }
        },
        "attributes": {
          "type": "object"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "ServiceTemplateSetting": {
      "title": "ServiceTemplateSetting",
      "type": "object",
      "description": "ServiceTemplateSetting",
      "properties": {
        "min": {
          "type": "integer"
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Network"
          }
        },
        "dependencyValue": {
          "type": "string"
        },
        "dependencyTarget": {
          "type": "string"
        },
        "optionsSortable": {
          "type": "boolean"
        },
        "step": {
          "type": "integer"
        },
        "requiredAtDeployment": {
          "type": "boolean"
        },
        "hideFromTemplate": {
          "type": "boolean"
        },
        "toolTip": {
          "type": "string"
        },
        "infoIcon": {
          "type": "boolean"
        },
        "maxLength": {
          "type": "integer"
        },
        "networkConfiguration": {
          "$ref": "#/definitions/NetworkConfiguration"
        },
        "raidConfiguration": {
          "$ref": "#/definitions/RAIDConfiguration"
        },
        "max": {
          "type": "integer"
        },
        "group": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTemplateOption"
          }
        },
        "generated": {
          "type": "boolean"
        },
        "required": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "BOOLEAN",
            "STRING",
            "PASSWORD",
            "INTEGER",
            "LIST",
            "TEXT",
            "NETWORKCONFIGURATION",
            "VMVIRTUALDISKCONFIGURATION",
            "ENUMERATED",
            "RAIDCONFIGURATION",
            "BIOSCONFIGURATION",
            "RADIO",
            "STATICTEXT",
            "NIOCCONFIGURATION",
            "STORAGEPOOLDISKSCONFIGURATION",
            "PROTECTIONDOMAINSETTINGS",
            "OSCREDENTIAL",
            "CREDENTIAL",
            "LICENSEFILE",
            "SCALEIOCREDENTIAL",
            "STATICROUTESCONFIGURATION",
            "FAULTSETSETTINGS",
            "VDSSETTINGSCONFIGURATION"
          ]
        },
        "readOnly": {
          "type": "boolean"
        },
        "displayName": {
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTemplateDependency"
          }
        },
        "networkIpAddressList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkIpAddress"
          }
        },
        "preservedForDeployment": {
          "type": "boolean"
        },
        "scaleIODiskConfiguration": {
          "$ref": "#/definitions/ScaleIODiskConfiguration"
        },
        "protectionDomainSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectionDomain"
          }
        },
        "faultSetSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FaultSet"
          }
        },
        "attributes": {
          "type": "object"
        },
        "vdsConfiguration": {
          "$ref": "#/definitions/VDSConfiguration"
        },
        "guid": {
          "type": "string"
        },
        "nodeSelection": {
          "$ref": "#/definitions/NodeSelection"
        }
      }
    },
    "ServiceTemplateValid": {
      "title": "ServiceTemplateValid",
      "type": "object",
      "description": "ServiceTemplateValid",
      "properties": {
        "valid": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsmDetailedMessage"
          }
        }
      }
    },
    "SoftwareBundle": {
      "title": "SoftwareBundle",
      "type": "object",
      "description": "SoftwareBundle",
      "properties": {
        "deviceType": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "softwareComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SoftwareComponent"
          }
        },
        "userBundlePath": {
          "type": "string"
        },
        "userBundle": {
          "type": "boolean"
        },
        "userBundleHashMd5": {
          "type": "string"
        },
        "deviceModel": {
          "type": "string"
        },
        "criticality": {
          "type": "string"
        },
        "fwRepositoryId": {
          "type": "string"
        },
        "bundleDate": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "link": {
          "$ref": "#/definitions/Link"
        },
        "createdBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "bundleType": {
          "type": "string",
          "enum": [
            "SOFTWARE",
            "FIRMWARE"
          ]
        }
      }
    },
    "SoftwareComponent": {
      "title": "SoftwareComponent",
      "type": "object",
      "description": "SoftwareComponent",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "deviceId": {
          "type": "string"
        },
        "componentId": {
          "type": "string"
        },
        "packageId": {
          "type": "string"
        },
        "dellVersion": {
          "type": "string"
        },
        "vendorVersion": {
          "type": "string"
        },
        "subDeviceId": {
          "type": "string"
        },
        "vendorId": {
          "type": "string"
        },
        "subVendorId": {
          "type": "string"
        },
        "hashMd5": {
          "type": "string"
        },
        "systemIDs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "category": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "componentType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "operatingSystem": {
          "type": "string"
        }
      }
    },
    "SRSConnectorSettings": {
      "title": "SRSConnectorSettings",
      "type": "object",
      "description": "SRSConnectorSettings",
      "properties": {
        "omeIP": {
          "type": "string"
        },
        "omeUser": {
          "type": "string"
        },
        "omePassword": {
          "type": "string"
        },
        "omeAlertFilter": {
          "type": "string"
        },
        "delayTimeH": {
          "type": "string"
        },
        "delayTimeM": {
          "type": "string"
        },
        "software_id": {
          "type": "string"
        },
        "solution_sn": {
          "type": "string"
        },
        "deviceType": {
          "type": "string"
        },
        "esrsHostPort": {
          "type": "string"
        },
        "registerUserID": {
          "type": "string"
        },
        "registerPassword": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "logLevel": {
          "type": "string"
        },
        "checkSSL": {
          "type": "boolean"
        },
        "registerIP": {
          "type": "string"
        },
        "restart": {
          "type": "string"
        },
        "suspend": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "deviceKeyId": {
          "type": "string"
        },
        "connectionType": {
          "type": "string"
        },
        "phoneHomeIp": {
          "type": "string"
        },
        "phoneHomePort": {
          "type": "string"
        },
        "srsConnection": {
          "type": "boolean"
        },
        "emailConnection": {
          "type": "boolean"
        },
        "emailServerConfig": {
          "$ref": "#/definitions/emailServerConfig"
        },
        "cloudIqEnable": {
          "type": "boolean"
        },
        "esrsHost": {
          "type": "string"
        }
      }
    },
    "SRSConnectorTestAlerts": {
      "title": "SRSConnectorTestAlerts",
      "type": "object",
      "properties": {
        "commandData": {
          "type": "string"
        }
      },
      "description": "SRSConnectorTestAlerts\n\n**NOTE:** The value is tst0001. It will fail if the value is changed."
    },
    "StaticNetworkConfiguration": {
      "title": "StaticNetworkConfiguration",
      "type": "object",
      "description": "StaticNetworkConfiguration",
      "properties": {
        "ipAddress": {
          "type": "string"
        },
        "subnet": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "primaryDns": {
          "type": "string"
        },
        "secondaryDns": {
          "type": "string"
        },
        "dnsSuffix": {
          "type": "string"
        },
        "ipRange": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpRange"
          }
        },
        "staticRoute": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticRoute"
          }
        },
        "staticRoutes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaticRoute"
          }
        }
      },
      "required": [
        "subnet",
        "gateway",
        "primaryDns",
        "dnsSuffix",
        "ipRange"
      ]
    },
    "testProxyResponse": {
      "title": "testProxyResponse",
      "type": "object",
      "properties": {
        "testProxyResult": {
          "type": "boolean"
        },
        "testProxyDescription": {
          "type": "string"
        }
      },
      "description": "testProxyResponse"
    },
    "timeZone": {
      "title": "timeZone",
      "type": "object",
      "properties": {
        "rawOffset": {
          "type": "integer"
        },
        "dSTSavings": {
          "type": "integer"
        },
        "displayName": {
          "type": "string"
        },
        "iD": {
          "type": "string"
        }
      },
      "description": "timeZone"
    },
    "TroubleshootingBundleParams": {
      "title": "TroubleshootingBundleParams",
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "bundleDes": {
          "type": "string",
          "description": "NOTE: The value is NETWORK."
        },
        "filepath": {
          "type": "string",
          "description": "NOTE: Multiple backslashes in the path is a known behavior. No changes are required."
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "description": "TroubleshootingBundleParams"
    },
    "UpdateSnmpAlerts": {
      "title": "UpdateSnmpAlerts",
      "type": "object",
      "description": "UpdateSnmpAlerts",
      "properties": {
        "selectedAlerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateSnmpAlertDetails"
          }
        },
        "acknowledged": {
          "type": "boolean"
        }
      },
      "required": [
        "selectedAlerts",
        "acknowledged"
      ]
    },
    "UsageIdList": {
      "title": "UsageIdList",
      "type": "object",
      "properties": {
        "usageIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "UsageIdList"
    },
    "User": {
      "title": "User",
      "type": "object",
      "description": "User",
      "properties": {
        "userName": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "groupName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "systemUser": {
          "type": "boolean"
        },
        "userSeqId": {
          "type": "integer",
          "format": "int64"
        },
        "updatePassword": {
          "type": "boolean"
        },
        "domainName": {
          "type": "string"
        },
        "groupDN": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "default": true
        },
        "link": {
          "$ref": "#/definitions/Link"
        },
        "role": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "userPreference": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VirtualDisk": {
      "title": "VirtualDisk",
      "type": "object",
      "description": "VirtualDisk",
      "properties": {
        "raidLevel": {
          "type": "string",
          "enum": [
            "raid0",
            "raid1",
            "raid5",
            "raid6",
            "raid10",
            "raid50",
            "raid60",
            "nonraid"
          ]
        },
        "physicalDisks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mediaType": {
          "type": "string",
          "enum": [
            "SSD",
            "HDD",
            "NVMe",
            "ANY"
          ]
        },
        "controller": {
          "type": "string"
        },
        "configuration": {
          "$ref": "#/definitions/VirtualDiskConfiguration"
        },
        "virtualDiskFqdd": {
          "type": "string"
        },
        "rollUpStatus": {
          "type": "string"
        },
        "controllerProductName": {
          "type": "string"
        },
        "encryptionType": {
          "type": "string"
        }
      }
    },
    "VirtualDiskConfiguration": {
      "title": "VirtualDiskConfiguration",
      "type": "object",
      "description": "VirtualDiskConfiguration",
      "properties": {
        "raidlevel": {
          "type": "string",
          "enum": [
            "raid0",
            "raid1",
            "raid5",
            "raid10",
            "raid50",
            "raid60",
            "nonraid"
          ]
        },
        "disktype": {
          "type": "string",
          "enum": [
            "requiressd",
            "requirehdd",
            "requirenvme",
            "first",
            "last",
            "any"
          ]
        },
        "numberofdisks": {
          "type": "integer",
          "format": "int32"
        },
        "comparator": {
          "type": "string",
          "enum": [
            "minimum",
            "maximum",
            "exact"
          ]
        },
        "id": {
          "type": "string"
        },
        "virtualDiskFqdd": {
          "type": "string"
        },
        "controllerFqdd": {
          "type": "string"
        }
      }
    },
    "VM": {
      "title": "VM",
      "type": "object",
      "properties": {
        "vmIpaddress": {
          "type": "string"
        },
        "vmManufacturer": {
          "type": "string"
        },
        "vmModel": {
          "type": "string"
        },
        "vmServiceTag": {
          "type": "string"
        },
        "certificateName": {
          "type": "string"
        }
      },
      "description": "VM"
    },
    "WizardStatus": {
      "title": "WizardStatus",
      "type": "object",
      "description": "WizardStatus",
      "properties": {
        "isConfigureCompleted": {
          "type": "boolean"
        },
        "isNetworkCompleted": {
          "type": "boolean"
        },
        "isTemplateCompleted": {
          "type": "boolean"
        },
        "seqId": {
          "type": "integer"
        },
        "isSetupCompleted": {
          "type": "boolean"
        },
        "showGettingStarted": {
          "type": "boolean"
        },
        "link": {
          "$ref": "#/definitions/Link"
        },
        "isSRSConfigured": {
          "type": "boolean"
        },
        "isNewRCMAvailable": {
          "type": "boolean"
        },
        "isNewApplianceVersionAvailable": {
          "type": "boolean"
        },
        "srsOrPhoneHomeConfigured": {
          "type": "boolean"
        }
      }
    },
    "DiscoveredDevices": {
      "title": "DiscoveredDevices",
      "type": "object",
      "description": "DiscoveredDevices",
      "properties": {
        "refId": {
          "type": "string"
        },
        "deviceType": {
          "type": "string",
          "enum": [
            "Server",
            "Rack Server",
            "Blade Server",
            "FX Server",
            "Tower Server",
            "Storage Group",
            "EM",
            "OME",
            "IPI Cabinet",
            "Cloudlink Center",
            "Powerflex Presentation Server",
            "Switch",
            "VM Manager",
            "Virtual Machine",
            "PowerFlex Gateway",
            "Unknown"
          ]
        },
        "serviceTag": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "iomCount": {
          "type": "integer"
        },
        "serverCount": {
          "type": "integer"
        },
        "model": {
          "type": "string"
        },
        "healthStatusMessage": {
          "type": "string"
        },
        "serverType": {
          "type": "string"
        },
        "credId": {
          "type": "string"
        },
        "discoverDeviceType": {
          "type": "string",
          "enum": [
            "CMC",
            "CMC_FX2",
            "IDRAC7",
            "IDRAC8",
            "IDRAC9",
            "UNKNOWN",
            "SERVER",
            "VRTX",
            "VCENTER",
            "FORCE10",
            "FORCE10_S4810",
            "FORCE10_S5000",
            "FORCE10_S6000",
            "FORCE10_S4048",
            "FORCE10_S5048",
            "FORCE10IOM",
            "FX2_IOM",
            "DELL_IOM_84",
            "BROCADE",
            "POWERCONNECT",
            "POWERCONNECT_N3000",
            "POWERCONNECT_N4000",
            "CISCONEXUS",
            "SCVMM",
            "BMC",
            "EM",
            "SCALEIO",
            "OME",
            "IPI",
            "RHVM",
            "CLC",
            "PRESENTATION_SERVER",
            "DELLSWITCHOS10"
          ]
        },
        "chassisId": {
          "type": "string"
        },
        "firmwareDeviceInventories": {
          "$ref": "#/definitions/FirmwareDeviceInventory"
        },
        "facts": {
          "type": "string"
        },
        "statusMessage": {
          "type": "string"
        },
        "deviceRefId": {
          "type": "string"
        },
        "healthState": {
          "type": "string"
        },
        "parentJobId": {
          "type": "string"
        },
        "unmanaged": {
          "type": "boolean"
        },
        "reserved": {
          "type": "boolean"
        },
        "serverPoolId": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "config": {
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "configuration": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Pending",
            "Connected",
            "Unsupported",
            "Inprogress",
            "Success",
            "Failed to discover",
            "Error discovering",
            "Ignore device at this time"
          ]
        },
        "refType": {
          "type": "string"
        },
        "vendor": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "AbstractCredential": {
      "title": "AbstractCredential",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "description": "AbstractCredential"
    },
    "AccelerationPool": {
      "title": "AccelerationPool",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "protectionDomainId": {
          "type": "string"
        },
        "mediaType": {
          "type": "string"
        },
        "rfcache": {
          "type": "boolean"
        }
      },
      "description": "AccelerationPool"
    },
    "AsmCredentialDTO": {
      "title": "AsmCredentialDTO",
      "type": "object",
      "description": "AsmCredentialDTO",
      "properties": {
        "link": {
          "$ref": "#/definitions/Link"
        },
        "credential": {
          "$ref": "#/definitions/AbstractCredential"
        },
        "references": {
          "$ref": "#/definitions/ReferencesDTO"
        }
      }
    },
    "AsmCredentialListDTO": {
      "title": "AsmCredentialListDTO",
      "type": "object",
      "properties": {
        "totalRecords": {
          "type": "integer"
        },
        "credentialList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsmCredentialDTO"
          }
        }
      },
      "description": "AsmCredentialListDTO"
    },
    "AsmDeployerLogEntry": {
      "title": "AsmDeployerLogEntry",
      "type": "object",
      "properties": {
        "level": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "executionId": {
          "type": "string"
        },
        "componentId": {
          "type": "string"
        }
      },
      "description": "AsmDeployerLogEntry"
    },
    "ASMTripleStringServiceTemplateComponentString": {
      "title": "ASMTripleStringServiceTemplateComponentString",
      "type": "object",
      "properties": {
        "left": {
          "type": "string"
        },
        "middle": {
          "$ref": "#/definitions/ServiceTemplateComponent"
        },
        "right": {
          "type": "string"
        }
      },
      "description": "ASMTripleStringServiceTemplateComponentString"
    },
    "ConfigureTemplate": {
      "title": "ConfigureTemplate",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigureTemplateCategory"
          }
        },
        "settingsMap": {
          "type": "object"
        },
        "categoriesMap": {
          "type": "object"
        }
      },
      "description": "ConfigureTemplate"
    },
    "ConfigureTemplateCategory": {
      "title": "ConfigureTemplateCategory",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "deviceType": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigureTemplateSetting"
          }
        },
        "parameterMap": {
          "type": "object"
        }
      },
      "description": "ConfigureTemplateCategory"
    },
    "Connection": {
      "title": "Connection",
      "type": "object",
      "properties": {
        "port": {
          "type": "string"
        },
        "switch": {
          "type": "string"
        },
        "switch_port": {
          "type": "string"
        }
      },
      "description": "Connection"
    },
    "CounterParameters": {
      "title": "CounterParameters",
      "type": "object",
      "properties": {
        "shortWindow": {
          "$ref": "#/definitions/Window"
        },
        "mediumWindow": {
          "$ref": "#/definitions/Window"
        },
        "longWindow": {
          "$ref": "#/definitions/Window"
        }
      },
      "description": "CounterParameters"
    },
    "Datastore": {
      "title": "Datastore",
      "type": "object",
      "description": "Datastore",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DeploymentValid": {
      "title": "DeploymentValid",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AsmDetailedMessage"
          }
        }
      },
      "description": "DeploymentValid"
    },
    "DeploymentValidationResponse": {
      "title": "DeploymentValidationResponse",
      "type": "object",
      "properties": {
        "nodes": {
          "type": "integer",
          "format": "int32"
        },
        "storagePools": {
          "type": "integer",
          "format": "int32"
        },
        "drivesPerStoragePool": {
          "type": "integer",
          "format": "int32"
        },
        "maxScalability": {
          "type": "integer",
          "format": "int32"
        },
        "virtualMachines": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfServiceVolumes": {
          "type": "integer",
          "format": "int32"
        },
        "canDeploy": {
          "type": "boolean"
        },
        "warningMessage": {
          "type": "string"
        },
        "storagePoolDiskType": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostnames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "newNodeDiskTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "noOfFaultSets": {
          "type": "integer",
          "format": "int32"
        },
        "nodesPerFaultSet": {
          "type": "integer",
          "format": "int32"
        },
        "protectionDomain": {
          "type": "string"
        },
        "diskTypeMismatch": {
          "type": "boolean"
        }
      },
      "description": "DeploymentValidationResponse"
    },
    "DevicePasswordUpdateDetails": {
      "title": "DevicePasswordUpdateDetails",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "credentialId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "description": "DevicePasswordUpdateDetails"
    },
    "DriveOperationRequest": {
      "title": "DriveOperationRequest",
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "string"
        },
        "nodeId": {
          "type": "string"
        },
        "fqdd": {
          "type": "string"
        },
        "vxFlexOsDriveName": {
          "type": "string"
        },
        "osDevice": {
          "type": "string"
        },
        "storagePool": {
          "type": "string"
        },
        "protectionDomain": {
          "type": "string"
        },
        "slot": {
          "type": "string"
        },
        "action": {
          "type": "string",
          "enum": [
            "REMOVE",
            "ADD",
            "DISMISS"
          ]
        }
      },
      "description": "DriveOperationRequest"
    },
    "ESRSFile": {
      "title": "ESRSFile",
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string"
        },
        "chkSum": {
          "type": "string"
        },
        "fileSize": {
          "type": "string"
        },
        "gatewaySerialNumber": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "fileDescription": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "description": "ESRSFile"
    },
    "FaultSet": {
      "title": "FaultSet",
      "type": "object",
      "properties": {
        "protectionDomainId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "description": "FaultSet"
    },
    "FirmwareComplianceReportComponent": {
      "title": "FirmwareComplianceComponent",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "currentVersion": {
          "$ref": "#/definitions/FirmwareComplianceReportComponentVersionInfo"
        },
        "targetVersion": {
          "$ref": "#/definitions/FirmwareComplianceReportComponentVersionInfo"
        },
        "vendor": {
          "type": "string"
        },
        "operatingSystem": {
          "type": "string"
        },
        "compliant": {
          "type": "boolean"
        },
        "software": {
          "type": "boolean"
        },
        "rpm": {
          "type": "boolean"
        },
        "oscompatible": {
          "type": "boolean"
        }
      },
      "description": "FirmwareComplianceComponent"
    },
    "FirmwareComplianceReportComponentVersionInfo": {
      "title": "FirmwareComplianceReportComponentVersionInfo",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "firmwareName": {
          "type": "string"
        },
        "firmwareType": {
          "type": "string"
        },
        "firmwareVersion": {
          "type": "string"
        },
        "firmwareLastUpdateTime": {
          "type": "string",
          "format": "date-time"
        },
        "firmwareLevel": {
          "type": "string"
        }
      },
      "description": "FirmwareComplianceReportComponentVersionInfo"
    },
    "FlexOSGatewayMigrateInfo": {
      "title": "FlexOSGatewayMigrateInfo",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "managementIp": {
          "type": "string"
        },
        "currentDatastore": {
          "$ref": "#/definitions/Datastore"
        },
        "availableDatastores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Datastore"
          }
        },
        "local": {
          "type": "boolean"
        }
      },
      "description": "FlexOSGatewayMigrateInfo"
    },
    "IDracDCIMSensoreInventory": {
      "title": "IDracDCIMSensoreInventory",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "creationClassName": {
          "type": "string"
        },
        "currentState": {
          "type": "string"
        },
        "elementName": {
          "type": "string"
        },
        "enabledState": {
          "type": "string"
        },
        "healthState": {
          "type": "string"
        },
        "operationalStatus": {
          "type": "string"
        },
        "otherSensorTypeDescription": {
          "type": "string"
        },
        "possibleStates": {
          "type": "string"
        },
        "primaryStatus": {
          "type": "string"
        },
        "requestedState": {
          "type": "string"
        },
        "sensorType": {
          "type": "string"
        },
        "systemCreationClassName": {
          "type": "string"
        },
        "systemName": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        }
      },
      "description": "IDracDCIMSensoreInventory"
    },
    "IpAddressDeploymentResponse": {
      "title": "IpAddressDeploymentResponse",
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/Deployment"
        },
        "componentId": {
          "type": "string"
        }
      },
      "description": "IpAddressDeploymentResponse"
    },
    "IPAddressList": {
      "title": "IPAddressList",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "description": "IPAddressList"
    },
    "JrafAsyncResponse": {
      "title": "JrafAsyncResponse",
      "type": "object",
      "properties": {
        "jobName": {
          "type": "string"
        }
      },
      "description": "JrafAsyncResponse"
    },
    "JrafDiscoveryRequestGroup": {
      "title": "JrafDiscoveryRequestGroup",
      "type": "object",
      "properties": {
        "link": {
          "$ref": "#/definitions/Link"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "discoveryRequestRefs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JrafDiscoveryRequestRef"
          }
        }
      },
      "description": "JrafDiscoveryRequestGroup"
    },
    "JrafDiscoveryRequestGroupList": {
      "title": "JrafDiscoveryRequestGroupList",
      "type": "object",
      "properties": {
        "discoveryRequestGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JrafDiscoveryRequestGroup"
          }
        }
      },
      "description": "JrafDiscoveryRequestGroupList"
    },
    "JrafDiscoveryRequestRef": {
      "title": "JrafDiscoveryRequestRef",
      "type": "object",
      "properties": {
        "refId": {
          "type": "string"
        },
        "refType": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "deviceType": {
          "type": "string"
        }
      },
      "description": "JrafDiscoveryRequestRef"
    },
    "JrafDiscoveryResult": {
      "title": "JrafDiscoveryResult",
      "type": "object",
      "properties": {
        "completeSuccess": {
          "type": "boolean"
        },
        "completeFailure": {
          "type": "boolean"
        }
      },
      "description": "JrafDiscoveryResult"
    },
    "JrafJobExecutionContext": {
      "title": "JrafJobExecutionContext",
      "type": "object",
      "properties": {
        "jobKey": {
          "$ref": "#/definitions/JrafJobKey"
        },
        "description": {
          "type": "string"
        },
        "refireCount": {
          "type": "integer",
          "format": "int32"
        },
        "fireTime": {
          "type": "string",
          "format": "date-time"
        },
        "scheduledFireTime": {
          "type": "string",
          "format": "date-time"
        },
        "previousFireTime": {
          "type": "string",
          "format": "date-time"
        },
        "nextFireTime": {
          "type": "string",
          "format": "date-time"
        },
        "recovering": {
          "type": "boolean"
        }
      },
      "description": "JrafJobExecutionContext"
    },
    "JrafJobExecutionContextList": {
      "title": "JrafJobExecutionContextList",
      "type": "object",
      "properties": {
        "jobExecutionContexts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JrafJobExecutionContext"
          }
        },
        "url": {
          "type": "string",
          "format": "uri"
        }
      },
      "description": "JrafJobExecutionContextList"
    },
    "JrafJobExecutionHistory": {
      "title": "JrafJobExecutionHistory",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri"
        },
        "jobName": {
          "type": "string"
        },
        "jobId": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "qrtzGroup": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "jobExecutionHistoryId": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "startedBy": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "elaspedTimeMillis": {
          "type": "integer",
          "format": "int64"
        },
        "executionDetails": {
          "$ref": "#/definitions/JrafJobExecutionHistoryDetailList"
        }
      },
      "description": "JrafJobExecutionHistory"
    },
    "JrafJobExecutionHistoryDetail": {
      "title": "JrafJobExecutionHistoryDetail",
      "type": "object",
      "properties": {
        "jobExecutionHistoryDetailId": {
          "type": "integer",
          "format": "int64"
        },
        "jobExecutionHistoryId": {
          "type": "integer",
          "format": "int64"
        },
        "lastUpdateTime": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "description": "JrafJobExecutionHistoryDetail"
    },
    "JrafJobExecutionHistoryDetailList": {
      "title": "JrafJobExecutionHistoryDetailList",
      "type": "object",
      "properties": {
        "jobExecutionHistoryDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JrafJobExecutionHistoryDetail"
          }
        }
      },
      "description": "JrafJobExecutionHistoryDetailList"
    },
    "JrafJobExecutionHistoryList": {
      "title": "JrafJobExecutionHistoryList",
      "type": "object",
      "properties": {
        "jobExecutionHistories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JrafJobExecutionHistory"
          }
        },
        "unpagedSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "JrafJobExecutionHistoryList"
    },
    "JrafJobGroupNames": {
      "title": "JrafJobGroupNames",
      "type": "object",
      "properties": {
        "groupNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "url": {
          "type": "string",
          "format": "uri"
        }
      },
      "description": "JrafJobGroupNames"
    },
    "JrafJobHistory": {
      "title": "JrafJobHistory",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "format": "uri"
        },
        "jobId": {
          "type": "integer",
          "format": "int64"
        },
        "jobName": {
          "type": "string"
        },
        "jobSelector": {
          "type": "string"
        },
        "qrtzName": {
          "type": "string"
        },
        "qrtzGroup": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "jobKey": {
          "$ref": "#/definitions/JrafJobKey"
        }
      },
      "description": "JrafJobHistory"
    },
    "JrafJobInfo": {
      "title": "JrafJobInfo",
      "type": "object",
      "properties": {
        "jobKey": {
          "$ref": "#/definitions/JrafJobKey"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "timeElapsed": {
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "progess": {
          "type": "string"
        },
        "statusmessage": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "deploymentId": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "deviceType": {
          "type": "string"
        }
      },
      "description": "JrafJobInfo"
    },
    "JrafJobKey": {
      "title": "JrafJobKey",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "group": {
          "type": "string"
        }
      },
      "description": "JrafJobKey"
    },
    "JrafJobTreeData": {
      "title": "JrafJobTreeData",
      "type": "object",
      "properties": {
        "execHistory": {
          "$ref": "#/definitions/JrafJobExecutionHistory"
        }
      },
      "description": "JrafJobTreeData"
    },
    "JrafJobTreeList": {
      "title": "JrafJobTreeList",
      "type": "object",
      "properties": {
        "trees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JrafJobTreeNode"
          }
        },
        "unpagedSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "JrafJobTreeList"
    },
    "JrafJobTreeNode": {
      "title": "JrafJobTreeNode",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/JrafJobTreeData"
        },
        "parent": {
          "$ref": "#/definitions/JrafJobTreeNode"
        }
      },
      "description": "JrafJobTreeNode"
    },
    "MDMUpdateRequest": {
      "title": "MDMUpdateRequest",
      "type": "object",
      "properties": {
        "newRoleSet": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ASMTripleStringServiceTemplateComponentString"
          }
        },
        "gateway": {
          "$ref": "#/definitions/ServiceTemplateComponent"
        },
        "deploymentId": {
          "type": "string"
        },
        "oldRoleSet": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ASMTripleStringServiceTemplateComponentString"
          }
        }
      },
      "description": "MDMUpdateRequest"
    },
    "MigrateVclsVmsRequest": {
      "title": "MigrateVclsVmsRequest",
      "type": "object",
      "properties": {
        "deploymentId": {
          "type": "string"
        },
        "protectionDomainId": {
          "type": "string"
        },
        "storagePoolId": {
          "type": "string"
        }
      },
      "description": "MigrateVclsVmsRequest"
    },
    "NetworkIpAddress": {
      "title": "NetworkIpAddress",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        }
      },
      "description": "NetworkIpAddress"
    },
    "PortConnection": {
      "title": "PortConnection",
      "type": "object",
      "properties": {
        "localDevice": {
          "type": "string"
        },
        "remoteDevice": {
          "type": "string"
        },
        "remoteDeviceId": {
          "type": "string"
        },
        "localPorts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remotePorts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "localDeviceType": {
          "type": "string"
        },
        "remoteDeviceType": {
          "type": "string"
        }
      },
      "description": "PortConnection"
    },
    "ProtectionDomain": {
      "title": "ProtectionDomain",
      "type": "object",
      "properties": {
        "general": {
          "$ref": "#/definitions/ProtectionDomainGeneral"
        },
        "statistics": {
          "$ref": "#/definitions/ProtectionDomainStatistics"
        },
        "storage_pool_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StoragePool"
          }
        },
        "sds_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SDS"
          }
        },
        "sdr_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SDR"
          }
        },
        "acceleration_pool": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccelerationPool"
          }
        }
      },
      "description": "ProtectionDomain"
    },
    "ProtectionDomainGeneral": {
      "title": "ProtectionDomainGeneral",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "protectionDomainState": {
          "type": "string"
        },
        "rebuildNetworkThrottlingInKbps": {
          "type": "integer",
          "format": "int64"
        },
        "rebalanceNetworkThrottlingInKbps": {
          "type": "integer",
          "format": "int64"
        },
        "overallIoNetworkThrottlingInKbps": {
          "type": "integer",
          "format": "int64"
        },
        "sdsDecoupledCounterParameters": {
          "$ref": "#/definitions/CounterParameters"
        },
        "sdsConfigurationFailureCounterParameters": {
          "$ref": "#/definitions/CounterParameters"
        },
        "mdmSdsCounterParameters": {
          "$ref": "#/definitions/CounterParameters"
        },
        "sdsSdsCounterParameters": {
          "$ref": "#/definitions/CounterParameters"
        },
        "rfcacheOpertionalMode": {
          "type": "string"
        },
        "rfcachePageSizeKb": {
          "type": "integer",
          "format": "int64"
        },
        "rfcacheMaxIoSizeKb": {
          "type": "integer",
          "format": "int64"
        },
        "sdsReceiveBufferAllocationFailuresCounterParameters": {
          "$ref": "#/definitions/CounterParameters"
        },
        "rebuildNetworkThrottlingEnabled": {
          "type": "boolean"
        },
        "rebalanceNetworkThrottlingEnabled": {
          "type": "boolean"
        },
        "overallIoNetworkThrottlingEnabled": {
          "type": "boolean"
        },
        "rfcacheEnabled": {
          "type": "boolean"
        }
      },
      "description": "ProtectionDomainGeneral"
    },
    "ProtectionDomainStatistics": {
      "title": "ProtectionDomainStatistics",
      "type": "object",
      "properties": {
        "unusedCapacityInKb": {
          "type": "integer",
          "format": "int64"
        },
        "numOfMappedToAllVolumes": {
          "type": "integer",
          "format": "int32"
        },
        "capacityAvailableForVolumeAllocationInKb": {
          "type": "integer",
          "format": "int64"
        },
        "capacityLimitInKb": {
          "type": "integer",
          "format": "int64"
        },
        "numOfUnmappedVolumes": {
          "type": "integer",
          "format": "int64"
        },
        "spareCapacityInKb": {
          "type": "integer",
          "format": "int64"
        },
        "numOfSds": {
          "type": "integer",
          "format": "int32"
        },
        "capacityInUseInKb": {
          "type": "integer",
          "format": "int64"
        },
        "numOfStoragePools": {
          "type": "integer",
          "format": "int32"
        },
        "numOfFaultSets": {
          "type": "integer",
          "format": "int32"
        },
        "maxCapacityInKb": {
          "type": "integer",
          "format": "int64"
        },
        "thinCapacityInUseInKb": {
          "type": "integer",
          "format": "int64"
        },
        "thickCapacityInUseInKb": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "ProtectionDomainStatistics"
    },
    "PuppetLogEntry": {
      "title": "PuppetLogEntry",
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source": {
          "type": "string"
        },
        "file": {
          "type": "string"
        },
        "line": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        }
      },
      "description": "PuppetLogEntry"
    },
    "ReferencesDTO": {
      "title": "ReferencesDTO",
      "type": "object",
      "properties": {
        "devices": {
          "type": "integer"
        },
        "policies": {
          "type": "integer"
        },
        "totalReferences": {
          "type": "integer"
        }
      },
      "description": "ReferencesDTO"
    },
    "SaveFlexOSGatewayMigrateInfoRequest": {
      "title": "SaveFlexOSGatewayMigrateInfoRequest",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "selectedDatastore": {
          "type": "string"
        }
      },
      "description": "SaveFlexOSGatewayMigrateInfoRequest"
    },
    "ScaleIODiskConfiguration": {
      "title": "ScaleIODiskConfiguration",
      "type": "object",
      "properties": {
        "scaleIOStoragePoolDisks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaleIOStoragePoolDisks"
          }
        }
      },
      "description": "ScaleIODiskConfiguration"
    },
    "ScaleIOStoragePoolDisks": {
      "title": "ScaleIOStoragePoolDisks",
      "type": "object",
      "properties": {
        "protectionDomainId": {
          "type": "string"
        },
        "protectionDomainName": {
          "type": "string"
        },
        "storagePoolId": {
          "type": "string"
        },
        "storagePoolName": {
          "type": "string"
        },
        "diskType": {
          "type": "string",
          "enum": [
            "SSD",
            "HDD",
            "NVME"
          ]
        },
        "physicalDiskFqdds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "virtualDiskFqdds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "ScaleIOStoragePoolDisks"
    },
    "ScheduleImportNetworksJobRequest": {
      "title": "ScheduleImportNetworksJobRequest",
      "type": "object",
      "properties": {
        "refId": {
          "type": "string"
        },
        "portGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "ScheduleImportNetworksJobRequest"
    },
    "SDR": {
      "title": "SDR",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "protectionDomainId": {
          "type": "string"
        },
        "softwareVersionInfo": {
          "type": "string"
        },
        "sdrState": {
          "type": "string"
        },
        "membershipState": {
          "type": "string"
        },
        "mdmConnectionState": {
          "type": "string"
        },
        "maintenanceState": {
          "type": "string"
        },
        "perfProfile": {
          "type": "string"
        },
        "ipList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SDSIPIInfo"
          }
        }
      },
      "description": "SDR"
    },
    "SDS": {
      "title": "SDS",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "protectionDomainId": {
          "type": "string"
        },
        "faultSetId": {
          "type": "string"
        },
        "softwareVersionInfo": {
          "type": "string"
        },
        "sdsState": {
          "type": "string"
        },
        "membershipState": {
          "type": "string"
        },
        "mdmConnectionState": {
          "type": "string"
        },
        "drlMode": {
          "type": "string"
        },
        "maintenanceState": {
          "type": "string"
        },
        "perfProfile": {
          "type": "string"
        },
        "onVmWare": {
          "type": "boolean"
        },
        "ipList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SDSIPIInfo"
          }
        }
      },
      "description": "SDS"
    },
    "SDSIPIInfo": {
      "title": "SDSIPIInfo",
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      },
      "description": "SDSIPIInfo"
    },
    "SDSNodeConfiguration": {
      "title": "SDSNodeConfiguration",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "ram": {
          "type": "integer",
          "format": "int32"
        },
        "cpu": {
          "type": "integer",
          "format": "int32"
        },
        "cpuPerSocket": {
          "type": "integer",
          "format": "int32"
        },
        "storage": {
          "type": "integer",
          "format": "int32"
        },
        "dataInterfaces": {
          "type": "object"
        },
        "cpuReservation": {
          "type": "integer",
          "format": "int32"
        },
        "cpuShares": {
          "type": "string"
        },
        "sufficientCPU": {
          "type": "boolean"
        },
        "RAM_COMPENSATION": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "SDSNodeConfiguration"
    },
    "ServerDiscoveryRequest": {
      "title": "ServerDiscoveryRequest",
      "type": "object",
      "properties": {
        "url": {
          "$ref": "#/definitions/Link"
        },
        "refId": {
          "type": "string"
        },
        "refType": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "deviceType": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "ipAddress": {
          "type": "string"
        },
        "credentialId": {
          "type": "string"
        },
        "quickDiscovery": {
          "type": "boolean"
        }
      },
      "description": "ServerDiscoveryRequest"
    },
    "ServerDiscoveryResponse": {
      "title": "ServerDiscoveryResponse",
      "type": "object",
      "properties": {
        "devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractServerDevice"
          }
        }
      },
      "description": "ServerDiscoveryResponse"
    },
    "ServiceModeRequest": {
      "title": "ServiceModeRequest",
      "type": "object",
      "properties": {
        "refIds": {
          "type": "string"
        },
        "action": {
          "type": "string",
          "enum": [
            "ENTER",
            "EXIT"
          ]
        },
        "option": {
          "type": "string"
        }
      },
      "description": "ServiceModeRequest",
      "x-examples": {
        "example-1": {
          "refIds": "string",
          "action": "ENTER",
          "option": "string"
        }
      }
    },
    "ServiceTemplateComponent": {
      "title": "ServiceTemplateComponent",
      "type": "object",
      "description": "ServiceTemplateComponent",
      "properties": {
        "id": {
          "type": "string"
        },
        "componentID": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "componentValid": {
          "$ref": "#/definitions/ServiceTemplateValid"
        },
        "name": {
          "type": "string"
        },
        "helpText": {
          "type": "string"
        },
        "clonedFromId": {
          "type": "string"
        },
        "teardown": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "subType": {
          "type": "string",
          "enum": [
            "CLASS",
            "TYPE",
            "HYPERVISOR",
            "HYPERCONVERGED",
            "COMPUTEONLY",
            "STORAGEONLY"
          ]
        },
        "relatedComponents": {
          "type": "object"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTemplateCategory"
          }
        },
        "brownfield": {
          "type": "boolean"
        },
        "puppetCertName": {
          "type": "string"
        },
        "managementIpAddress": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "asmGUID": {
          "type": "string"
        },
        "cloned": {
          "type": "boolean"
        },
        "configFile": {
          "type": "string"
        },
        "manageFirmware": {
          "type": "boolean"
        },
        "instances": {
          "type": "integer",
          "format": "int32"
        },
        "refId": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "osPuppetCertName": {
          "type": "string"
        },
        "clonedFromAsmGuid": {
          "type": "string"
        }
      }
    },
    "ServiceTemplateDependency": {
      "title": "ServiceTemplateDependency",
      "type": "object",
      "description": "ServiceTemplateDependency",
      "properties": {
        "dependencyTarget": {
          "type": "string"
        },
        "dependencyValue": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "ServiceTemplateExportRequest": {
      "title": "ServiceTemplateExportRequest",
      "type": "object",
      "properties": {
        "encryptionPassword": {
          "type": "string"
        },
        "useEncPwdFromBackup": {
          "type": "boolean"
        },
        "serviceTemplate": {
          "$ref": "#/definitions/ServiceTemplate"
        }
      },
      "description": "ServiceTemplateExportRequest"
    },
    "SnmpAlert": {
      "title": "SnmpAlert",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "index": {
          "type": "string"
        },
        "messageId": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "alertDetails": {
          "$ref": "#/definitions/SnmpAlertDetail"
        },
        "acknowledged": {
          "type": "boolean"
        },
        "hostname": {
          "type": "string"
        },
        "serviceTag": {
          "type": "string"
        }
      },
      "description": "SnmpAlert"
    },
    "SnmpAlertDetail": {
      "title": "SnmpAlertDetail",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "action": {
          "type": "string"
        }
      },
      "description": "SnmpAlertDetail"
    },
    "SnmpAlertResponse": {
      "title": "SnmpAlertResponse",
      "type": "object",
      "properties": {
        "alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SnmpAlert"
          }
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "error": {
          "type": "string"
        }
      },
      "description": "SnmpAlertResponse"
    },
    "SoftwareLicenseRepository": {
      "title": "SoftwareLicenseRepository",
      "type": "object",
      "description": "SoftwareLicenseRepository",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "CloudLink"
          ]
        },
        "diskLocation": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "templates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTemplate"
          }
        },
        "licenseData": {
          "type": "string"
        }
      }
    },
    "StaticRoute": {
      "title": "StaticRoute",
      "type": "object",
      "properties": {
        "staticRouteSourceNetworkId": {
          "type": "string"
        },
        "staticRouteDestinationNetworkId": {
          "type": "string"
        },
        "subnetMask": {
          "type": "string"
        },
        "destinationIpAddress": {
          "type": "string"
        }
      },
      "description": "StaticRoute"
    },
    "StoragePool": {
      "title": "StoragePool",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "rebuildIoPriorityPolicy": {
          "type": "string"
        },
        "rebalanceIoPriorityPolicy": {
          "type": "string"
        },
        "rebuildIoPriorityNumOfConcurrentIosPerDevice": {
          "type": "integer",
          "format": "int32"
        },
        "rebalanceIoPriorityNumOfConcurrentIosPerDevice": {
          "type": "integer",
          "format": "int32"
        },
        "rebuildIoPriorityBwLimitPerDeviceInKbps": {
          "type": "integer",
          "format": "int64"
        },
        "rebalanceIoPriorityBwLimitPerDeviceInKbps": {
          "type": "integer",
          "format": "int64"
        },
        "rebuildIoPriorityAppIopsPerDeviceThreshold": {
          "type": "string"
        },
        "rebalanceIoPriorityAppIopsPerDeviceThreshold": {
          "type": "string"
        },
        "rebuildIoPriorityAppBwPerDeviceThresholdInKbps": {
          "type": "integer",
          "format": "int64"
        },
        "rebuildIoPriorityQuietPeriodInMsec": {
          "type": "integer",
          "format": "int64"
        },
        "rebalanceIoPriorityQuietPeriodInMsec": {
          "type": "integer",
          "format": "int64"
        },
        "zeroPaddingEnabled": {
          "type": "boolean"
        },
        "backgroundScannerMode": {
          "type": "string"
        },
        "backgroundScannerBWLimitKBps": {
          "type": "integer",
          "format": "int64"
        },
        "useRmcache": {
          "type": "boolean"
        },
        "protectionDomainId": {
          "type": "string"
        },
        "useRfcache": {
          "type": "boolean"
        },
        "sparePercentage": {
          "type": "integer",
          "format": "int32"
        },
        "rmcacheWriteHandlingMode": {
          "type": "string"
        },
        "checksumEnabled": {
          "type": "boolean"
        },
        "rebuildEnabled": {
          "type": "boolean"
        },
        "rebalanceEnabled": {
          "type": "boolean"
        },
        "numOfParallelRebuildRebalanceJobsPerDevice": {
          "type": "integer",
          "format": "int32"
        },
        "capacityAlertHighThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "capacityAlertCriticalThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "statistics": {
          "$ref": "#/definitions/StroagePoolStatistics"
        },
        "dataLayout": {
          "type": "string"
        },
        "replicationCapacityMaxRatio": {
          "type": "string"
        },
        "mediaType": {
          "type": "string",
          "enum": [
            "HDD",
            "SDD",
            "PCI_FLASH",
            "NVRAM"
          ]
        },
        "mediaTypeFromDiskType": {
          "type": "string",
          "enum": [
            "SSD",
            "HDD",
            "NVME"
          ]
        },
        "disk_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StoragePoolDisk"
          }
        },
        "volume_list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          }
        },
        "fglAccpId": {
          "type": "string"
        },
        "rebalanceIoPriorityAppBwPerDeviceThresholdInKbps": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "StoragePool"
    },
    "StoragePoolDisk": {
      "title": "StoragePoolDisk",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "errorState": {
          "type": "string"
        },
        "sdsId": {
          "type": "string"
        },
        "deviceState": {
          "type": "string"
        },
        "capacityLimitInKb": {
          "type": "integer",
          "format": "int64"
        },
        "maxCapacityInKb": {
          "type": "integer",
          "format": "int64"
        },
        "storagePoolId": {
          "type": "string"
        },
        "deviceCurrentPathName": {
          "type": "string"
        },
        "deviceOriginalPathName": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "vendorName": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        }
      },
      "description": "StoragePoolDisk"
    },
    "StreamingResponseBody": {
      "title": "StreamingResponseBody",
      "type": "object",
      "description": "StreamingResponseBody"
    },
    "StroagePoolStatistics": {
      "title": "StroagePoolStatistics",
      "type": "object",
      "properties": {
        "numOfDevices": {
          "type": "integer",
          "format": "int32"
        },
        "unusedCapacityInKb": {
          "type": "integer",
          "format": "int64"
        },
        "numOfVolumes": {
          "type": "integer",
          "format": "int32"
        },
        "numOfMappedToAllVolumes": {
          "type": "integer",
          "format": "int32"
        },
        "capacityAvailableForVolumeAllocationInKb": {
          "type": "integer",
          "format": "int64"
        },
        "volumeAllocationLimitInKb": {
          "type": "integer",
          "format": "int64"
        },
        "capacityLimitInKb": {
          "type": "integer",
          "format": "int64"
        },
        "numOfUnmappedVolumes": {
          "type": "integer",
          "format": "int32"
        },
        "spareCapacityInKb": {
          "type": "integer",
          "format": "int64"
        },
        "capacityInUseInKb": {
          "type": "integer",
          "format": "int64"
        },
        "maxCapacityInKb": {
          "type": "integer",
          "format": "int64"
        }
      },
      "description": "StroagePoolStatistics"
    },
    "SwitchConnectivity": {
      "title": "SwitchConnectivity",
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Connection"
          }
        }
      },
      "description": "SwitchConnectivity"
    },
    "SwitchInterfacesDetails": {
      "title": "SwitchInterfacesDetails",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "puppetCertName": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string"
        },
        "assetTag": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "switchInterfaceNetworks": {
          "type": "object"
        },
        "mtuSizeMap": {
          "type": "object"
        }
      },
      "description": "SwitchInterfacesDetails"
    },
    "UpdateDeviceInventoryResponse": {
      "title": "UpdateDeviceInventoryResponse",
      "type": "object",
      "properties": {
        "jobName": {
          "type": "string"
        }
      },
      "description": "UpdateDeviceInventoryResponse"
    },
    "UpdatePasswordChangeRequest": {
      "title": "UpdatePasswordChangeRequest",
      "type": "object",
      "properties": {
        "devicePasswordUpdateDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DevicePasswordUpdateDetails"
          }
        }
      },
      "description": "UpdatePasswordChangeRequest"
    },
    "UpdateSnmpAlertDetails": {
      "title": "UpdateSnmpAlertDetails",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "index": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      },
      "description": "UpdateSnmpAlertDetails"
    },
    "VclsVmsMigrateInfo": {
      "title": "VclsVmsMigrateInfo",
      "type": "object",
      "properties": {
        "vclsVms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "currentStoragePools": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "currentDatastores": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "destinationDatastores": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "protectionDomains": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectionDomain"
          }
        }
      },
      "description": "VclsVmsMigrateInfo"
    },
    "VDSConfiguration": {
      "title": "VDSConfiguration",
      "type": "object",
      "properties": {
        "datacenter": {
          "$ref": "#/definitions/VDSDatacenter"
        },
        "portGroupOption": {
          "type": "string"
        },
        "portGroupCreationOption": {
          "type": "string"
        },
        "vdsSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VDSSetting"
          }
        },
        "vdsNetworkMtuSizeConfiguration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VDSNetworkMTUSizeConfiguration"
          }
        },
        "vdsNetworkMTUSizeConfiguration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VDSNetworkMTUSizeConfiguration"
          }
        }
      },
      "description": "VDSConfiguration"
    },
    "VDSDatacenter": {
      "title": "VDSDatacenter",
      "type": "object",
      "properties": {
        "vcenterId": {
          "type": "string"
        },
        "datacenterId": {
          "type": "string"
        },
        "datacenterName": {
          "type": "string"
        }
      },
      "description": "VDSDatacenter"
    },
    "VDSNetworkMTUSizeConfiguration": {
      "title": "VDSNetworkMTUSizeConfiguration",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "description": "VDSNetworkMTUSizeConfiguration"
    },
    "VDSSetting": {
      "title": "VDSSetting",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "portGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VDSPortGroup"
          }
        }
      },
      "description": "VDSSetting"
    },
    "Volume": {
      "title": "Volume",
      "type": "object",
      "description": "Volume",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "volumeType": {
          "type": "string"
        },
        "storagePoolId": {
          "type": "string"
        },
        "dataLayout": {
          "type": "string"
        },
        "compressionMethod": {
          "type": "string"
        },
        "sizeInKb": {
          "type": "integer",
          "format": "int64"
        },
        "mappedSdcInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeSdcInfo"
          }
        }
      }
    },
    "VolumeActionRequest": {
      "title": "VolumeActionRequest",
      "type": "object",
      "properties": {
        "volumeRequests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeRequest"
          }
        }
      },
      "description": "VolumeActionRequest"
    },
    "VolumeRequest": {
      "title": "VolumeRequest",
      "type": "object",
      "properties": {
        "volumeRequests": {
          "type": "string",
          "enum": [
            "AUTO_GENERATE",
            "EXISTING",
            "RESIZE",
            "NEW"
          ]
        },
        "volumeNameTemplate": {
          "type": "string"
        },
        "datastoreNameTemplate": {
          "type": "string"
        },
        "numAutoGenerateVolumes": {
          "type": "integer",
          "format": "int32"
        },
        "resizeDataStore": {
          "type": "boolean"
        },
        "volume": {
          "$ref": "#/definitions/Volume"
        }
      },
      "description": "VolumeRequest"
    },
    "VolumeSdcInfo": {
      "title": "VolumeSdcInfo",
      "type": "object",
      "properties": {
        "sdcIp": {
          "type": "string"
        },
        "sdcId": {
          "type": "string"
        },
        "limitBwInMbps": {
          "type": "integer"
        },
        "limitIops": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "VolumeSdcInfo"
    },
    "VxRackFlexAlertEmailServerConfig": {
      "title": "VxRackFlexAlertEmailServerConfig",
      "type": "object",
      "properties": {
        "emailServerType": {
          "type": "string"
        },
        "emailServerIp": {
          "type": "string"
        },
        "emailServerPort": {
          "type": "integer",
          "format": "int32"
        },
        "emailSenderAddress": {
          "type": "string"
        },
        "emailUserName": {
          "type": "string"
        },
        "emailPassword": {
          "type": "string"
        },
        "emailRecipientAddress_1": {
          "type": "string"
        },
        "emailRecipientAddress_2": {
          "type": "string"
        },
        "emailRecipientAddress_3": {
          "type": "string"
        },
        "emailRecipientAddress_4": {
          "type": "string"
        },
        "emailRecipientAddress_5": {
          "type": "string"
        },
        "credentialId": {
          "type": "string"
        }
      },
      "description": "VxRackFlexAlertEmailServerConfig"
    },
    "Window": {
      "title": "Window",
      "type": "object",
      "properties": {
        "threshold": {
          "type": "integer",
          "format": "int32"
        },
        "windowSizeInSec": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Window"
    },
    "Appliance": {
      "title": "Appliance",
      "type": "object",
      "properties": {
        "databaseBackupSettings": {
          "$ref": "#/definitions/DatabaseBackupSettings"
        },
        "ntpSetting": {
          "$ref": "#/definitions/NTPSetting"
        },
        "proxySetting": {
          "$ref": "#/definitions/ProxySetting"
        },
        "timeZone": {
          "$ref": "#/definitions/TimeZone"
        },
        "wizardStatus": {
          "$ref": "#/definitions/WizardStatus"
        },
        "asmVersion": {
          "$ref": "#/definitions/ASMVersion"
        },
        "applianceSettings": {
          "$ref": "#/definitions/ApplianceSettings"
        }
      },
      "description": "Appliance",
      "x-examples": {
        "example-1": {
          "databaseBackupSettings": {
            "sharePath": "string",
            "shareUsername": "string",
            "sharePassword": "string",
            "encryptionPassword": "string",
            "shareDomain": "string",
            "isRestore": true,
            "valid": true
          },
          "ntpSetting": {
            "preferredNTPServer": "string",
            "secondaryNTPServer": "string"
          },
          "proxySetting": {
            "enabled": true,
            "proxyServer": "string",
            "port": "string",
            "userCredentialEnabled": true,
            "userName": "string",
            "password": "string"
          },
          "timeZone": {
            "timeZoneId": "string",
            "timeZone": "string"
          },
          "wizardStatus": {
            "seqId": 0,
            "isSetupCompleted": true,
            "showGettingStarted": true,
            "isConfigureCompleted": true,
            "isTemplateCompleted": true,
            "isNetworkCompleted": true,
            "srsOrPhoneHomeConfigured": true,
            "link": {
              "title": "string",
              "href": "string",
              "rel": "string",
              "type": "string"
            },
            "isSRSConfigured": true,
            "isNewRCMAvailable": true,
            "isNewApplianceVersionAvailable": true
          },
          "asmVersion": {
            "buildNumber": "string",
            "version": "string"
          },
          "applianceSettings": {
            "applianceSettings": [
              {
                "id": "string",
                "name": "string",
                "value": "string",
                "createdDate": "2021-03-05T14:57:09.654Z",
                "createdBy": "string",
                "updatedDate": "2021-03-05T14:57:09.654Z",
                "updatedBy": "string"
              }
            ]
          }
        }
      }
    },
    "ApplianceHealth": {
      "title": "ApplianceHealth",
      "type": "object",
      "properties": {
        "health": {
          "type": "string",
          "enum": [
            "RED",
            "GREEN",
            "YELLOW",
            "UNKNOWN"
          ]
        },
        "healthMessage": {
          "type": "string"
        },
        "fullestPartitionName": {
          "type": "string"
        },
        "fullestPartitionUtilization": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "ApplianceHealth"
    },
    "ApplianceSetting": {
      "title": "ApplianceSetting",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        }
      },
      "description": "ApplianceSetting"
    },
    "ApplianceSettings": {
      "title": "ApplianceSettings",
      "type": "object",
      "properties": {
        "applianceSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplianceSetting"
          }
        }
      },
      "description": "ApplianceSettings"
    },
    "ASMVersion": {
      "title": "ASMVersion",
      "type": "object",
      "properties": {
        "buildNumber": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "description": "ASMVersion",
      "x-examples": {}
    },
    "DatabaseBackupSettings": {
      "title": "DatabaseBackupSettings",
      "type": "object",
      "properties": {
        "sharePath": {
          "type": "string"
        },
        "shareUsername": {
          "type": "string"
        },
        "sharePassword": {
          "type": "string"
        },
        "encryptionPassword": {
          "type": "string"
        },
        "shareDomain": {
          "type": "string"
        },
        "isRestore": {
          "type": "boolean"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "required": [
        "sharePath",
        "encryptionPassword"
      ],
      "description": "DatabaseBackupSettings"
    },
    "NTPSetting": {
      "title": "NTPSetting",
      "type": "object",
      "properties": {
        "preferredNTPServer": {
          "type": "string"
        },
        "secondaryNTPServer": {
          "type": "string"
        }
      },
      "description": "NTPSetting"
    },
    "ProxySetting": {
      "title": "ProxySetting",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "proxyServer": {
          "type": "string"
        },
        "port": {
          "type": "string"
        },
        "userCredentialEnabled": {
          "type": "boolean"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "description": "ProxySetting"
    },
    "TimeZone": {
      "title": "TimeZone",
      "type": "object",
      "properties": {
        "timeZoneId": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      },
      "description": "TimeZone"
    },
    "TimeZoneInfo": {
      "title": "TimeZoneInfo",
      "type": "object",
      "properties": {
        "timeZoneId": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      },
      "description": "TimeZoneInfo"
    },
    "GetNetworksRequest": {
      "title": "GetNetworksRequest",
      "type": "object",
      "properties": {
        "sort": {
          "type": "string"
        },
        "filter": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offset": {
          "type": "integer",
          "format": "int32"
        },
        "maxRecords": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "GetNetworksRequest"
    },
    "ImportNetworksRequest": {
      "title": "ImportNetworksRequest",
      "type": "object",
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Network"
          }
        }
      },
      "description": "ImportNetworksRequest"
    },
    "IpAddressList": {
      "title": "IpAddressList",
      "type": "object",
      "properties": {
        "ipAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "IpAddressList"
    },
    "NetworkUsage": {
      "title": "NetworkUsage",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "networkId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "networkId",
        "resourceType",
        "resourceId",
        "resourceName"
      ],
      "description": "NetworkUsage"
    },
    "UpgradeStatus": {
      "title": "UpgradeStatus",
      "type": "object",
      "properties": {
        "upgrading": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        }
      },
      "description": "UpgradeStatus"
    },
    "LicenseDetails": {
      "title": "LicenseDetails",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "description": "LicenseDetails"
    },
    "UploadLicenseRequest": {
      "title": "UploadLicenseRequest",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "description": "UploadLicenseRequest"
    },
    "AvailableTimeZones": {
      "title": "AvailableTimeZones",
      "type": "object",
      "properties": {
        "availableTimeZones": {
          "$ref": "#/definitions/TimeZoneInfo"
        }
      },
      "description": "AvailableTimeZones"
    },
    "VDSPortGroup": {
      "title": "VDSPortGroup",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "vlan": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "description": "VDSPortGroup"
    },
    "ServiceReference": {
      "title": "ServiceReference",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "description": "ServiceReference"
    },
    "DeviceJobStatus": {
      "title": "DeviceJobStatus",
      "type": "object",
      "properties": {
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "jobType": {
          "type": "string"
        },
        "jobName": {
          "type": "string"
        }
      },
      "description": "DeviceJobStatus"
    },
    "AbstractServerDevice": {
      "title": "AbstractServerDevice",
      "type": "object",
      "properties": {
        "url": {
          "$ref": "#/definitions/Link"
        },
        "refId": {
          "type": "string"
        },
        "refType": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "deviceType": {
          "type": "string"
        }
      },
      "description": "AbstractServerDevice"
    },
    "ConfigureTemplateSetting": {
      "title": "ConfigureTemplateSetting",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "toolTip": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "hideFromTemplate": {
          "type": "boolean"
        },
        "deviceType": {
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigureTemplateDependency"
          }
        },
        "group": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "generated": {
          "type": "boolean"
        },
        "infoIcon": {
          "type": "boolean"
        },
        "step": {
          "type": "integer",
          "format": "int32"
        },
        "maxLength": {
          "type": "integer",
          "format": "int32"
        },
        "min": {
          "type": "integer",
          "format": "int32"
        },
        "max": {
          "type": "integer",
          "format": "int32"
        },
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Network"
          }
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigureTemplateOption"
          }
        },
        "optionsSortable": {
          "type": "boolean"
        }
      },
      "description": "ConfigureTemplateSetting"
    },
    "ConfigureTemplateDependency": {
      "title": "ConfigureTemplateDependency",
      "type": "object",
      "properties": {
        "dependencyTarget": {
          "type": "string"
        },
        "dependencyValue": {
          "type": "string"
        }
      },
      "description": "ConfigureTemplateDependency"
    },
    "ConfigureTemplateOption": {
      "title": "ConfigureTemplateOption",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigureTemplateDependency"
          }
        },
        "attributes": {
          "type": "object"
        }
      },
      "description": "ConfigureTemplateOption"
    },
    "CompatibilityManagementSettings": {
      "title": "CompatibilityManagementSettings",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "repositoryPath": {
          "type": "string"
        },
        "currentVersion": {
          "type": "string"
        },
        "availableVersion": {
          "type": "string"
        },
        "compatibilityData": {
          "type": "string"
        },
        "compatibilityDataBytes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ComplianceFileCompatibility": {
      "title": "ComplianceFileCompatibility",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "preferredComplianceFile": {
          "type": "string"
        },
        "compatibility": {
          "type": "string"
        },
        "recommendedVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deploymentId": {
          "type": "string"
        },
        "defaultRepo": {
          "type": "boolean"
        }
      }
    },
    "Paging": {
      "title": "Paging",
      "type": "object",
      "properties": {
        "total_instances": {
          "type": "integer",
          "format": "int32"
        },
        "total_matching_instances": {
          "type": "integer",
          "format": "int64"
        },
        "first": {
          "type": "string"
        },
        "last": {
          "type": "string"
        },
        "next": {
          "type": "string"
        },
        "prev": {
          "type": "string"
        }
      }
    },
    "VolumeList": {
      "title": "VolumeList",
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/Paging"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          }
        }
      }
    },
    "DatastoreList": {
      "title": "DatastoreList",
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/Paging"
        },
        "datastores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Datastore"
          }
        }
      }
    },
    "ServiceTemplateComponentList": {
      "title": "ServiceTemplateComponentList",
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/Paging"
        },
        "serviceTemplateComponents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceTemplateComponent"
          }
        }
      }
    },
    "NumberList": {
      "title": "NumberList",
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/Paging"
        },
        "numbers": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "next": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "FilterNodesRequest": {
      "title": "FilterNodesRequest",
      "type": "object",
      "properties": {
        "poolIds": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "serviceTag": {
          "type": "string"
        },
        "managementIpAddress": {
          "type": "string"
        }
      }
    },
    "DeploymentList": {
      "title": "DeploymentList",
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/Paging"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        }
      }
    },
    "NodeSelection": {
      "title": "NodeSelection",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "serviceTag": {
          "type": "string"
        },
        "mgmtIpAddress": {
          "type": "string"
        }
      }
    },
    "CoreLCMStatus": {
      "title": "CoreLCMStatus",
      "type": "object",
      "properties": {
        "lcmStatus": {
          "type": "string",
          "enum": [
            "INITIALIZING",
            "READY",
            "DOWNLOADING",
            "WAITING_FOR_BACKUP",
            "EXECUTING_IMPORT",
            "WAITING_FOR_MIGRATE",
            "MIGRATING",
            "UPDATING_INVENTORY",
            "UPDATING_TEMPLATES",
            "UPGRADING",
            "FAILED",
            "WAITING_FOR_CLUSTER_RESTORE",
            "WAITING_FOR_CERTIFICATE_UPLOAD",
            "WAITING_FOR_CERTIFICATE_DELETE"
          ]
        },
        "clusterVersion": {
          "type": "string"
        },
        "clusterBuild": {
          "type": "string"
        }
      },
      "x-examples": {
        "example-1": {
          "lcmStatus": "READY",
          "clusterVersion": "4.0.0",
          "clusterBuild": "65"
        }
      }
    },
    "ServiceTemplateList": {
      "title": "ServiceTemplateList",
      "type": "object",
      "properties": {
        "paging": {
          "$ref": "#/definitions/Paging"
        },
        "serviceTemplate": {
          "$ref": "#/definitions/ServiceTemplate"
        }
      }
    }
  },
  "basePath": "/Api/V1"
}